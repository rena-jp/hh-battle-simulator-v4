// ==UserScript==
// @name         Hentai Heroes Battle Simulator v4
// @namespace    https://github.com/rena-jp/hh-battle-simulator-v4
// @version      4.13.9
// @description  Add a battle simulator to Hentai Heroes and related games
// @author       rena
// @match        https://*.hentaiheroes.com/*
// @match        https://nutaku.haremheroes.com/*
// @match        https://*.gayharem.com/*
// @match        https://*.comixharem.com/*
// @match        https://*.hornyheroes.com/*
// @match        https://*.pornstarharem.com/*
// @match        https://*.transpornstarharem.com/*
// @grant        none
// @run-at       document-body
// @updateURL    https://github.com/rena-jp/hh-battle-simulator-v4/raw/main/dist/hh-battle-simulator-v4.meta.js
// @downloadURL  https://github.com/rena-jp/hh-battle-simulator-v4/raw/main/dist/hh-battle-simulator-v4.user.js
// ==/UserScript==

(()=>{"use strict";const e=new Promise((e=>{const t=()=>{null!=window.$&&e()};"loading"===document.readyState?window.addEventListener("DOMContentLoaded",t,!0):t()})),t=new Promise((t=>{e.then((()=>{queueMicrotask(t)}))})),n=new Promise((e=>{t.then((()=>{$(e)}))}));function a(){return e}function o(){return t}function s(){return n}function r(e,t){const{team:n}=e,{girls:a}=n,o=Object.fromEntries(n.synergies.map((e=>[e.element.type,e.bonus_multiplier])));let s=.3*e.chance/(e.chance+t.chance);s+=o.stone;const r=["darkness","light","psychic"],i=t.team.theme;n.theme_elements.forEach((e=>{r.includes(e.type)&&i.includes(e.domination)&&(s+=.2)}));const l=e=>a.map((t=>t.skills[e]?.skill.percentage_value??0)).reduce(((e,t)=>e+t),0)/100,c=a[0]?.skills,u=(e,t)=>{const n=e?.[t]?.skill;return null==n?0:(n.percentage_value??parseFloat(n.display_value_text??0))/100},m=e=>u(c,e),d=Math.ceil(e.remaining_ego),p=m(11),h=m(12),f=m(13),g=m(14),b=u(t.team.girls[0]?.skills,14);return{attack:e.damage,defense:e.defense,ego:d,baseHitChance:1-s,critHitChance:s,critMultiplier:2+o.fire,healing:o.water,attackMultiplier:1+l(9),defenseMultiplier:1+l(10),stun:p,shield:h,reflect:f,execute:g,shieldEndurance:Math.ceil(d*h),deathThreshold:d*b}}function i(e,t){return{player:r(e,t),opponent:r(t,e)}}function l(e,t){const n=["fire","nature","stone","sun","water"];let a=1;return e.theme_elements.forEach((e=>{t.theme.includes(e.domination)&&n.includes(e.domination)&&(a+=.1)})),a}function c(e,t,n=1){const a=l(e,t),o=a*n,s=a,i=Object.fromEntries(t.synergies.map((e=>[e.element.type,e.bonus_multiplier]))).sun,c=e.caracs;return r({damage:Math.ceil(c.damage*o),defense:c.defense-Math.ceil(c.defense*i),remaining_ego:Math.ceil(c.ego*s),chance:c.chance,team:e},{chance:t.caracs.chance,team:t})}const u=(()=>{const e={FastChance:function(e,n){const a=t(e,n,(function(e,t){return 1}),(function(e,t){return 0}),(function(e,t,n,a){return e*t+n*a}));return Math.max(0,Math.min(1,a))},FastPoints:function(e,n){const a=t(e,n,(function(e,t){return Math.ceil(10*e/t)+15}),(function(e,t){return Math.ceil(10*(t-e)/t)+3}),(function(e,t,n,a){return e*t+n*a}));return Math.max(3,Math.min(25,a))},Chance:function(e,n){const a=t(e,n,(function(e,t){return{chance:1,alwaysWin:!0,neverWin:!1}}),(function(e,t){return{chance:0,alwaysWin:!1,neverWin:!0}}),(function(e,t,n,a){return{chance:e.chance*t+n.chance*a,alwaysWin:e.alwaysWin&&n.alwaysWin,neverWin:e.neverWin&&n.neverWin}}));return a.chance=Math.max(0,Math.min(1,a.chance)),a},Points:function(e,n){const a=t(e,n,(function(e,t){return o(Math.ceil(10*e/t)+15)}),(function(e,t){return o(Math.ceil(10*(t-e)/t)+3)}),(function(e,t,n,a){return{avgPoints:e.avgPoints*t+n.avgPoints*a,minPoints:Math.min(e.minPoints,n.minPoints)}}));return a.avgPoints=Math.max(a.minPoints,Math.min(25,a.avgPoints)),a;function o(e){return{avgPoints:e,minPoints:e}}},Standard:function(e,n){const a=t(e,n,(function(e,t){return o(1,!0,!1,Math.ceil(10*e/t)+15)}),(function(e,t){return o(0,!1,!0,Math.ceil(10*(t-e)/t)+3)}),(function(e,t,n,a){return{chance:e.chance*t+n.chance*a,alwaysWin:e.alwaysWin&&n.alwaysWin,neverWin:e.neverWin&&n.neverWin,avgPoints:e.avgPoints*t+n.avgPoints*a,minPoints:Math.min(e.minPoints,n.minPoints),maxPoints:Math.max(e.maxPoints,n.maxPoints)}}));return a.chance=Math.max(0,Math.min(1,a.chance)),a.avgPoints=Math.max(a.minPoints,Math.min(a.maxPoints,a.avgPoints)),a;function o(e,t,n,a){return{chance:e,alwaysWin:t,neverWin:n,avgPoints:a,minPoints:a,maxPoints:a}}},Full:function(e,n){const a=t(e,n,(function(e,t){return u(Math.ceil(10*e/t)+12)}),(function(e,t){return u(Math.ceil(10*(t-e)/t))}),(function(e,t,n,a){const o=Math.min(e.minPoints,n.minPoints),s=Math.max(e.maxPoints,n.maxPoints),r=e.pointsTable,i=n.pointsTable,l=Array(23).fill(0);for(let e=o;e<=s;e++)l[e]=r[e]*t+i[e]*a;return{minPoints:o,maxPoints:s,pointsTable:l}})),o=a.pointsTable.reduce(((e,t)=>e+t)),s=[0,0,0,...a.pointsTable.map((e=>e/o))],[r,i]=[[3,14],[15,26]].map((e=>s.slice(...e).reduce(((e,t)=>e+t)))),l=a.minPoints+3,c=a.maxPoints+3;return{chance:i/(i+r),alwaysWin:l>=15,neverWin:c<15,avgPoints:s.reduce(((e,t,n)=>e+t*n),0),minPoints:l,maxPoints:c,pointsTable:s};function u(e){const t=Array(23).fill(0);return t[e]=1,{minPoints:e,maxPoints:e,pointsTable:t}}}};function t(e,t,n,a,o){const s={...e,win:n},r={...t,win:a};return i(s,e.ego,e.attack,e.defense,0,r,t.ego,t.attack,t.defense,0);function i(e,t,n,a,s,r,i,c,u,m){n*=e.attackMultiplier,u*=e.defenseMultiplier;const d=Math.max(0,Math.floor(n-u)),p=l(e,t,n,a,s,r,i,c,u,m,d),h=l(e,t,n,a,s,r,i,c,u,m,d*e.critMultiplier);return o(p,e.baseHitChance,h,e.critHitChance)}function l(e,t,n,a,s,r,l,c,u,m,d){const p=Math.ceil(d);let h=0;if(r.shield&&1<=m&&m<=r.shieldEndurance){const e=r.shieldEndurance-(m-1);h=Math.min(p,e),m+=h}const f=p-h;if(l-=Math.ceil(f),t+=Math.ceil(f*e.healing),t=Math.min(t,e.ego),e.execute&&l<=r.deathThreshold&&(l=0),l<=0)return e.win(t,e.ego);if(r.reflect&&1<=m&&m<=2&&(!e.stun||1!=s)){m++;const n=Math.ceil(f*r.reflect);let a=0;if(e.shield&&1<=s&&s<=e.shieldEndurance){const t=e.shieldEndurance-(s-1);a=Math.min(n,t),s+=a}t-=n-a}if(e.stun&&1===s)return i(e,t,n,a,++s,r,l,c,u,m);e.reflect&&0===s&&(s=1),e.shield&&0===s&&(s=1);const g=i(r,l,c,u,m,e,t,n,a,s);if(e.stun&&0===s){const d=i(e,t,n,a,s=1,r,l,c,u,m);return o(d,e.stun,g,1-e.stun)}return g}}self.addEventListener("message",(t=>{const{id:n,type:a,args:o}=t.data;try{const t=(0,e[a])(o[0],o[1]);self.postMessage({id:n,ret:t})}catch(e){self.postMessage({id:n,error:e})}}))}).toString().match(/{.+}/s)[0],m=new Blob([u],{type:"text/javascript"}),d=URL.createObjectURL(m),p=navigator?.hardwareConcurrency??1,h=[],f=new Map;let g=0,b=0;async function y(e,t,n){return await async function(e,t){const n=b++,a={id:n,type:e,args:t};return function(){let e=h[g];if(null==e){e=new Worker(d);const t=({data:e})=>{const{id:t,ret:n,error:a}=e;null!=n?f.get(t).resolve(n):f.get(t).reject(a),f.delete(t)},n=e=>{throw e};e.addEventListener("message",t),e.addEventListener("messageerror",n),e.addEventListener("error",n),h[g]=e}return g=(g+1)%p,e}().postMessage(a),new Promise(((e,t)=>{f.set(n,{resolve:e,reject:t})}))}(e,[t,n])}async function _(e,t,n,a=1){const o=c(t,n,a),s=c(n,t);return await y(e,o,s)}function v(e,t=0){return(Math.floor(Math.round(e*10**(t+1))/10)/10**t).toLocaleString()}function w(e,t=0){return(Math.round(e*10**t)/10**t).toLocaleString()}function k(e){const t=100*e;return t>=100?"100%":t>=10?`${v(t,1)}%`:t>=.01?`${v(t,2)}%`:t>=0?`${v(t,3)}%`:"0%"}function S(e){const t=100*e;return t>=100?"100%":t>=.01?`${v(t,2)}%`:t>=0?`${v(t,3)}%`:"0%"}function M(e){return e>=25?"25":v(e,e>24.9?3:2)}function E(e,t){return e>=2?`<td colspan="${e}">${t}</td>`:`<td>${t}</td>`}function T(e,t){return t.map((t=>E(e,t))).join("")}function C(...e){return["<tr>",...e,"</tr>"].join("")}function x(e,t){const n=(e,t)=>{let n=e.attack,a=t.defense;const o=[];for(let t=0;t<10;t++){const t=Math.max(0,Math.floor(n-a)),s=[];s.push(t),s.push(Math.ceil(t*e.healing)),s.push(Math.ceil(t*e.critMultiplier)),s.push(Math.ceil(t*e.critMultiplier*e.healing)),o.push(s),n*=e.attackMultiplier,a*=e.defenseMultiplier}return o},a=n(e,t),o=n(t,e),s=[e,t].flatMap((e=>[e.baseHitChance,e.critHitChance]));return $('<table class="sim-table"></table>').append(C(E(1,""),T(4,["Player","Opponent"]))).append(C(E(1,""),T(2,["Normal","Critical"]).repeat(2))).append(C(E(1,"%"),T(2,s.map((e=>k(e)))))).append(C(E(1,""),T(1,["Damage","Healing"]).repeat(4))).append([...Array(9)].map(((e,t)=>t+1)).map((e=>C(E(1,e),...[a,o].map((t=>T(1,t[e].map((e=>e.toLocaleString())))))))).join("")).prop("outerHTML")}function P(e,t,n){return e<=t?t:e>=n?n:e}function L(e){return Math.round(255*Math.sqrt(P(e,0,1)))}function A(e){return`rgb(${L(2-2*e)}, ${L(2*e)}, 0)`}function j(e){return A(P(e,0,1)**3)}function H(e){return A(((P(e,3,25)-3)/22)**3)}window.HHBattleSimulator={simulateFromFighters:async(e,t)=>await async function(e,t,n){const a=r(t,n),o=r(n,t);return await y("Standard",a,o)}(0,e,t),simulateFromTeams:async(e,t,n=1)=>await _("Standard",e,t,n)};class B{element;last;constructor(){this.element=$('<div class="sim-result"></div>')}updateAsync(e){return this.reset(),this.last=e,queueMicrotask((async()=>{const t=await e;if(this.last!==e)return;const n=t.hasAssumptions?"?":"";let a="";t.alwaysWin&&(a='<div class="vCheck_mix_icn sim-mark"></div>'),t.neverWin&&(a='<div class="xUncheck_mix_icn sim-mark"></div>'),this.element.removeClass("sim-pending").html(`<div class="sim-label">P[W]:</div>${a}<span class="sim-chance">${k(t.chance)}${n}</span>`).css("color",j(t.chance))})),this.element}reset(){this.element.addClass("sim-pending").html('<div class="sim-label">P[W]:</div>-').css("color","")}setTooltip(e){this.element.attr("tooltip",e)}getElement(){return this.element}}const I=(async()=>(null!=window.HHPlusPlus||(await a(),null!=window.HHPlusPlus||(await s(),null!=window.HHPlusPlus||await new Promise($))),window.HHPlusPlus))(),O=(async()=>(null!=window.hhPlusPlusConfig||(await a(),null!=window.hhPlusPlusConfig||(await s(),null!=window.hhPlusPlusConfig||await new Promise($))),window.hhPlusPlusConfig))();function G(){return I}const F={addBattleSimulator:!0,doSimulateTroll:!0,doSimulateLeague:!0,doSimulateSeason:!0,doSimulatePantheon:!0,doSimulateTeams:!0,doSimulateEditTeam:!0,doSimulateLeagueTable:!0,doSimulateFoughtOpponents:!0,addBoosterSimulatorToLeagueTable:!0,replaceHHLeaguesPlusPlus:!0,addBoosterSimulator:!0,simulateGinseng:!0,simulateJujubes:!0,simulateChlorella:!0,simulateCordyceps:!0,addSkillSimulator:!0,skillLevelsToBeSimulated:[5,4,3,2,1],calculateLeaguePointsTable:!1,addGirlTraitsToGirlTooltip:!0,improveTooltipsForLabyrinth:!0,addAttackOrderIconToLabyrinth:!0,addClassIconToLabyrinth:!0};function q(){return F}function N(e,t){return null!=e?+e:t}function R(e,t,n){return Array.isArray(t)?e.reduce(((e,a,o)=>(e[a]=N(t[o],n),e)),{}):e.reduce(((e,a)=>(e[a]=N(t[a],n),e)),{})}function W(e,t,n,a){return"number"==typeof n?e.reduce(((e,o)=>(e[o]=a(t[o],n),e)),{}):e.reduce(((e,o)=>(e[o]=a(t[o],n[o]),e)),{})}function U(e,t,n){return W(e,t,n,((e,t)=>e+t))}function z(e,t,n){return W(e,t,n,((e,t)=>e*t))}function J(e,t){return e.reduce(((e,n)=>(e[n]=Math.floor(t[n]),e)),{})}class D{keys;value;constructor(e,t={}){this.keys=e,this.value=R(e,t,0)}add(e){return this.value=U(this.keys,this.value,e),this}subtract(e){return this.value=W(this.keys,this.value,e,((e,t)=>e-t)),this}multiply(e){return this.value=z(this.keys,this.value,e),this}divide(e){return this.value=W(this.keys,this.value,e,((e,t)=>e/t)),this}truncate(){return this.value=J(this.keys,this.value),this}round(){var e,t;return this.value=(e=this.keys,t=this.value,e.reduce(((e,n)=>(e[n]=Math.round(t[n]),e)),{})),this}result(){return this.value}}const K=["damage","defense","ego","chance"];class V extends D{constructor(e={}){super(K,e)}}function Q(e){return R(K,e,0)}function X(e,t){return U(K,e,t)}function Y(e,t){return z(K,e,t)}const Z={MB2:{leagues:1.15,seasons:1.15},MB3:{trolls:1.25,pantheon:1.25},MB8:{leagues:1.15,seasons:1},MB9:{leagues:1,seasons:1.15}};function ee(e){const t=[];let n={};return e.forEach((e=>{const{item:a}=e;switch(a.rarity){case"common":case"rare":case"epic":t.push({addend:Q(a),lifetime:+e.lifetime});break;case"legendary":t.push({multiplier:Q(a),lifetime:+e.lifetime});break;case"mythic":const o=Z[a.identifier];null!=o&&(n={...n,...o})}})),{normals:t,mythic:n}}const te=["hardcore_stats","charm_stats","know_how_stats","endurance_stats","harmony_stats"],ne=["carac1","carac2","carac3","endurance","chance"];function ae(e){return R(ne,e,0)}function oe(e,t){return U(ne,e,t)}function se(e,t){return z(ne,e,t)}class re{element;last;constructor(){this.element=$('<div class="sim-result"></div>')}updateAsync(e){return this.reset(),this.last=e,queueMicrotask((async()=>{const t=await e;if(this.last!==e)return;const n=t.hasAssumptions?"?":"";let a="";t.minPoints>=25&&(a='<div class="vCheck_mix_icn sim-mark"></div>'),this.element.removeClass("sim-pending").html(`<div class="sim-label">E[P]:</div>${a}<span class="sim-points">${M(t.avgPoints)}${n}</span>`).css("color",H(t.avgPoints))})),this.element}reset(){this.element.addClass("sim-pending").html('<div class="sim-label">E[P]:</div>-').css("color","")}setTooltip(e){this.element.attr("tooltip",e)}getElement(){return this.element}}function ie(e,t){const n=localStorage.getItem(e);if(null==n)return t;try{const e=JSON.parse(n);if(null!=e){if(Array.isArray(e))return e;if(null!=t&&"object"==typeof e&&"object"==typeof t)return{...t,...e}}return e}catch(e){return n}}function le(e,t){localStorage.setItem(e,JSON.stringify(t))}const ce=1;function ue(e){le("HHBattleSimulator.HeroData",{classBonus:e.classBonus,ginsengCaracs:e.ginsengCaracs})}function me(){return ie("HHBattleSimulator.HeroData",{})}function de(){const e=me().ginsengCaracs;return e?.version===ce?e.data:null}const pe=1;function he(e){le("HHBattleSimulator.TeamData",{opponent:e.opponent,league:e.league,params:e.params})}function fe(){return ie("HHBattleSimulator.TeamData",{})}function ge(e){const t=fe();t.opponent=e,he(t)}function be(){return fe().opponent??null}function ye(e){const t=fe();t.league=e??void 0,he(t)}function _e(){return fe().league??null}function ve(...e){const{pathname:t}=window.location;return e.some((e=>t.includes(e)))}function we(){const e=location.search.match(/id_opponent=(\d+)/)?.[1];if(null==e)throw new Error("id_opponent is not found from url.");return e}function ke(e){le("HHBattleSimulator.BoosterData",{normals:e.normals,mythic:e.mythic})}function $e(){return ie("HHBattleSimulator.BoosterData",{})}function Se(e){const t=$e();t.mythic=e,ke(t)}function Me(){return $e().mythic??{}}function Ee(e){const{$:t}=e;if(null==t)throw new Error("jQuery is not found.");const{localStorageGetItem:n,localStorageSetItem:a,get_lang:o,get_dec_and_sep:s}=e;if(null==n)throw new Error("localStorageGetItem is not found.");if(null==a)throw new Error("localStorageSetItem is not found.");if(null==o)throw new Error("get_lang is not found.");if(null==s)throw new Error("get_dec_and_sep is not found.");const{SITE_ROOT:r,IMAGES_URL:i}=e;if(null==r)throw new Error("SITE_ROOT is not found.");if(null==i)throw new Error("IMAGES_URL is not found.");const{Hero:l}=e;if(null==l)throw new Error("Hero is not found.")}async function Te(e){await o();try{Ee(e);const t=q();t.addGirlTraitsToGirlTooltip&&async function(e){const{tooltips:t}=e;if(null==t||"object"!=typeof t)return;if(!("[data-new-girl-tooltip]"in t))return;if("function"!=typeof t["[data-new-girl-tooltip]"])return;const n=t["[data-new-girl-tooltip]"],a=new Map;t["[data-new-girl-tooltip]"]=function(...t){const o=n(...t),s=$(t[0]),r=JSON.parse(s.attr("data-new-girl-tooltip")??"").id_girl??(()=>{const e=s.is("[girl-ico-src]")?s:s.find("[girl-ico-src]");return e.attr("girl-ico-src")?.match(/pictures\/girls\/(\d+)\/(?:ico|ava)/)?.[1]})()??(()=>{const e=s.is("img[src]")?s:s.find("img[src]");return e.attr("src")?.match(/pictures\/girls\/(\d+)\/(?:ico|ava)/)?.[1]})();if(null!=r){const t=a.get(+r);if(null!=t){const n={"♈":"aries","♉":"taurus","♊":"gemini","♋":"cancer","♌":"leo","♍":"virgo","♎":"libra","♏":"scorpio","♐":"sagittarius","♑":"capricorn","♒":"aquarius","♓":"pisces"},a=e.IMAGES_URL+"/pictures/design/blessings_icons/",s=e=>`<span class="sim-trait-icon" style="background-image: url('${a}${e}');"></span>`,r=e=>""==e?"":s(`hair_colors/hair_color_${e}.png`),i=e=>""==e?"":s(`eye_colors/eye_color_${e}.png`),l=e=>""==e?"":s(`zodiac_signs/zodiac_sign_${n[e.charAt(0)]}.png`),c=e=>""==e?"":s(`positions/fav_pose_${e}.png`),u=['<div class="sim-traits">',r(t[0]),r(t[1])," ",i(t[2]),i(t[3])," ",l(t[4])," ",c(t[5]),"</div>"],m=o.body;o.body=m+u.join("")}}const i=o.body;if("string"==typeof i&&i.includes("active_skills_icon.png")){const t=i.match(/class="(\w+?)_element_icn/)?.[1];if(null!=t){const n="/pvp4_trigger_skills/stun_icon.png",a="/pvp4_trigger_skills/shield_icon.png",s="/pvp3_active_skills/reflect_icon.png",r="/pvp3_active_skills/execute_icon.png",l={darkness:n,sun:n,stone:a,light:a,nature:s,psychic:s,fire:r,water:r},c={darkness:"/pvp4_trigger_skills/punch_icon.png",sun:"/pvp4_trigger_skills/stun_icon.png",stone:"/pvp4_trigger_skills/defenses_up_icon.png",light:"/pvp4_trigger_skills/heal_up_icon.png",nature:"/pvp4_trigger_skills/mana_boost_icon.png",psychic:"/pvp4_trigger_skills/mana_steal_icon.png",fire:"/pvp4_trigger_skills/burn_icon.png",water:"/pvp4_trigger_skills/shield_icon.png"},u=(i.includes("carac-speed")?c:l)[t];if(null!=u){const t=i.replace("/images/pictures/design/girl_skills/active_skills_icon.png",e.IMAGES_URL+"/pictures/design/girl_skills"+u);return{...o,body:t}}}}return o};const o=e=>{if(null==e?.id_girl)return;const t=[e.hair_color1??e.girl?.hair_color1??"",e.hair_color2??e.girl?.hair_color2??"",e.eye_color1??e.girl?.eye_color1??"",e.eye_color2??e.girl?.eye_color2??"",e.zodiac??e.girl?.zodiac??"",e.figure??e.girl?.figure??""];t.every((e=>""===e))||a.set(+e.id_girl,t)};if(ve("/troll-pre-battle.html","/leagues-pre-battle.html","/pantheon-pre-battle.html")&&(e.hero_data.team.girls.map((e=>o(e))),e.opponent_fighter.player.team.girls.map((e=>o(e)))),ve("/troll-battle.html","/league-battle.html","/pantheon-battle.html","/season-battle.html","/boss-bang-battle.html")&&(e.hero_fighter.girls.map((e=>o(e))),e.opponent_fighter.girls.map((e=>o(e)))),ve("/tower-of-fame.html")&&e.opponents_list.forEach((e=>e.player.team.girls.map((e=>o(e))))),ve("/season-arena.html")&&(e.hero_data.team.girls.map((e=>o(e))),e.opponents.forEach((e=>e.player.team.girls.map((e=>o(e)))))),ve("/teams.html")){const t=e.teams_data;Object.values(t).forEach((e=>{e.girls.map((e=>o(e)))}))}if(ve("/edit-team.html")&&e.availableGirls.forEach((e=>o(e))),ve("/waifu.html")&&e.girlsDataList.forEach((e=>o(e))),ve("/path-of-valor.html","/path-of-glory.html")&&e.path_girls.forEach((e=>o(e))),ve("/activities.html")){const t=e.pop_hero_girls;Object.values(t).forEach((e=>o(e)))}if(ve("/pantheon.html")&&Array.isArray(girl_rewards)&&girl_rewards.forEach((e=>o(e.girl_data))),ve("/clubs.html")){const t=e.club_champion_data,n=t?.champion?.girl;null!=n&&o(n)}if(ve("/champions/")){const t=e.championData,n=t?.champion?.girl;null!=n&&o(n)}if(ve("/girl/")){const t=e.girl;null!=t&&o(t),$(document).on("ajaxComplete",((e,t,n)=>{if(n.data?.includes("action=get_teams_for_girl")){const e=t.responseJSON;e?.teams?.forEach((e=>e.girls.forEach((e=>o(e)))))}}))}if(ve("/event.html")){const t=e.event_girls;t?.forEach((e=>o(e)));const n=e.current_event;n?.event_data?.indexed_hero_teams?.forEach((e=>{e.girls?.forEach((e=>o(e)))}))}if(ve("/add-boss-bang-team.html")&&e.availableGirls.forEach((e=>o(e))),ve("/labyrinth.html")){const t=e.applyLabyrinthSpecifications;"function"==typeof t&&(e.applyLabyrinthSpecifications=function(...e){o(e[0]),t(...e)})}if(ve("/labyrinth-pre-battle.html")){const t=e.hero_fighter;Object.values(t.team.girls).map((e=>o(e))),e.opponent_fighter.team.girls.map((e=>o(e)))}}(e),t.improveTooltipsForLabyrinth&&async function(e){if(ve("/labyrinth-pool-select.html","/labyrinth.html","/labyrinth-pre-battle.html","/edit-labyrinth-team.html")){const t=e.displayPvpV4Caracs;if("function"==typeof t){const n=e.number_format_lang;e.displayPvpV4Caracs=function(...e){const a=t(...e);try{return $('<div id="wrapper"></div>').html(a).find(".left-section").prepend($('<span carac="ego"></span>').text(n(e[0].battle_caracs.ego))).closest("#wrapper").html()}catch{return a}},$("<style>\n.new_girl_tooltip.pvp-v4 .stats-wrapper .right-section {\n    width: 50%;\n    margin-left: 40%;\n    margin-top: -1.5rem;\n}\n.new_girl_tooltip .caracs {\n    margin-top: 0;\n}\n.new_girl_tooltip.pvp-v4 .stats-wrapper .caracs {\n    height: 8rem;\n}\n</style>").appendTo(document.head)}}}(e),t.addAttackOrderIconToLabyrinth&&async function(e){const t=()=>{$("<style>\n.sim-team-order-number {\n    position: absolute;\n    width: 1.5rem;\n    height: 1.5rem;\n    right: -0.5rem;\n    bottom: -0.25rem;\n    font-size: 0.75rem;\n    line-height: 1.25rem;\n    text-align: center;\n    background: linear-gradient(to right, #333750 0, #1e9fdf 100%);\n    border-radius: 50%;\n    border: 2px solid #fff;\n    z-index: 2;\n    pointer-events: none;\n}\n.change-team-panel .sim-team-order-number {\n    right: 0;\n    bottom: -3px;\n}\n.change-team-panel.harem-panel .sim-team-order-number {\n    right: 0;\n    bottom: unset;\n}\n</style>").appendTo(document.head)};if(ve("/labyrinth-pre-battle.html")){t();const n=e.hero_fighter,a=e.opponent_fighter,o=[...Object.values(n.fighters),...Object.values(a.fighters)];o.sort(((e,t)=>+t.speed-+e.speed)),le("HHBattleSimulator.LabyrinthTeamData",[...Object.values(a.fighters).map((e=>e.speed))]),await s(),o.forEach(((e,t)=>{const n=t+1,a=$('<div class="sim-team-order-number"></div>').text(n);$(e.is_hero_fighter?".player-panel":".opponent-panel").find(`[data-team-member-position="${e.position}"]`).append(a)}))}if(ve("/edit-labyrinth-team.html")){t();const n=ie("HHBattleSimulator.LabyrinthTeamData",[]),a=e.availableGirls,o=new Map(a.map((e=>[String(e.id_girl),e])));await s();const r=()=>{const e=[...[...document.querySelectorAll("[data-girl-id]")].map((e=>({speed:o.get(e.dataset.girlId).battle_caracs.speed,is_hero_fighter:!0,position:+(e.dataset.teamMemberPosition??-1)}))).sort(((e,t)=>e.position-t.position)),...n.map((e=>({speed:e,is_hero_fighter:!1})))];e.sort(((e,t)=>+t.speed-+e.speed)),e.forEach(((e,t)=>{if(!e.is_hero_fighter)return;const n=t+1,a=$(`[data-team-member-position="${e.position}"]`),o=a.find(".sim-team-order-number");o.length>0?o.text(n):a.append($('<div class="sim-team-order-number"></div>').text(n))}));const t=e.map((e=>e.speed));$(".harem-panel-girls [id_girl]").each(((e,n)=>{const a=n.getAttribute("id_girl"),s=o.get(a).battle_caracs.speed;let r=t.findIndex((e=>e<=s))+1;0===r&&(r=14);const i=$(n),l=i.find(".sim-team-order-number");l.length>0?l.text(r):i.append($('<div class="sim-team-order-number"></div>').text(r))}))},i=()=>{l.disconnect(),r(),l.observe(document.querySelector(".team-hexagon"),{childList:!0,subtree:!0,attributes:!0,attributeFilter:["src"]})},l=new MutationObserver(i);i()}}(e),t.addClassIconToLabyrinth&&async function(e){const t=()=>{$('<style>\n.sim-labyrinth-class {\n    position: absolute;\n    left: -0.375rem;\n    bottom: -0.125rem;\n    line-height: 0;\n    filter: drop-shadow(-1px -1px #fff) drop-shadow(-1px 1px #fff) drop-shadow(1px -1px #fff) drop-shadow(1px 1px #fff);\n    z-index: 2;\n    pointer-events: none;\n}\n.sim-labyrinth-class [carac="1"]::before,\n.sim-labyrinth-class [carac="2"]::before,\n.sim-labyrinth-class [carac="3"]::before {\n    width: 1.25rem;\n    height: 1.25rem;\n}\n.change-team-panel .sim-labyrinth-class {\n    left: 2px;\n    bottom: -1px;\n}\n.change-team-panel.harem-panel .sim-labyrinth-class {\n    bottom: unset;\n}\n</style>').appendTo(document.head)};if(ve("/labyrinth-pre-battle.html")){t();const n=e.hero_fighter,a=e.opponent_fighter,o=[...Object.values(n.fighters),...Object.values(a.fighters)];await s(),o.forEach(((e,t)=>{const n=e.girl.girl.class,a=$('<div class="sim-labyrinth-class"></div>').append($("<div></div>").attr("carac",n));$(e.is_hero_fighter?".player-panel":".opponent-panel").find(`[data-team-member-position="${e.position}"]`).append(a)}))}if(ve("/edit-labyrinth-team.html")){t();const n=e.availableGirls,a=new Map(n.map((e=>[String(e.id_girl),e])));await s();const o=()=>{document.querySelectorAll("[data-girl-id]").forEach((e=>{const t=a.get(e.dataset.girlId),n=$(e),o=n.find(".sim-labyrinth-class");o.length>0?o.find("[carac]").attr("carac",t.class):n.append($('<div class="sim-labyrinth-class"></div>').append($("<div></div>").attr("carac",t.class)))}))};$(".harem-panel-girls [id_girl]").each(((e,t)=>{const n=t.getAttribute("id_girl"),o=a.get(n),s=$(t),r=s.find(".sim-labyrinth-class");r.length>0?r.find("[carac]").attr("carac",o.class):s.append($('<div class="sim-labyrinth-class"></div>').append($("<div></div>").attr("carac",o.class)))}));const r=()=>{i.disconnect(),o(),i.observe(document.querySelector(".team-hexagon"),{childList:!0,subtree:!0,attributes:!0,attributeFilter:["src"]})},i=new MutationObserver(r);r()}}(e)}catch(e){}}function Ce(e){const{localStorageGetItem:t}=e,n=t("battle_type"),a=be();if(null==a||a.battleType!==n)return null;const o={leagues:()=>t("leagues_id"),trolls:()=>t("troll_id"),pantheon:()=>t("pantheon_id"),seasons:()=>a.opponentId},s=o[n]?.();return s===a.opponentId?a.team:null}function xe(e){return $e().mythic?.[e]??null}function Pe(e){if("pointsTable"in e){const t=Math.sqrt(e.pointsTable.reduce(((e,t)=>Math.max(e,t)),0)),n=e.pointsTable.map(((e,t)=>({points:t,probability:e}))).filter((e=>e.probability>0)).sort(((e,t)=>t.points-e.points)).flatMap((e=>[`<tr style="color: ${H(e.points)};">`,"<td>",e.points.toFixed(),"</td>",'<td class="sim-bar-container">',`<div class="sim-bar" style="width: ${5*e.probability/t}rem;"></div>`,S(e.probability),"</td>","</tr>"]));return $('<table class="sim-points-table"></table>').append(n.join("")).prop("outerHTML")}return $('<table class="sim-table"></table>').append(C(E(2,"Points"))).append(C(T(1,["Max",e.maxPoints.toFixed()]))).append(C(T(1,["Avg",(t=e.avgPoints,t>=25?"25":t>24.9?(25-parseFloat((25-t).toPrecision(2))).toLocaleString():v(t,2))]))).append(C(T(1,["Min",e.minPoints.toFixed()]))).prop("outerHTML");var t}class Le{mojo;element;last;constructor(e){this.mojo=e,this.element=$('<div class="sim-result"></div>')}updateAsync(e){return this.reset(),this.last=e,queueMicrotask((async()=>{const t=await e;if(this.last!==e)return;const n=t.hasAssumptions?"?":"",a=t.chance,o=1-a,s=this.mojo,r=Math.min(s-40,-1),i=s*a+r*o;this.element.removeClass("sim-pending").html(`<div class="sim-label">E[M]:</div><span class="sim-mojo">${w(i,2)}${n}</span>`).css("color",function(e){let t=P(e+10,0,40)/40;return t=.5-.5*Math.cos(t**2*Math.PI),A(t)}(i)).attr("tooltip",$('<table class="sim-table"></table>').append(C(E(1,""),T(1,["Win","Loss"]))).append(C(E(1,"Mojo"),T(1,[s,r].map((e=>w(e,2)))))).append(C(E(1,"%"),T(1,[a,o].map((e=>k(e)))))).append(C(E(1,"E[M]"),E(2,w(i,2)))).prop("outerHTML"))})),this.element}reset(){this.element.addClass("sim-pending").html('<div class="sim-label">E[M]:</div>-').css("color","")}getElement(){return this.element}}async function Ae(e){if(!ve("/edit-team.html"))return;await o(),function(e){Ee(e);const{hero_data:t,teamGirls:n,theme_resonance_bonuses:a,availableGirls:o}=e;if(null==t)throw new Error("hero_data is not found.");if(null==n)throw new Error("teamGirls is not found.");if(null==a)throw new Error("theme_resonance_bonuses is not found.");if(null==o)throw new Error("availableGirls is not found.")}(e);const t=q(),{availableGirls:n}=e,a=Object.fromEntries(n.map((e=>[e.id_girl,e]))),{get_lang:r,get_dec_and_sep:i}=e,l=i(r()).sep,u=e=>parseFloat(e.trim().replaceAll(l,"")),m=()=>{const e=e=>u($(`#stats-${e}`).text());return{damage:e("damage"),defense:e("defense"),ego:e("ego"),chance:e("chance")}},d=()=>{const e=Array(7);return document.querySelectorAll(".team-hexagon [data-girl-id]").forEach((t=>{const n=t.dataset.teamMemberPosition,o=t.dataset.girlId;null!=n&&null!=o&&(e[+n]=a[o])})),e.filter((e=>null!=e))},p=()=>({caracs:m(),total_power:u($(".team-total-power").text()),girls:d(),id_team:e.hero_data.team.id_team});!async function(e){const{Hero:t,hero_data:n,server_now_ts:o}=e,r=n.team;Ie({...r,girls:r.girls.map((e=>a[e.id_girl]))},t,o),await s();const i=document.getElementById("validate-team");null!=i&&i.addEventListener("click",(()=>{Ie(p(),t,o)}),!0)}(e),t.doSimulateEditTeam&&async function(e){const{hero_data:n,teamGirls:a,theme_resonance_bonuses:o,availableGirls:r,localStorageGetItem:i}=e,l=Ce(e);if(null==l)return;const u=l,d=n.team;if(null==d)return;const h=new Map(Object.values(r).map((e=>[String(e.id_girl),e]))),f=i("battle_type"),g=xe(f);if(null==g)return;const b=Object.fromEntries(d.synergies.map((e=>[e.element.type,e.element])));let _={...d},v=!1;await s();const w=$(".player_team_block.battle_hero .icon-area"),k=new B;w.before(k.getElement().addClass("sim-left"));const S="leagues"===f?new re:null;null!=S&&w.before(S.getElement().addClass("sim-right"));const M=be()?.mojo,E="seasons"===f&&null!=M?new Le(M):null;null!=E&&w.before(E.getElement().addClass("sim-right")),P();const T=document.querySelector(".player_stats");null!=T&&new MutationObserver((function(){const e=m(),t=Array.from(document.querySelectorAll(".team-member-container[data-girl-id]")).sort(((e,t)=>Number(e.dataset.teamMemberPosition)-Number(t.dataset.teamMemberPosition))).map((e=>h.get(e.dataset.girlId)));v=!1,_.girls=t.map((e=>{const t=e.id_girl,n=a.find((e=>e.id_girl==t));if(null!=n)return{...e,skills:n.skills};const o={},s=e.skill_tiers_info[4]?.skill_points_used??0;s&&(v=!0,o[9]={skill:{percentage_value:.2*s}},o[10]={skill:{percentage_value:0}});const r=e.skill_tiers_info[5]?.skill_points_used??0;if(r>0){const t=e.element;["darkness","sun"].includes(t)&&(o[11]={skill:{percentage_value:7*r}}),["stone","light"].includes(t)&&(o[12]={skill:{percentage_value:8*r}}),["nature","psychic"].includes(t)&&(o[13]={skill:{percentage_value:20*r}}),["fire","water"].includes(t)&&(o[14]={skill:{percentage_value:6*r}})}return{...e,skills:o}}));const n=Object.fromEntries(Object.keys(b).map((e=>[e,0])));t.forEach((e=>{n[e.element]++})),_.synergies=d.synergies.map((e=>({...e,element:{type:e.element.type},bonus_multiplier:e.harem_bonus_multiplier+e.team_bonus_per_girl*n[e.element.type]})));const s=Object.entries(n).filter((([e,t])=>t>=3)).map((([e,t])=>e));if(_.theme_elements=s.map((e=>b[e])),_.theme=s.join(","),s.length>0){const t=o[""];if(t){const{defense:n,chance:a}=t;n&&(e.defense/=Math.pow(1.02,n/2)),a&&(e.chance/=Math.pow(1.04,a/4))}s.forEach((t=>{const n=o[t];if(n){const{defense:t,chance:a}=n;t&&(e.defense*=Math.pow(1.02,t/2)),a&&(e.chance*=Math.pow(1.04,a/4))}}))}_.caracs=e,P()})).observe(T,{subtree:!0,childList:!0});const C=document.querySelector(".team-hexagon");function P(){const e=v,n=c(_,u,g??1),a=c(u,_),o=y(null==S?"Chance":t.calculateLeaguePointsTable?"Full":"Standard",n,a).then((t=>({...t,hasAssumptions:e})));if(k.updateAsync(o),k.setTooltip(x(n,a)),null!=S){const e=o;S.updateAsync(e),e.then((e=>{S.setTooltip(Pe(e))}))}null!=E&&E.updateAsync(o)}null!=C&&new MutationObserver((function(){const e=_.girls,t=+e[0]?.id_girl,n=new Set(e.map((e=>+e.id_girl))),a=p().girls.map((e=>+e.id_girl)),o=a[0];if(a.length==e.length&&a.every((e=>n.has(e))))return o===t?void 0:(_.girls=a.map((t=>e.find((e=>+e.id_girl==+t)))),void P());k.reset(),S?.reset(),E?.reset()})).observe(C,{subtree:!0,attributes:!0,attributeFilter:["src"]})}(e)}let je,He=null;async function Be(e,t,n){if(null!=je)return je;const a=await async function(e){return He??=(async()=>{const t=await fetch(`edit-team.html?id_team=${e}`),n=await t.text();return{teamGirls:JSON.parse(n.match(/var\s+teamGirls\s*=\s*(\[.*?\]);/)[1]),theme_resonance_bonuses:JSON.parse(n.match(/var\s+theme_resonance_bonuses\s*=\s*((?:\{|\[).*?(?:\}|\]));/)[1]),hero_data:Function("return "+n.match(/var\s+hero_data\s*=\s*(\{.*?\});/s)[1])(),availableGirls:JSON.parse(n.match(/var\s+availableGirls\s*=\s*(\[.*?\]);/)[1]),Hero_infos:JSON.parse(n.match(/Hero.infos\s*=\s*(\{.*?\});/)[1])}})(),He}(e),o=Object.fromEntries(a.availableGirls.map((e=>[e.id_girl,e]))),s={...a.hero_data.team,girls:a.hero_data.team.girls.map((e=>o[e.id_girl]))},r={...t,infos:a.Hero_infos};return je=Ie(s,r,n),je}function Ie(e,t,n){const a=me().classBonus??null;if(null==a)return;const o=function(e){const{normals:t}=$e();if(null==t)return null;const n=new V,a=new V;return t.forEach((t=>{t.lifetime<e||(null!=t.multiplier&&n.add(t.multiplier),null!=t.addend&&a.add(t.addend))})),{multiplier:n.divide(100).add(1).result(),addend:a.result()}}(n);if(null==o)return;const s=Y(function(e){const{caracs:t}=e.infos;return{damage:t.primary_carac_amount,defense:.25*t.secondary_caracs_sum,ego:t.endurance,chance:t.chance}}(t),a),r=e.girls.flatMap((e=>e.armor.map((e=>Q(e.caracs))))).reduce(((e,t)=>X(e,t)),Q({})),i=(new V).add((l=e.total_power,{damage:.25*l,defense:.12*l,ego:2*l,chance:0})).multiply(a).add(r).result();var l;const c=(new V).add(e.caracs).divide(o.multiplier).subtract(o.addend).divide(X(i,s)).result(),u=Y(a,c),m=Y(i,c),d={teamId:+e.id_team,multiplier:u,addend:m,caracs:e.caracs};return function(e){const t=fe();t.params??=[],t.params=[{...e,version:pe},...t.params.filter((e=>e.version===pe)).filter((t=>t.teamId!==e.teamId))],he(t)}(d),d}function Oe(e,t){const n=l(e.team,t.team);return Math.round(100*e.damage/e.team.caracs.damage/n)/100}async function Ge(e){if(null==e.id_team)return;const t=e.id_team,n=(fe().params??[]).filter((e=>e.version===pe)).find((e=>e.teamId===+t));return null!=n?.caracs&&(a=n.caracs,o=e.caracs,function(e,t,n){return e.every((e=>+t[e]==+n[e]))}(K,a,o))?n:null!=window.Hero?await Be(+t,window.Hero,window.server_now_ts):void 0;var a,o}const Fe=["ginseng","jujubes","chlorella","cordyceps","mythic"];function qe(e,t,n,a){const{ginseng:o,jujubes:s,chlorella:r,cordyceps:i}=a,l=n[o];return{...e,caracs:new V(l).multiply(t.multiplier).add(t.addend).multiply((c={damage:1+.1*i,ego:1+.1*r,chance:1+.2*s},R(K,c,1))).round().result()};var c}function Ne(e,t){const n={...e.girls[0].skills};[11,12,13,14].forEach((e=>{delete n[e]})),n[t.skill.id_skill]=t;const a=[...e.girls];return a[0]={...e.girls[0],skills:n},{...e,girls:a}}let Re=null;function We(){if(null==Re){const{simulateGinseng:e,simulateJujubes:t,simulateChlorella:n,simulateCordyceps:a}=q();Re=[...Array(2)].flatMap(((o,s)=>[...Array(a?5:1)].flatMap(((a,o)=>[...Array(n?5-o:1)].flatMap(((n,a)=>[...Array(t?5-o-a:1)].flatMap(((t,n)=>{const r=4-o-a-n;return!e&&r>0?[]:{key:`${r}${n}${a}${o}${s}`,counts:{ginseng:r,jujubes:n,chlorella:a,cordyceps:o,mythic:s}}}))))))))}return Re}async function Ue(e){const t=We();return Promise.all(t.map((async({counts:t})=>({boosterCounts:t,result:await e(t)}))))}async function ze(e,t){const n=de();if(null==n)throw new Error("Market data not found");const a=await Ge(e);if(null==a)throw new Error("Team data not found");return Ue((async o=>{const s=qe(e,a,n,o),r=1+.15*o.mythic;return _("FastPoints",s,t,r)}))}async function Je(e){const t={11:{skillType:"stun",levelPercentage:7},12:{skillType:"shield",levelPercentage:8},13:{skillType:"reflect",levelPercentage:20},14:{skillType:"execute",levelPercentage:6}},n=q().skillLevelsToBeSimulated;return 0===n.length?[]:Promise.all([11,12,13,14].map((async a=>{const o=await Promise.all(n.map((async n=>{const o=((e,n)=>{const{skillType:a,levelPercentage:o}=t[e],s=n*o;return{id_skill:e.toString(),level:n.toString(),skill:{id_skill:e,level:n,percentage_value:s,display_value_text:`${s}%`,skill_type:a}}})(a,n);return{level:n,results:await Ue((async t=>e(t,o)))}})));var s;return{skillName:(s=t[a].skillType).charAt(0).toUpperCase()+s.slice(1).toLowerCase(),results:o}})))}async function De(e,t){const n=de();if(null==n)throw new Error("Market data not found");const a=await Ge(e);if(null==a)throw new Error("Team data not found");return Je((async(o,s)=>{const r=Ne(qe(e,a,n,o),s),i=1+.15*o.mythic;return _("FastPoints",r,t,i)}))}async function Ke(e){if(!ve("/troll-pre-battle.html"))return;await o(),function(e){Ee(e);const{hero_data:t,opponent_fighter:n}=e;if(null==t)throw new Error("hero_data is not found.");if(null==n)throw new Error("opponent_fighter is not found.")}(e);const t=q();!function(e){const{hero_data:t,opponent_fighter:n}=e,a=Oe(t,n.player),o=Me();o.trolls=a,Se(o)}(e),async function(e){const{opponent_fighter:t,localStorageSetItem:n}=e,a=we(),o=t.player.team,r=()=>{n("battle_type","trolls"),n("troll_id",a),ge({battleType:"trolls",opponentId:a,team:o})};r(),await s();const i=document.getElementById("change_team");null!=i&&(i.addEventListener("click",r,!0),i.addEventListener("auxclick",r,!0))}(e),t.doSimulateTroll&&async function(e){const{hero_data:t,opponent_fighter:n}=e,{player:a,opponent:o}=i(t,n.player),r=y("Chance",a,o);await s();const l=new B;l.updateAsync(r),l.setTooltip(x(a,o)),$(".opponent .icon-area").before(l.getElement().addClass("sim-left"))}(e)}async function Ve(e){ve("/league-battle.html")&&(await o(),function(e){Ee(e);const{hero_fighter:t,opponent_fighter:n}=e;if(null==t)throw new Error("hero_fighter is not found.");if(null==n)throw new Error("opponent_fighter is not found.")}(e),function(e){const{hero_fighter:t}=e;ye(t)}(e))}function Qe(e){e.sort(((e,t)=>{const n=n=>((e,t)=>e==t?null:e-t)(n(t),n(e));return n((e=>e.result))??n((e=>e.boosterCounts.mythic))??n((e=>e.boosterCounts.cordyceps))??n((e=>e.boosterCounts.chlorella))??n((e=>e.boosterCounts.jujubes))??n((e=>e.boosterCounts.ginseng))??0}))}function Xe(e,t){return`<div class="sim-booster-slot slot ${e}"><div class="sim-booster-icon sim-icon-${t}"></div></div>`}const Ye={ginseng:Xe("legendary","ginseng"),jujubes:Xe("legendary","jujubes"),chlorella:Xe("legendary","chlorella"),cordyceps:Xe("legendary","cordyceps"),headband:Xe("mythic","headband"),ame:Xe("mythic","ame")};function Ze(e,t){return Fe.map((n=>Ye["mythic"===n?t:n].repeat(e[n]))).join("")}function et(e){return e.forEach((e=>{e.results.forEach((e=>{Qe(e.results)}))})),function(){const t=[5,4,3,2,1].map((t=>{return n=t,C(T(1,e.map((e=>function(e){const t=e.skillName,a=e.results.find((e=>e.level===n))?.results;return null==a?"":function(e){return["<table>",C(E(2,`Level ${n} ${t}`)),...e.map((e=>C(T(1,[Ze(e.boosterCounts,"headband"),`<span class="sim-chance" style="color: ${j(e.result)}">${S(e.result)}</span>`])))),"</table>"].join("")}(a)}(e)))));var n}));return $('<table class="sim-booster-table"></table>').append(t.join("")).prop("outerHTML")}()}function tt(e){return e.forEach((e=>{e.results.forEach((e=>{Qe(e.results)}))})),function(){const t=[5,4,3,2,1].map((t=>{return n=t,C(T(1,e.map((e=>function(e){const t=e.skillName,a=e.results.find((e=>e.level===n))?.results;return null==a?"":function(e){return["<table>",C(E(2,`Level ${n} ${t}`)),...e.map((e=>C(T(1,[Ze(e.boosterCounts,"ame"),`<span class="sim-chance" style="color: ${j(e.result)}">${S(e.result)}</span>`])))),"</table>"].join("")}(a)}(e)))));var n}));return $('<table class="sim-booster-table"></table>').append(t.join("")).prop("outerHTML")}()}function nt(e){Qe(e);const t=e.filter((e=>e.boosterCounts.mythic<=0)),n=e.filter((e=>e.boosterCounts.mythic>0));return function(){const e=t.map(((e,t)=>C(T(1,[Ze(e.boosterCounts,"ame"),`<span class="sim-points" style="color: ${H(e.result)}">${M(e.result)}</span>`,Ze(n[t].boosterCounts,"ame"),`<span class="sim-points" style="color: ${H(n[t].result)}">${M(n[t].result)}</span>`]))));return $('<table class="sim-booster-table"></table>').append(e.join("")).prop("outerHTML")}()}function at(e){return e.forEach((e=>{e.results.forEach((e=>{Qe(e.results)}))})),function(){const t=[5,4,3,2,1].map((t=>{return n=t,C(T(1,e.map((e=>function(e){const t=e.skillName,a=e.results.find((e=>e.level===n))?.results;return null==a?"":function(e){return["<table>",C(E(2,`Level ${n} ${t}`)),...e.map((e=>C(T(1,[Ze(e.boosterCounts,"ame"),`<span class="sim-points" style="color: ${H(e.result)}">${M(e.result)}</span>`])))),"</table>"].join("")}(a)}(e)))));var n}));return $('<table class="sim-booster-table"></table>').append(t.join("")).prop("outerHTML")}()}class ot{element;content;constructor(e){this.element=$('<div class="sim-popup"></div>');const t=$('<div class="close-button xUncheck_mix_icn"></div>');t.on("click",(()=>{this.hide()})),this.element.append(t),"string"==typeof e?this.element.append($('<h1 class="caption"></h1>').text(e)):this.element.append(e);const n=$('<div class="content"></div>');this.content=n,this.element.append(n)}show(){this.element.appendTo("#contains_all")}hide(){this.element.detach()}toggle(){0===this.element.parent().length?this.show():this.hide()}setContent(e){"string"==typeof e?this.content.html(e):this.content.empty().append(e)}}async function st(e){if(!ve("/leagues-pre-battle.html"))return;await o(),function(e){Ee(e);const{hero_data:t,opponent_fighter:n}=e;if(null==t)throw new Error("hero_data is not found.");if(null==n)throw new Error("opponent_fighter is not found.")}(e);const t=q();!function(e){const{hero_data:t}=e;ye(t.team)}(e),function(e){const{hero_data:t,opponent_fighter:n}=e,a=Oe(t,n.player),o=Me();o.leagues=a,Se(o)}(e),async function(e){const{opponent_fighter:t,localStorageSetItem:n}=e,a=we(),o=t.player.team,r=()=>{n("battle_type","leagues"),n("leagues_id",a),ge({battleType:"leagues",opponentId:a,team:o})};r(),await s();const i=document.getElementById("change_team");null!=i&&(i.addEventListener("click",r,!0),i.addEventListener("auxclick",r,!0))}(e),t.doSimulateLeague&&(async function(e){const{hero_data:t,opponent_fighter:n}=e,{player:a,opponent:o}=i(t,n.player),{calculateLeaguePointsTable:r}=q(),l=y(r?"Full":"Standard",a,o);await s();const c=new B;c.updateAsync(l),c.setTooltip(x(a,o)),$(".opponent .icon-area").before(c.getElement().addClass("sim-left"));const u=new re;u.updateAsync(l),l.then((e=>{u.setTooltip(Pe(e))})),$(".opponent .icon-area").before(u.getElement().addClass("sim-right"))}(e),t.addBoosterSimulator&&async function(e){const{hero_data:t,opponent_fighter:n}=e,a=t.team,o=n.player.team;await s();const r=new ot("Booster simulator"),i=$('<div class="sim-result"><div class="sim-icon-button sim-icon-ame"></div></div>').addClass("sim-right").attr("tooltip","Booster simulator");let l=!1;i.on("click",(()=>{l||(l=!0,r.setContent("Now loading..."),queueMicrotask((async()=>{try{const e=await ze(a,o);r.setContent(nt(e))}catch(e){const t=e instanceof Error?e.message:e;r.setContent(`Error: ${t}<br>1. Go to the market page<br>2. Try again`)}}))),r.toggle()})),$(".battle_hero .icon-area").before(i)}(e),t.addSkillSimulator&&async function(e){const{hero_data:t,opponent_fighter:n}=e,a=t.team,o=n.player.team;await s();const r=new ot("Skill simulator"),i=$('<div class="sim-result"><div class="sim-icon-button sim-icon-girl-skills"></div></div>').addClass("sim-left").attr("tooltip","Skill simulator");let l=!1;i.on("click",(()=>{l||(l=!0,r.setContent("Now loading..."),queueMicrotask((async()=>{try{const e=await De(a,o);r.setContent(at(e))}catch(e){const t=e instanceof Error?e.message:e;r.setContent(`Error: ${t}<br>1. Go to the market page<br>2. Try again`)}}))),r.toggle()})),$(".battle_hero .icon-area").before(i)}(e))}let rt=null;async function it(e){if(!ve("/pantheon-pre-battle.html"))return;await o(),function(e){Ee(e);const{hero_data:t,opponent_fighter:n}=e;if(null==t)throw new Error("hero_data is not found.");if(null==n)throw new Error("opponent_fighter is not found.")}(e);const t=q();!function(e){const{hero_data:t,opponent_fighter:n}=e,a=Oe(t,n.player),o=Me();o.pantheon=a,Se(o)}(e),async function(e){const{opponent_fighter:t,localStorageSetItem:n}=e,a=we(),o=t.player.team,r=()=>{n("battle_type","pantheon"),n("pantheon_id",a),ge({battleType:"pantheon",opponentId:a,team:o})};r(),await s();const i=document.getElementById("change_team");null!=i&&(i.addEventListener("click",r,!0),i.addEventListener("auxclick",r,!0))}(e),t.doSimulatePantheon&&(async function(e){const{hero_data:t,opponent_fighter:n}=e,{player:a,opponent:o}=i(t,n.player),r=y("Chance",a,o);await s();const l=new B;l.updateAsync(r),l.setTooltip(x(a,o)),$(".opponent .icon-area").before(l.getElement().addClass("sim-left"))}(e),t.addBoosterSimulator&&async function(e){const{hero_data:t,opponent_fighter:n}=e,a=t.team,o=n.player.team;await s();const r=new ot("Booster simulator"),i=$('<div class="sim-result"><div class="sim-icon-button sim-icon-headband"></div></div>').addClass("sim-right").attr("tooltip","Booster simulator");let l=!1;i.on("click",(()=>{l||(l=!0,r.setContent("Now loading..."),queueMicrotask((async()=>{try{const e=await async function(e,t){const n=de();if(null==n)throw new Error("Market data not found");const a=await Ge(e);if(null==a)throw new Error("Team data not found");return Ue((async o=>{const s=qe(e,a,n,o),r=1+.25*o.mythic;return _("FastChance",s,t,r)}))}(a,o);r.setContent(function(e){Qe(e);const t=e.filter((e=>e.boosterCounts.mythic<=0)),n=e.filter((e=>e.boosterCounts.mythic>0));return function(){const e=t.map(((e,t)=>C(T(1,[Ze(e.boosterCounts,"headband"),`<span class="sim-chance" style="color: ${j(e.result)}">${S(e.result)}</span>`,Ze(n[t].boosterCounts,"headband"),`<span class="sim-chance" style="color: ${j(n[t].result)}">${S(n[t].result)}</span>`]))));return $('<table class="sim-booster-table"></table>').append(e.join("")).prop("outerHTML")}()}(e))}catch(e){const t=e instanceof Error?e.message:e;r.setContent(`Error: ${t}<br>1. Go to the market page<br>2. Try again`)}}))),r.toggle()})),$(".battle_hero .icon-area").before(i)}(e),t.addSkillSimulator&&async function(e){const{hero_data:t,opponent_fighter:n}=e,a=t.team,o=n.player.team;await s();const r=new ot("Skill simulator"),i=$('<div class="sim-result"><div class="sim-icon-button sim-icon-girl-skills"></div></div>').addClass("sim-left").attr("tooltip","Skill simulator");let l=!1;i.on("click",(()=>{l||(l=!0,r.setContent("Now loading..."),queueMicrotask((async()=>{try{const e=await async function(e,t){const n=de();if(null==n)throw new Error("Market data not found");const a=await Ge(e);if(null==a)throw new Error("Team data not found");return Je((async(o,s)=>{const r=Ne(qe(e,a,n,o),s),i=1+.25*o.mythic;return _("FastChance",r,t,i)}))}(a,o);r.setContent(et(e))}catch(e){const t=e instanceof Error?e.message:e;r.setContent(`Error: ${t}<br>1. Go to the market page<br>2. Try again`)}}))),r.toggle()})),$(".battle_hero .icon-area").before(i)}(e))}async function lt(e){if(!ve("/season-arena.html"))return;await o(),function(e){Ee(e);const{hero_data:t,caracs_per_opponent:n,opponents:a}=e;if(null==t)throw new Error("hero_data is not found.");if(null==n)throw new Error("caracs_per_opponent is not found.");if(null==a)throw new Error("opponents is not found.")}(e);const{hero_data:t,caracs_per_opponent:n,opponents:a}=e;!function(){const e=a[0].player,o=n[e.id_fighter],s=l(t.team,e.team),r=Math.round(100*o.damage/t.team.caracs.damage/s),i=Me();i.seasons=r/100,Se(i)}(),async function(e){const{opponents:t,localStorageSetItem:n}=e,a=()=>{n("battle_type","seasons");const e=$(".selected_opponent").attr("data-opponent");if(null==e)return;const a=t.find((t=>+t.player.id_fighter==+e));if(null==a)return;const o=a.player.team,s=a.rewards.rewards.find((e=>"victory_points"===e.type))?.value;ge({battleType:"seasons",opponentId:e,team:o,mojo:+(s??0)})};a(),await s();const o=document.getElementById("change_team");null!=o&&(o.addEventListener("click",a,!0),o.addEventListener("auxclick",a,!0))}(e);const i=q();i.doSimulateSeason&&(async function(){a.forEach((async e=>{const a=e.player,o=a.id_fighter,i={...t,...n[o]},l=r(i,a),c=r(a,i),u=y("Chance",l,c),m=+e.rewards.rewards.find((e=>"victory_points"===e.type)).value;await s();const d=new B;d.updateAsync(u),d.setTooltip(x(l,c));const p=new Le(m);p.updateAsync(u),$(`[data-opponent="${o}"] .icon-area`).before(d.getElement().addClass("sim-left")).before(p.getElement().addClass("sim-right"))}))}(),i.addBoosterSimulator&&async function(e){const{hero_data:t}=e,n=t.team;await s();const a=$('<div class="sim-result"><div class="sim-icon-button sim-icon-headband"></div></div>').addClass("sim-right").attr("tooltip","Booster simulator"),o={};a.on("click",(()=>{const t=ct(e);if(null==t)return;let a=o[+t.player.id_fighter];null==a&&(a=new ot(`Booster simulator (${t.player.nickname})`),a.setContent("Now loading..."),o[+t.player.id_fighter]=a,queueMicrotask((async()=>{try{const e=await async function(e,t){const n=de();if(null==n)throw new Error("Market data not found");const a=await Ge(e);if(null==a)throw new Error("Team data not found");return Ue((async o=>{const s=qe(e,a,n,o),r=1+.15*o.mythic;return _("FastChance",s,t,r)}))}(n,t.player.team);a.setContent(function(e){Qe(e);const t=e.filter((e=>e.boosterCounts.mythic<=0)),n=e.filter((e=>e.boosterCounts.mythic>0));return function(){const e=t.map(((e,t)=>C(T(1,[Ze(e.boosterCounts,"ame"),`<span class="sim-chance" style="color: ${j(e.result)}">${S(e.result)}</span>`,Ze(n[t].boosterCounts,"ame"),`<span class="sim-chance" style="color: ${j(n[t].result)}">${S(n[t].result)}</span>`]))));return $('<table class="sim-booster-table"></table>').append(e.join("")).prop("outerHTML")}()}(e))}catch(e){const t=e instanceof Error?e.message:e;a.setContent(`Error: ${t}<br>1. Go to the market page<br>2. Try again`)}}))),Object.values(o).filter((e=>e!=a)).forEach((e=>e.hide())),a.toggle()})),$(".battle_hero .icon-area").before(a)}(e),i.addSkillSimulator&&async function(e){const{hero_data:t}=e,n=t.team;await s();const a=$('<div class="sim-result"><div class="sim-icon-button sim-icon-girl-skills"></div></div>').addClass("sim-left").attr("tooltip","Skill simulator"),o={};a.on("click",(()=>{const t=ct(e);if(null==t)return;let a=o[+t.player.id_fighter];null==a&&(a=new ot(`Booster simulator (${t.player.nickname})`),a.setContent("Now loading..."),o[+t.player.id_fighter]=a,queueMicrotask((async()=>{try{const e=await async function(e,t){const n=de();if(null==n)throw new Error("Market data not found");const a=await Ge(e);if(null==a)throw new Error("Team data not found");return Je((async(o,s)=>{const r=Ne(qe(e,a,n,o),s),i=1+.15*o.mythic;return _("FastChance",r,t,i)}))}(n,t.player.team);a.setContent(tt(e))}catch(e){const t=e instanceof Error?e.message:e;a.setContent(`Error: ${t}<br>1. Go to the market page<br>2. Try again`)}}))),Object.values(o).filter((e=>e!=a)).forEach((e=>e.hide())),a.toggle()})),$(".battle_hero .icon-area").before(a)}(e))}function ct(e){const{opponents:t}=e,n=$(".selected_opponent").attr("data-opponent");if(null==n)return;const a=t.find((e=>+e.player.id_fighter==+n));return null!=a?a:void 0}async function ut(e){ve("/shop.html")&&(await o(),function(e){Ee(e);const{equipped_armor:t,equipped_booster:n}=e;if(null==t)throw new Error("equipped_armor is not found.");if(null==n)throw new Error("equipped_booster is not found.")}(e),function(e){mt(e),dt(e),pt(e);const t=e.Hero,n=t.updates;"function"==typeof n&&(t.updates=function(...t){const a=n(...t);try{mt(e),dt(e),pt(e)}catch(e){console.error(e)}return a})}(e))}function mt(e){const{equipped_armor:t}=e,n=function(e,t){const n=e.infos.class,a=e.infos.harem_endurance,o=ne[(n+2)%3],s=ne[(n+1)%3],r=ne[(n+0)%3],i=e=>e[o],l=e=>e[s]+e[r],c=function(e){const t=e.club?.upgrades_data;return ae(null==t?{}:te.map((e=>t[e].level/200)))}(e),u=function(e){const t=e.infos,n=t.level,a=t.class,o=[5,7,9,5,7];return ae([n*o[3-a],n*o[4-a],n*o[5-a]])}(e),m=function(e){return ae(e.infos)}(e),d=oe(u,m),p=oe(d,t),h=oe(c,1),f=se(d,h),g=se(t,h);return[...Array(5)].map(((e,n)=>{const o=ae(Array(3).fill(.06*n)),s=se(p,se(h,o));let r=t.endurance;r+=4*i(f),r*=h.endurance,r+=4*i(g),r*=h.endurance,r+=4*i(s),r+=a*h.endurance*(1+c.endurance*h.endurance);let u=t.chance;u+=l(f)/2,u*=h.chance,u+=l(g)/2,u*=h.chance,u+=l(s)/2;const m=se(p,oe(h,o));m.endurance=r,m.chance=u;const d=J(ne,m);return{damage:i(d),defense:.25*l(d),ego:d.endurance,chance:d.chance}}))}(e.Hero,function(e){return Object.values(e).map((e=>ae(e.caracs))).reduce(((e,t)=>oe(e,t)),ae({}))}(t));!function(e){const t=me();t.ginsengCaracs={data:e,version:ce},ue(t)}(n)}function dt(e){const{equipped_armor:t,Hero:n}=e,a=n.infos.class,o=Object.values(t).map((e=>e.resonance_bonuses?.class)).filter((e=>null!=e)).filter((e=>+e.identifier===a)).reduce(((e,t)=>(e[t.resonance]+=t.bonus,e)),{damage:0,ego:0});!function(e){const t=me();t.classBonus=e,ue(t)}(new V(o).divide(100).add(1).result())}function pt(e){const{equipped_booster:t}=e,n=ee(Array(0).concat(t.normal,t.mythic));n.mythic={leagues:1,seasons:1,trolls:1,pantheon:1,...n.mythic},ke(n)}async function ht(e){ve("/teams.html")&&(await o(),function(e){Ee(e);const{teams_data:t}=e;if(null==t)throw new Error("teams_data is not found.")}(e),q().doSimulateTeams&&async function(e){const{teams_data:t,localStorageGetItem:n}=e,a=Ce(e);if(null==a)return;const o=be()?.mojo,r=n("battle_type"),i=xe(r);if(null==i)return;const l=Object.fromEntries(Object.values(t).filter((e=>null!=e.id_team&&!e.locked)).map((e=>{const t=c(e,a,i),n=c(a,e),{calculateLeaguePointsTable:o}=q(),s=y("leagues"!==r?"Chance":o?"Full":"Standard",t,n);return[e.id_team,{resultPromise:s,player:t,opponent:n}]})));await s(),d();const u=new MutationObserver(d),m=document.querySelector(".teams-grid-container");function d(){const e=$(".selected-team").data("idTeam"),t=l[e];if(null==t)return;const{resultPromise:n,player:a,opponent:s}=t,i=$(".team-right-part-container .icon-area"),c=new B;if(c.updateAsync(n),c.setTooltip(x(a,s)),i.before(c.getElement().addClass("sim-left")),"leagues"===r){const e=new re;e.updateAsync(n),n.then((t=>{e.setTooltip(Pe(t))})),i.before(e.getElement().addClass("sim-right"))}if("seasons"===r&&null!=o){const e=new Le(o);e.updateAsync(n),i.before(e.getElement().addClass("sim-right"))}}null!=m&&u.observe(m,{subtree:!0,attributes:!0,attributeFilter:["class"]})}(e),function(e){const{teams_data:t,localStorageGetItem:n}=e,a=Object.values(t).find((e=>e.selected_for_battle_type.includes("leagues")));null!=a&&null!=a.id_team&&null!=a.theme&&1==+a.slot_index&&ye(a);const o=document.getElementById("btn-select-team");o?.addEventListener("click",(()=>{if("leagues"===n("battle_type")){const e=document.querySelector(".selected-team").dataset.teamIndex;if(1!=+e)return;const n=t[e];null!=n&&null!=n.id_team&&null!=n.theme&&ye(n)}}),!0)}(e))}let ft,gt=null,bt=null;class yt{element;selectElement;callbacks=[];constructor(e,t,n){const a=$('<div class="form-control"><div class="select-group"></div></div>'),o=$('<label class="head-group"></label>').attr("for",e).text(t),s=n.map((e=>{const t=$("<option></option>").attr("value",e.value).text(e.label);return e.selected&&t.prop("selected",!0),t})),r=$('<select icon="down-arrow"></select>').attr("name",e).attr("id",e).append(s);r.on("change",(()=>{this.callbacks.forEach((e=>{e(String(r.val()))}))})),a.find(".select-group").append(o).append(r),this.element=a,this.selectElement=r,r.selectric()}onChange(e){this.callbacks.push(e)}getValue(){return String(this.selectElement.val())}getElement(){return this.element}}class _t extends ot{fights;booster;output;playerTeam;opponents;currentScore;foughtCounts;cache=new Map;constructor(e,t,n,a){const o=$('<div class="sim-selectors form-wrapper"></div>'),s=new yt("sim-selector-fights","Fights",[{label:"All",value:"all"},{label:"Unfought",value:"unfought",selected:!0}]),r=new yt("sim-selector-booster","Booster",[{label:"All",value:"all",selected:!0},{label:"Boosted",value:"boosted"},{label:"Unboosted",value:"unboosted"},{label:"Unboosted (sim)",value:"unboosted_prediction"}]),i=new yt("sim-selector-output","Output",[{label:"All",value:"all",selected:!0},{label:"Best",value:"best"}]),l=()=>{this.update()};s.onChange(l),r.onChange(l),i.onChange(l),super(o.append(s.getElement(),r.getElement(),i.getElement())),this.fights=s,this.booster=r,this.output=i,this.playerTeam=e,this.opponents=t,this.currentScore=n,this.foughtCounts=a}update(){this.setContent("Now loading..."),queueMicrotask((async()=>{const e=this.fights.getValue(),t=this.booster.getValue(),n=this.output.getValue(),a="unfought"===e;try{let o=this.opponents;a&&(o=o.filter((e=>e.numChallenges>0))),"boosted"===t&&(o=o.filter((e=>e.isBoosted))),"unboosted"===t&&(o=o.filter((e=>!e.isBoosted)));const s="unboosted_prediction"===t,r=await async function(e,t,n,a){const o=de();if(null==o)throw new Error("Market data not found");const s=await Ge(e);if(null==s)throw new Error("Team data not found");const r=We();return await Promise.all(r.flatMap((r=>{const i=qe(e,s,o,r.counts),l=1+.15*r.counts.mythic;return t.map((async e=>{const t=[e.id,r.key,a?"prediction":"original"].join("-");let o=n.get(t);if(null==o){const s={...e.team.caracs};if(a){const t=ee(e.boosters).normals.map((e=>e.multiplier)).filter((e=>null!=e)).reduce(((e,t)=>X(e,t)),Q({}));s.damage/=1+t.damage/100,s.ego/=1+t.ego/100,s.chance/=1+t.chance/100}const c={...e.team,caracs:s};o={boosterKey:r.key,boosterCounts:r.counts,opponentId:e.id,challenges:e.numChallenges,result:_("FastPoints",i,c,l)},n.set(t,o)}const s=await o.result;return{...o,result:s}}))})))}(this.playerTeam,o,this.cache,s),i=(e,t,n)=>{let a=e.get(t);null==a&&(a=[],e.set(t,a)),a.push(n)};if("all"===n){const n=new Map;r.forEach((e=>{i(n,e.boosterKey,e)}));const o=[...n.values()].map((e=>{const t=e[0].boosterCounts,n=a?e.reduce(((e,t)=>e+t.result*t.challenges),0):3*e.reduce(((e,t)=>e+t.result),0),o=a?e.reduce(((e,t)=>e+t.challenges),0):3*e.length;return{boosterCounts:t,sum:n,challenges:o,average:n/o,result:n}}));"unfought"===e&&"all"===t?this.setContent(function(e,t,n){Qe(e);const a=e.filter((e=>e.boosterCounts.mythic<=0)),o=e.filter((e=>e.boosterCounts.mythic>0));return function(){const e=[...Array(Math.max(a.length,o.length))].map(((e,s)=>C(T(1,[a[s],o[s]].flatMap((e=>{const a=H(e.average),o=e.sum+t,s=o/(e.challenges+n),r=H(s);return[Ze(e.boosterCounts,"ame"),`<span class="sim-points" style="color: ${a}">${M(e.average)}</span>`,"*",`<span>${e.challenges.toFixed()}</span>`,"=",`<span style="color: ${a}">${e.sum.toFixed()}</span>`,"=>",`<span style="color: ${r}">${o.toFixed()}</span>`,`<span style="color: ${r}">(${M(s)})</span>`]}))))));return $('<table class="sim-booster-table"></table>').append(e.join("")).prop("outerHTML")}()}(o,this.currentScore,this.foughtCounts)):this.setContent(function(e){Qe(e);const t=e.filter((e=>e.boosterCounts.mythic<=0)),n=e.filter((e=>e.boosterCounts.mythic>0));return function(){const e=[...Array(Math.max(t.length,n.length))].map(((e,a)=>C(T(1,[t[a],n[a]].flatMap((e=>{const t=H(e.average);return[Ze(e.boosterCounts,"ame"),`<span class="sim-points" style="color: ${t}">${M(e.average)}</span>`,"*",`<span class="sim-points">${e.challenges.toFixed()}</span>`,"=",`<span class="sim-points" style="color: ${t}">${e.sum.toFixed()}</span>`]}))))));return $('<table class="sim-booster-table"></table>').append(e.join("")).prop("outerHTML")}()}(o))}if("best"===n){const n=new Map;r.forEach((e=>{i(n,e.opponentId,e)}));const[o,s]=[[...n.values()].map((e=>e.filter((e=>0==e.boosterCounts.mythic)))),[...n.values()]].map((e=>{const t=new Map;e.forEach((e=>{const n=e.reduce(((e,t)=>Math.max(e,t.result)),0);e.filter((e=>e.result>=n)).forEach((e=>{i(t,e.boosterKey,e)}))}));const n=new Set,o=[];let s=[...t.values()];for(;0!==s.length;){const e=s.sort(((e,t)=>e.length-t.length)).pop();if(0===e.length)break;o.push(e),e.forEach((e=>{n.add(e.opponentId)})),s=s.map((e=>e.filter((e=>!n.has(e.opponentId)))))}return o.map((e=>{const t=e[0].boosterCounts,n=a?e.reduce(((e,t)=>e+t.result*t.challenges),0):3*e.reduce(((e,t)=>e+t.result),0),o=a?e.reduce(((e,t)=>e+t.challenges),0):3*e.length;return{boosterCounts:t,sum:n,challenges:o,average:n/o,result:o}}))}));"unfought"===e&&"all"===t?this.setContent(function(e,t,n,a){Qe(e),Qe(t);const o=0===a?NaN:n/a,s=0===a?"#FFF":H(o),r=[e,t].map((e=>{const t=e.reduce(((e,t)=>e+t.sum),0),o=e.reduce(((e,t)=>e+t.challenges),0),s=t/o,r=H(s),i=t+n,l=i/(o+a);return{sum:t,challenges:o,average:s,color:r,total:i,avgTotal:l,color3:H(l)}}));return function(){const i=[...Array(Math.max(e.length,t.length))].map(((n,a)=>C(T(1,[e[a],t[a]].flatMap((e=>{if(null==e)return Array(6).fill("");const t=H(e.average);return[Ze(e.boosterCounts,"ame"),`<span class="sim-points" style="color: ${t}">${M(e.average)}</span>`,"*",`<span class="sim-points">${e.challenges.toFixed()}</span>`,"=",`<span class="sim-points" style="color: ${t}">${e.sum.toFixed()}</span>`]}))))));return $('<table class="sim-booster-table"></table>').append(C(T(6,["No AME","All"])),i.join(""),C(T(1,r.flatMap((e=>["Sum",`<span class="sim-points" style="color: ${e.color}">${M(e.average)}</span>`,"*",`<span class="sim-points">${e.challenges.toFixed()}</span>`,"=",`<span class="sim-points" style="color: ${e.color}">${e.sum.toFixed()}</span>`])))),C(T(1,r.flatMap((e=>["Current score",`<span style="color: ${s}">${Number.isNaN(o)?"?":M(o)}</span>`,"*",`<span>${a}</span>`,"=",`<span style="color: ${s}">${n}</span>`])))),C(T(1,r.flatMap((e=>["Total",`<span style="color: ${e.color3}">${M(e.avgTotal)}</span>`,"*",`<span>${e.challenges+a}</span>`,"=",`<span style="color: ${e.color3}">${e.total.toFixed()}</span>`]))))).prop("outerHTML")}()}(o,s,this.currentScore,this.foughtCounts)):this.setContent(function(e,t){Qe(e),Qe(t);const n=[e,t].map((e=>{const t=e.reduce(((e,t)=>e+t.sum),0),n=e.reduce(((e,t)=>e+t.challenges),0),a=t/n;return{sum:t,challenges:n,average:a,color:H(a)}}));return function(){const a=[...Array(Math.max(e.length,t.length))].map(((n,a)=>C(T(1,[e[a],t[a]].flatMap((e=>{if(null==e)return Array(6).fill("");const t=H(e.average);return[Ze(e.boosterCounts,"ame"),`<span class="sim-points" style="color: ${t}">${M(e.average)}</span>`,"*",`<span class="sim-points">${e.challenges.toFixed()}</span>`,"=",`<span class="sim-points" style="color: ${t}">${e.sum.toFixed()}</span>`]}))))));return $('<table class="sim-booster-table"></table>').append(C(T(6,["No AME","All"])),a.join(""),C(T(1,n.flatMap((e=>["Sum:",`<span class="sim-points" style="color: ${e.color}">${M(e.average)}</span>`,"*",`<span class="sim-points">${e.challenges.toFixed()}</span>`,"=",`<span class="sim-points" style="color: ${e.color}">${e.sum.toFixed()}</span>`]))))).prop("outerHTML")}()}(o,s))}}catch(e){const t=e instanceof Error?e.message:e;this.setContent(`Error: ${t}<br>1. Go to the market page<br>2. Try again`)}}))}show(){this.update(),super.show()}}function vt(e){Ee(e);const{opponents_list:t}=e;if(null==t)throw new Error("opponents_list is not found.")}async function wt(e){if(!ve("/tower-of-fame.html"))return;await o(),vt(e);const{opponents_list:t,Hero:n}=e;!function(e){const{Hero:t,opponents_list:n,server_now_ts:a}=e,o=t.infos.id,s=n.find((e=>+e.player.id_fighter===o));if(null==s)return;const r=s.boosters.filter((e=>+e.lifetime>a||+e.usages_remaining>0)),i=$e(),l=ee(r);l.mythic={...i.mythic,...l.mythic},ke(l)}(e),async function(e){const a=q();if(!a.doSimulateLeagueTable)return;const o=n.infos.id,r=t.find((e=>+e.player.id_fighter===o));if(null==r)return;const i=await Mt(e),l=i.leagueMultiplier,c=i.team;if(null==l||null==c)return;const u=t.filter((e=>+e.player.id_fighter!==o)),m=u.filter((e=>Object.values(e.match_history)[0].filter((e=>null!=e)).length<3)),d=(a.doSimulateFoughtOpponents?u:m).map((e=>_("Points",c,e.player.team,l).then((t=>[e.player.id_fighter,t])))),p=await Promise.all(d),h=Object.fromEntries(p),f=()=>{t.forEach((e=>{e.power=h[e.player.id_fighter]?.avgPoints??0})),a.replaceHHLeaguesPlusPlus&&t.forEach((e=>{e.sim={...e.sim,forSim:{...e.sim?.forSim,playerTeam:c,opponentTeam:e.player.team,mythicBoosterMultiplier:l}}}))};f();const g=t.reduce(((e,t)=>{const n=Object.values(t.match_history)[0];if(!Array.isArray(n))return e;const a=n.filter((e=>null!=e)),o=a.reduce(((e,t)=>e+parseInt(t.match_points)),0),s=3-a.length;return e+o+t.power*s}),0),b=g/(t.length-1)/3,y=3*p.reduce(((e,t)=>e+t[1].avgPoints),0),w=y/p.length/3;await s(),$('.league_table .head-column[column="match_history_sorting"] > span').attr("tooltip",`Score expected: <em>${v(g,1)}</em><br>Average: <em>${M(b)}</em>`);const k=$('.league_table .head-column[column="power"] > span');k.html(k.html().replace("Power","Sim")),k.attr("tooltip",`Sum: <em>${v(y,1)}</em><br>Average: <em>${M(w)}</em>`);const S=u.map((t=>({id:t.player.id_fighter,team:t.player.team,numChallenges:3-Object.values(t.match_history)[0].filter((e=>null!=e)).length,isBoosted:t.boosters.filter((t=>+t.lifetime>e.server_now_ts)).length>0,boosters:t.boosters}))),E=+r.player_league_points,T=S.reduce(((e,t)=>e+(3-t.numChallenges)),0),C=new _t(c,S,E,T),x=()=>{const e={};document.querySelectorAll(".data-row.body-row").forEach((t=>{const n=t.querySelector("[id-member]")?.getAttribute("id-member"),a=t.querySelector(".data-column[column=power]");null!=n&&null!=a&&(e[n]??=[],e[n].push(a))})),t.forEach((t=>{const n=$("<div></div>").addClass("sim-column"),s=t.player.id_fighter,r=h[s];if(null!=r){let e="";r.minPoints>=25&&(e='<div class="vCheck_mix_icn sim-mark"></div>'),n.html(`${e}${v(r.avgPoints,2)}`).css("color",H(r.avgPoints))}else if(+s===o&&a.addBoosterSimulator&&a.addBoosterSimulatorToLeagueTable){const e=$('<div class="sim-icon-button sim-icon-ame"></div>').attr("tooltip","Booster simulator");e.on("click",(()=>{C.toggle()})),n.append(e)}else n.text("-");$(e[s]).empty().append(n)}))};function P(){G().then((t=>{if(null==t)return;const n=e.opponent_fighter;null!=n?.sim&&(new t.League).display(n.sim)}))}x(),a.replaceHHLeaguesPlusPlus&&P();const L=k[0];null!=L&&new MutationObserver((()=>{f(),x(),a.replaceHHLeaguesPlusPlus&&P()})).observe(L,{childList:!0,subtree:!0});const A=document.querySelector(".league_table .data-list");null!=A&&new MutationObserver((()=>{f(),x()})).observe(A,{childList:!0})}(e),async function(){await s();const e=document.getElementById("change_team");if(null!=e){const t=()=>{q().replaceHHLeaguesPlusPlus&&null!=ft?ge({battleType:"leagues",opponentId:"",team:ft}):ge(null)};e.addEventListener("click",t,!0),e.addEventListener("auxclick",t,!0)}}()}let kt=null;async function $t(e){return kt??=(async()=>{try{const{opponents_list:t}=e,n=t.filter((e=>{const t=Object.values(e.match_history)[0];return Array.isArray(t)&&t.some((e=>null===e))}))[0]?.player.id_fighter;if(null!=n){const{hero_data:e,opponent_fighter:t}=await async function(e){return rt??=(async()=>{const t=await fetch(`leagues-pre-battle.html?id_opponent=${e}`),n=await t.text();return{hero_data:JSON.parse(n.match(/var\s+hero_data\s*=\s*(\{.*?\});/s)[1]),opponent_fighter:Function("return "+n.match(/var\s+opponent_fighter\s*=\s*(\{.*?\});/s)[1])()}})(),rt}(n),a=e.team;if(null!=a)return ye(a),{player:e,opponent:t.player}}}catch(e){console.error(e)}return null})(),kt}let St=null;async function Mt(e){return St??=(async()=>{let t,n;const{referrer:a}=document;if(["leagues-pre-battle.html","league-battle.html"].some((e=>a.includes(e)))&&(t=_e(),n=Me().leagues??null,null!=t&&null!=n))return{team:t,leagueMultiplier:n};try{const n=await $t(e);if(null!=n){const{player:e,opponent:t}=n,{team:a}=e;ye(a);const o=Oe(e,t);return Se({...Me(),leagues:o}),{team:a,leagueMultiplier:o}}t=await async function(){return bt??=(async()=>{const{referrer:e}=document;if(["teams.html","leagues-pre-battle.html","league-battle.html"].some((t=>e.includes(t)))){const e=_e();if(null!=e)return e}try{const e=(await async function(){return gt??=(async()=>{const e=await fetch("teams.html"),t=await e.text();return{teams_data:JSON.parse(t.match(/var\s+teams_data\s*=\s*(\{.*?\});/)?.[1])}})(),gt}()).teams_data,t=Object.values(e).find((e=>e.selected_for_battle_type?.includes("leagues")));if(null!=t)return ye(t),t}catch(e){console.error(e)}return _e()})(),bt}()??t,null!=t&&ye(t)}catch(e){console.error(e)}return void 0===t&&(t=_e()),void 0===n&&(n=Me().leagues??null),{team:t,leagueMultiplier:n}})(),St}!async function(e){await o();const{IMAGES_URL:t,SITE_ROOT:n}=window;"string"==typeof t&&(e=e.replaceAll("${IMAGES_URL}",t)),"string"==typeof n&&(e=e.replaceAll("${SITE_ROOT}",n)),$(document.head).append(`<style>${e}</style>`)}(".sim-result{width:max-content;height:0;position:relative;bottom:1.25rem;line-height:1.25rem;text-align:center;text-shadow:-1px -1px 0 #000,-1px 1px 0 #000,1px -1px 0 #000,1px 1px 0 #000;z-index:1}.sim-result .sim-label{font-size:.75rem}.sim-result.sim-left{margin-right:60%}.sim-result.sim-right{margin-left:60%}.opponent .sim-result.sim-top{bottom:12rem}#season-arena .opponent .sim-result.sim-top{bottom:11.5rem;line-height:1rem}.sim-result.sim-pending{color:#999}.sim-mark{display:inline-block;width:1em;height:1em;margin:-.125em .25em .125em -1.25em;background-size:1em;vertical-align:bottom}table.sim-table{border-collapse:collapse;color:#fff;background-color:#000;font-size:.75rem;line-height:1rem}table.sim-table td{padding:.25rem;border:1px solid #999}table.sim-points-table{border-collapse:collapse;color:#fff;background-color:#000;font-size:.75rem;line-height:1.25rem;text-shadow:-1px -1px 0 #000,-1px 1px 0 #000,1px -1px 0 #000,1px 1px 0 #000}table.sim-points-table td{padding:1px .25rem}.sim-points-table .sim-bar-container{width:5rem}.sim-points-table .sim-bar{height:1.25rem;margin-bottom:-1.25rem;background-color:#ccf9}.sim-column{text-align:center;text-wrap:nowrap}.sim-column .sim-mark{margin:.25em 0}.player_team_block{min-width:15rem}.sim-popup{position:absolute;left:0;right:0;top:5rem;z-index:36;margin:auto;width:min-content;height:min-content;color:#fff;background-color:#000;border:.75rem solid #000;border-radius:.5rem;text-align:left}.sim-popup .close-button{position:absolute;right:-.25rem;top:-.25rem;cursor:pointer}.sim-popup .caption{font-size:1rem;line-height:1.5rem;width:max-content;margin:0 3rem .75rem 0}.sim-popup .content{font-size:.75rem;line-height:1.5rem;width:max-content;max-height:27rem;overflow-y:auto}table.sim-booster-table{border-collapse:separate;font-size:.75rem;line-height:1.5rem;width:max-content}table.sim-booster-table td span.sim-chance{margin:0 .5rem}table.sim-booster-table .sim-booster-slot{width:1.5rem;height:1.5rem;border:1px solid #fff}table.sim-booster-table .sim-booster-icon{width:100%;height:100%;background-size:contain}.sim-icon-button{display:block;width:2.5rem;height:2.5rem;background-size:contain;cursor:pointer}.sim-icon-ginseng{background-image:url('${IMAGES_URL}/pictures/items/B1.png')}.sim-icon-jujubes{background-image:url('${IMAGES_URL}/pictures/items/B2.png')}.sim-icon-chlorella{background-image:url('${IMAGES_URL}/pictures/items/B3.png')}.sim-icon-cordyceps{background-image:url('${IMAGES_URL}/pictures/items/B4.png')}.sim-icon-ame{background-image:url('${IMAGES_URL}/pictures/items/MB2.png')}.sim-icon-headband{background-image:url('${IMAGES_URL}/pictures/items/MB3.png')}.sim-icon-girl-skills{background-image:url('${IMAGES_URL}/pictures/design/girl_skills/active_skills_icon.png')}.sim-column .sim-icon-button{margin:-1rem auto}.sim-selectors.form-wrapper{display:flex;margin:-.5rem 3rem 0 0;gap:.5rem;width:min-content}.sim-selectors.form-wrapper>.form-control{width:9rem}.sim-selectors.form-wrapper>.form-control>.select-group .selectric-items{height:auto}.sim-selectors.form-wrapper>.form-control>.select-group .selectric-items li:first-of-type{padding-left:5px}.sim-traits{margin:.5rem .5rem 0 .5rem}.sim-trait-icon{display:inline-block;width:1.75rem;height:1.75rem;background-size:contain;background-position:center}"),async function(){(async function(){const e=await O;null!=e&&(e.registerGroup({key:"sim-v4",name:"Sim v4"}),F.addBattleSimulator=!1,F.doSimulateTroll=!1,F.doSimulateLeague=!1,F.doSimulateSeason=!1,F.doSimulatePantheon=!1,F.doSimulateTeams=!1,F.doSimulateEditTeam=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"BattleSimulator",label:"Battle Sim",default:!0,subSettings:[{key:"troll",default:!0,label:"Villain"},{key:"league",default:!0,label:"League"},{key:"season",default:!0,label:"Season"},{key:"pantheon",default:!0,label:"Pantheon"},{key:"teams",default:!0,label:"Team Selecting"},{key:"editTeam",default:!0,label:"Team Editing"}]},run(e){F.addBattleSimulator=!0,F.doSimulateTroll=e.troll,F.doSimulateLeague=e.league,F.doSimulateSeason=e.season,F.doSimulatePantheon=e.pantheon,F.doSimulateTeams=e.teams,F.doSimulateEditTeam=e.editTeam}}),F.doSimulateLeagueTable=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"DoSimulateLeagueTable",label:"Run simulations in the league table (maybe slow)",default:!0,subSettings:[{key:"skip",default:!0,label:"Skip fought opponents"},{key:"booster",default:!1,label:"Add booster simulator to league table"}]},run(e){F.doSimulateLeagueTable=!0,F.doSimulateFoughtOpponents=!e.skip,F.addBoosterSimulatorToLeagueTable=e.booster}}),F.calculateLeaguePointsTable=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"CalculateLeaguePointsTable",label:"Calculate each probability of league score (maybe slow)",default:!1},run(){F.calculateLeaguePointsTable=!0}}),F.addBoosterSimulator=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"BoosterSimulator",label:"Booster Sim",default:!0,subSettings:[{key:"ginseng",default:!0,label:"Ginseng"},{key:"jujubes",default:!1,label:"Jujubes"},{key:"chlorella",default:!0,label:"Chlorella"},{key:"cordyceps",default:!0,label:"Cordyceps"}]},run(e){F.addBoosterSimulator=!0,F.simulateGinseng=e.ginseng,F.simulateJujubes=e.jujubes,F.simulateChlorella=e.chlorella,F.simulateCordyceps=e.cordyceps}}),F.addSkillSimulator=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"SkillSimulator",label:"Skill Sim",default:!1,subSettings:[{key:"level5",default:!0,label:"Level 5"},{key:"level4",default:!0,label:"Level 4"},{key:"level3",default:!1,label:"Level 3"},{key:"level2",default:!1,label:"Level 2"},{key:"level1",default:!1,label:"Level 1"}]},run(e){F.addSkillSimulator=!0,F.skillLevelsToBeSimulated=[5,4,3,2,1].filter((t=>e["level"+t]))}}),F.replaceHHLeaguesPlusPlus=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"ReplaceHHLeaguesPlusPlus",label:"Replace HH Leagues++ sim",default:!0},run(){F.replaceHHLeaguesPlusPlus=!0}}),F.addGirlTraitsToGirlTooltip=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"AddGirlTraitsToGirlTooltip",label:"Add girl's traits to girl's tooltip",default:!0},run(){F.addGirlTraitsToGirlTooltip=!0}}),F.improveTooltipsForLabyrinth=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"ImproveTooltipsForLabyrinth",label:"Improve tooltips for Labyrinth",default:!0},run(){F.improveTooltipsForLabyrinth=!0}}),F.addAttackOrderIconToLabyrinth=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"AddAttackOrderIconToLabyrinth",label:"Add attack order icon to Labyrinth",default:!0},run(){F.addAttackOrderIconToLabyrinth=!0}}),F.addClassIconToLabyrinth=!1,e.registerModule({group:"sim-v4",configSchema:{baseKey:"AddClassIconToLabyrinth",label:"Add class icon to Labyrinth",default:!0},run(){F.addClassIconToLabyrinth=!0}}),e.loadConfig(),e.runModules())})(),async function(){if(!ve("/tower-of-fame.html"))return;await o();const e=await G();if(null==e)return;const t=q();if(!t.replaceHHLeaguesPlusPlus)return;vt(window);const n=window;let a,s,r,i=t.doSimulateLeagueTable;const l=e.League;e.League=class{original;constructor(...e){this.original=new l(...e)}extract(){return this.original.extract()}display(e){r=e;let{forSim:o}=e;if(null==o){i||(i=!0,(async()=>{const e=await Mt(n);a=e?.team,s=e?.leagueMultiplier??1;const t=r?.forSim;null!=t&&!0===t.hasAssumptions&&(t.playerTeam=a,t.mythicBoosterMultiplier=s,this.display(r))})());const t=window.hero_data,l=window.opponent_fighter;if(null!=t&&null!=l){const r=a??t.team,i=$(".data-row.body-row.selected [id-member]").attr("id-member"),c=((null!=i?n.opponents_list.find((e=>+e.player.id_fighter==+i)):null)??l).player.team,u=s??1,m=null==r.id_team;o={playerTeam:r,opponentTeam:c,mythicBoosterMultiplier:u,hasAssumptions:m},e.forSim=o}}if(null==o)return this.original.display(e);{let e=o.playerTeam;const n=o.opponentTeam;if(ft=n,null==o.result||o.hasAssumptions&&null!=e.id_team){e=a??e;const t=s??o.mythicBoosterMultiplier??1,{player:r,opponent:i}=function(e,t,n=1){return{player:c(e,t,n),opponent:c(t,e)}}(e,n,t);o.battleTable=x(r,i);const l=null==e.id_team;o.hasAssumptions=l;const{calculateLeaguePointsTable:u}=q(),m=u?"Full":"Standard";o.result=y(m,r,i).then((e=>({...e,hasAssumptions:l})))}const r=o.result;$(".opponent .icon-area").parent().find(".sim-result").remove();const i=new B;i.updateAsync(r),i.setTooltip(o.battleTable),$(".opponent .icon-area").before(i.getElement().addClass("sim-left"));const l=new re;if(l.updateAsync(r),r.then((e=>{l.setTooltip(Pe(e))})),$(".opponent .icon-area").before(l.getElement().addClass("sim-right")),null!=e.id_team){if(t.addBoosterSimulator){const t=new ot("Booster simulator"),a=$('<div class="sim-result"><div class="sim-icon-button sim-icon-ame"></div></div>').addClass("sim-left").addClass("sim-top").attr("tooltip","Booster simulator");a.on("click",(async()=>{if(t.toggle(),null==o.boosterTable){t.setContent("Now loading..."),null==o.boosterResults&&(o.boosterResults=ze(e,n));try{const e=await o.boosterResults;o.boosterTable=nt(e)}catch(e){const t=e instanceof Error?e.message:e;o.boosterTable=`Error: ${t}<br>1. Go to the market page<br>2. Try again`}}t.setContent(o.boosterTable)})),$(".opponent .icon-area").before(a)}if(t.addSkillSimulator){const t=new ot("Skill simulator"),a=$('<div class="sim-result"><div class="sim-icon-button sim-icon-girl-skills"></div></div>').addClass("sim-right").addClass("sim-top").attr("tooltip","Skill simulator");a.on("click",(async()=>{if(t.toggle(),null==o.skillTable){t.setContent("Now loading..."),null==o.skillResults&&(o.skillResults=De(e,n));try{const e=await o.skillResults;o.skillTable=at(e)}catch(e){const t=e instanceof Error?e.message:e;o.skillTable=`Error: ${t}<br>1. Go to the market page<br>2. Try again`}}t.setContent(o.skillTable)})),$(".opponent .icon-area").before(a)}}}}}}(),[Te,Ae,Ve,st,it,lt,ut,ht,wt,Ke].forEach((e=>{queueMicrotask((()=>{e(window)}))})),async function(){await s();const e=()=>{$(".matchRating").length>0&&$(".sim-result").addClass("sim-top")};e();const t=new MutationObserver(e);document.querySelectorAll(".player_team_block.opponent, .season_arena_opponent_container").forEach((e=>{t.observe(e,{childList:!0,subtree:!0})}))}(),localStorage.removeItem("HHBattleSimulatorLastOpponentId"),localStorage.removeItem("HHBattleSimulatorLastOpponentTeam"),localStorage.removeItem("HHBattleSimulatorPlayerLeaguesTeam"),localStorage.removeItem("HHBattleSimulatorPlayerBoosterBonus")}()})();