// ==UserScript==
// @name         Hentai Heroes Battle Simulator v4
// @namespace    https://github.com/rena-jp/hh-battle-simulator-v4
// @version      4.13.7
// @description  Add a battle simulator to Hentai Heroes and related games
// @author       rena
// @match        https://*.hentaiheroes.com/*
// @match        https://nutaku.haremheroes.com/*
// @match        https://*.gayharem.com/*
// @match        https://*.comixharem.com/*
// @match        https://*.hornyheroes.com/*
// @match        https://*.pornstarharem.com/*
// @match        https://*.transpornstarharem.com/*
// @grant        none
// @run-at       document-body
// @updateURL    https://github.com/rena-jp/hh-battle-simulator-v4/raw/main/dist/hh-battle-simulator-v4.meta.js
// @downloadURL  https://github.com/rena-jp/hh-battle-simulator-v4/raw/main/dist/hh-battle-simulator-v4.user.js
// ==/UserScript==

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/data/booster.ts":
/*!*****************************!*\
  !*** ./src/data/booster.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBoosterData: () => (/* binding */ getBoosterData)\n/* harmony export */ });\n/* harmony import */ var _fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fighter */ \"./src/data/fighter.ts\");\n\nconst MythicBoosterMap = {\n    MB2: {\n        // AME\n        leagues: 1.15,\n        seasons: 1.15,\n    },\n    MB3: {\n        // Headband\n        trolls: 1.25,\n        pantheon: 1.25,\n    },\n    MB8: {\n        // LME\n        leagues: 1.15,\n        seasons: 1,\n    },\n    MB9: {\n        // SME\n        leagues: 1,\n        seasons: 1.15,\n    },\n};\nfunction getBoosterData(boosters) {\n    const normals = [];\n    let mythic = {};\n    boosters.forEach(e => {\n        const { item } = e;\n        switch (item.rarity) {\n            case 'common':\n            case 'rare':\n            case 'epic':\n                normals.push({\n                    addend: (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.toFighterCaracs)(item),\n                    lifetime: +e.lifetime,\n                });\n                break;\n            case 'legendary':\n                normals.push({\n                    multiplier: (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.toFighterCaracs)(item),\n                    lifetime: +e.lifetime,\n                });\n                break;\n            case 'mythic':\n                const mythicBonus = MythicBoosterMap[item.identifier];\n                if (mythicBonus != null) {\n                    mythic = { ...mythic, ...mythicBonus };\n                }\n                break;\n        }\n    });\n    return { normals, mythic };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/booster.ts?");

/***/ }),

/***/ "./src/data/caracs.ts":
/*!****************************!*\
  !*** ./src/data/caracs.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaracsCalculator: () => (/* binding */ CaracsCalculator),\n/* harmony export */   addCaracs: () => (/* binding */ addCaracs),\n/* harmony export */   divideCaracs: () => (/* binding */ divideCaracs),\n/* harmony export */   equalsCaracs: () => (/* binding */ equalsCaracs),\n/* harmony export */   multiplyCaracs: () => (/* binding */ multiplyCaracs),\n/* harmony export */   roundCaracs: () => (/* binding */ roundCaracs),\n/* harmony export */   subtractCaracs: () => (/* binding */ subtractCaracs),\n/* harmony export */   toCaracs: () => (/* binding */ toCaracs),\n/* harmony export */   truncateCaracs: () => (/* binding */ truncateCaracs)\n/* harmony export */ });\nfunction toNumber(value, defaultValue) {\n    return value != null ? +value : defaultValue;\n}\nfunction toCaracs(keys, caracs, defaultValue) {\n    if (Array.isArray(caracs)) {\n        return keys.reduce((newCaracs, key, i) => {\n            newCaracs[key] = toNumber(caracs[i], defaultValue);\n            return newCaracs;\n        }, {});\n    }\n    else {\n        return keys.reduce((newCaracs, key) => {\n            newCaracs[key] = toNumber(caracs[key], defaultValue);\n            return newCaracs;\n        }, {});\n    }\n}\nfunction calcCaracs(keys, x, y, f) {\n    if (typeof y === 'number') {\n        return keys.reduce((newCaracs, key) => {\n            newCaracs[key] = f(x[key], y);\n            return newCaracs;\n        }, {});\n    }\n    else {\n        return keys.reduce((newCaracs, key) => {\n            newCaracs[key] = f(x[key], y[key]);\n            return newCaracs;\n        }, {});\n    }\n}\nfunction addCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x + y);\n}\nfunction subtractCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x - y);\n}\nfunction multiplyCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x * y);\n}\nfunction divideCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x / y);\n}\nfunction truncateCaracs(keys, caracs) {\n    return keys.reduce((newCaracs, key) => {\n        newCaracs[key] = Math.floor(caracs[key]);\n        return newCaracs;\n    }, {});\n}\nfunction roundCaracs(keys, caracs) {\n    return keys.reduce((newCaracs, key) => {\n        newCaracs[key] = Math.round(caracs[key]);\n        return newCaracs;\n    }, {});\n}\nfunction equalsCaracs(keys, x, y) {\n    return keys.every((key) => +x[key] === +y[key]);\n}\nclass CaracsCalculator {\n    keys;\n    value;\n    constructor(keys, initialValue = {}) {\n        this.keys = keys;\n        this.value = toCaracs(keys, initialValue, 0);\n    }\n    add(addend) {\n        this.value = addCaracs(this.keys, this.value, addend);\n        return this;\n    }\n    subtract(subtrahend) {\n        this.value = subtractCaracs(this.keys, this.value, subtrahend);\n        return this;\n    }\n    multiply(multiplier) {\n        this.value = multiplyCaracs(this.keys, this.value, multiplier);\n        return this;\n    }\n    divide(denominator) {\n        this.value = divideCaracs(this.keys, this.value, denominator);\n        return this;\n    }\n    truncate() {\n        this.value = truncateCaracs(this.keys, this.value);\n        return this;\n    }\n    round() {\n        this.value = roundCaracs(this.keys, this.value);\n        return this;\n    }\n    result() {\n        return this.value;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/caracs.ts?");

/***/ }),

/***/ "./src/data/fighter.ts":
/*!*****************************!*\
  !*** ./src/data/fighter.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FighterCaracsCalculator: () => (/* binding */ FighterCaracsCalculator),\n/* harmony export */   FighterCaracsKeys: () => (/* binding */ FighterCaracsKeys),\n/* harmony export */   addFighterCaracs: () => (/* binding */ addFighterCaracs),\n/* harmony export */   divideFighterCaracs: () => (/* binding */ divideFighterCaracs),\n/* harmony export */   equalsFighterCaracs: () => (/* binding */ equalsFighterCaracs),\n/* harmony export */   getFighterCaracsFromHero: () => (/* binding */ getFighterCaracsFromHero),\n/* harmony export */   getFighterCaracsFromTeamPower: () => (/* binding */ getFighterCaracsFromTeamPower),\n/* harmony export */   multiplyFighterCaracs: () => (/* binding */ multiplyFighterCaracs),\n/* harmony export */   roundFighterCaracs: () => (/* binding */ roundFighterCaracs),\n/* harmony export */   subtractFighterCaracs: () => (/* binding */ subtractFighterCaracs),\n/* harmony export */   toFighterCaracs: () => (/* binding */ toFighterCaracs),\n/* harmony export */   toFighterCaracsBonus: () => (/* binding */ toFighterCaracsBonus),\n/* harmony export */   truncateFighterCaracs: () => (/* binding */ truncateFighterCaracs)\n/* harmony export */ });\n/* harmony import */ var _caracs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./caracs */ \"./src/data/caracs.ts\");\n\nconst FighterCaracsKeys = ['damage', 'defense', 'ego', 'chance'];\nclass FighterCaracsCalculator extends _caracs__WEBPACK_IMPORTED_MODULE_0__.CaracsCalculator {\n    constructor(initialValue = {}) {\n        super(FighterCaracsKeys, initialValue);\n    }\n}\nfunction toFighterCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(FighterCaracsKeys, caracs, 0);\n}\nfunction toFighterCaracsBonus(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(FighterCaracsKeys, caracs, 1);\n}\nfunction getFighterCaracsFromHero(hero) {\n    const { caracs } = hero.infos;\n    return {\n        damage: caracs.primary_carac_amount,\n        defense: caracs.secondary_caracs_sum * 0.25,\n        ego: caracs.endurance,\n        chance: caracs.chance,\n    };\n}\nfunction getFighterCaracsFromTeamPower(teamPower) {\n    return {\n        damage: teamPower * 0.25,\n        defense: teamPower * 0.12,\n        ego: teamPower * 2,\n        chance: 0,\n    };\n}\nfunction addFighterCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.addCaracs)(FighterCaracsKeys, x, y);\n}\nfunction subtractFighterCaracs(minuend, subtrahend) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.subtractCaracs)(FighterCaracsKeys, minuend, subtrahend);\n}\nfunction multiplyFighterCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.multiplyCaracs)(FighterCaracsKeys, x, y);\n}\nfunction divideFighterCaracs(numerator, denominator) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.divideCaracs)(FighterCaracsKeys, numerator, denominator);\n}\nfunction truncateFighterCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.truncateCaracs)(FighterCaracsKeys, caracs);\n}\nfunction roundFighterCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.roundCaracs)(FighterCaracsKeys, caracs);\n}\nfunction equalsFighterCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.equalsCaracs)(FighterCaracsKeys, x, y);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/fighter.ts?");

/***/ }),

/***/ "./src/data/hero.ts":
/*!**************************!*\
  !*** ./src/data/hero.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClubUpgradesKeys: () => (/* binding */ ClubUpgradesKeys),\n/* harmony export */   HeroCaracsCalculator: () => (/* binding */ HeroCaracsCalculator),\n/* harmony export */   HeroCaracsKeys: () => (/* binding */ HeroCaracsKeys),\n/* harmony export */   addHeroCaracs: () => (/* binding */ addHeroCaracs),\n/* harmony export */   divideHeroCaracs: () => (/* binding */ divideHeroCaracs),\n/* harmony export */   multiplyHeroCaracs: () => (/* binding */ multiplyHeroCaracs),\n/* harmony export */   roundHeroCaracs: () => (/* binding */ roundHeroCaracs),\n/* harmony export */   subtractHeroCaracs: () => (/* binding */ subtractHeroCaracs),\n/* harmony export */   toHeroCaracs: () => (/* binding */ toHeroCaracs),\n/* harmony export */   toHeroCaracsBonus: () => (/* binding */ toHeroCaracsBonus),\n/* harmony export */   truncateHeroCaracs: () => (/* binding */ truncateHeroCaracs)\n/* harmony export */ });\n/* harmony import */ var _caracs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./caracs */ \"./src/data/caracs.ts\");\n\nconst ClubUpgradesKeys = [\n    'hardcore_stats',\n    'charm_stats',\n    'know_how_stats',\n    'endurance_stats',\n    'harmony_stats',\n];\nconst HeroCaracsKeys = ['carac1', 'carac2', 'carac3', 'endurance', 'chance'];\nfunction toHeroCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(HeroCaracsKeys, caracs, 0);\n}\nfunction toHeroCaracsBonus(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(HeroCaracsKeys, caracs, 1);\n}\nfunction addHeroCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.addCaracs)(HeroCaracsKeys, x, y);\n}\nfunction subtractHeroCaracs(minuend, subtrahend) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.subtractCaracs)(HeroCaracsKeys, minuend, subtrahend);\n}\nfunction multiplyHeroCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.multiplyCaracs)(HeroCaracsKeys, x, y);\n}\nfunction divideHeroCaracs(numerator, denominator) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.divideCaracs)(HeroCaracsKeys, numerator, denominator);\n}\nfunction truncateHeroCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.truncateCaracs)(HeroCaracsKeys, caracs);\n}\nfunction roundHeroCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.roundCaracs)(HeroCaracsKeys, caracs);\n}\nclass HeroCaracsCalculator extends _caracs__WEBPACK_IMPORTED_MODULE_0__.CaracsCalculator {\n    constructor(initialValue = {}) {\n        super(HeroCaracsKeys, initialValue);\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/hero.ts?");

/***/ }),

/***/ "./src/data/selector.ts":
/*!******************************!*\
  !*** ./src/data/selector.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SelectorView: () => (/* binding */ SelectorView)\n/* harmony export */ });\nclass SelectorView {\n    element;\n    selectElement;\n    callbacks = [];\n    constructor(id, header, options) {\n        const element = $('<div class=\"form-control\"><div class=\"select-group\"></div></div>');\n        const labelElement = $('<label class=\"head-group\"></label>').attr('for', id).text(header);\n        const optionElements = options.map(e => {\n            const option = $(`<option></option>`).attr('value', e.value).text(e.label);\n            if (e.selected)\n                option.prop('selected', true);\n            return option;\n        });\n        const selectElement = $('<select icon=\"down-arrow\"></select>')\n            .attr('name', id)\n            .attr('id', id)\n            .append(optionElements);\n        selectElement.on('change', () => {\n            this.callbacks.forEach(e => {\n                e(String(selectElement.val()));\n            });\n        });\n        element.find('.select-group').append(labelElement).append(selectElement);\n        this.element = element;\n        this.selectElement = selectElement;\n        selectElement.selectric();\n    }\n    onChange(callback) {\n        this.callbacks.push(callback);\n    }\n    getValue() {\n        return String(this.selectElement.val());\n    }\n    getElement() {\n        return this.element;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/selector.ts?");

/***/ }),

/***/ "./src/dom/battle-table.ts":
/*!*********************************!*\
  !*** ./src/dom/battle-table.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBattleTable: () => (/* binding */ createBattleTable)\n/* harmony export */ });\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\nfunction createBattleTable(player, opponent) {\n    const createTable = (attacker, defender) => {\n        let attackerAttack = attacker.attack;\n        let defenderDefense = defender.defense;\n        const rows = [];\n        for (let i = 0; i < 10; i++) {\n            const baseDamage = Math.max(0, Math.floor(attackerAttack - defenderDefense));\n            const columns = [];\n            columns.push(baseDamage);\n            columns.push(Math.ceil(baseDamage * attacker.healing));\n            columns.push(Math.ceil(baseDamage * attacker.critMultiplier));\n            columns.push(Math.ceil(baseDamage * attacker.critMultiplier * attacker.healing));\n            rows.push(columns);\n            attackerAttack *= attacker.attackMultiplier;\n            defenderDefense *= attacker.defenseMultiplier;\n        }\n        return rows;\n    };\n    const playerTable = createTable(player, opponent);\n    const opponentTable = createTable(opponent, player);\n    const chanceRow = [player, opponent].flatMap(e => [e.baseHitChance, e.critHitChance]);\n    return $('<table class=\"sim-table\"></table>')\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(4, ['Player', 'Opponent'])))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(2, ['Normal', 'Critical']).repeat(2)))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, '%'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(2, chanceRow.map(e => (0,_utils_string__WEBPACK_IMPORTED_MODULE_0__.toPercentage)(e)))))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(1, ['Damage', 'Healing']).repeat(4)))\n        .append([...Array(9)]\n        .map((_, i) => i + 1)\n        .map(i => (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, i), ...[playerTable, opponentTable].map(table => (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(1, table[i].map(e => e.toLocaleString())))))\n        .join(''))\n        .prop('outerHTML');\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/battle-table.ts?");

/***/ }),

/***/ "./src/dom/booster-simulation.ts":
/*!***************************************!*\
  !*** ./src/dom/booster-simulation.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBoosterChanceTable: () => (/* binding */ createBoosterChanceTable),\n/* harmony export */   createBoosterChanceTableWithAME: () => (/* binding */ createBoosterChanceTableWithAME),\n/* harmony export */   createBoosterPointsTable: () => (/* binding */ createBoosterPointsTable),\n/* harmony export */   createLeagueTableAllTable: () => (/* binding */ createLeagueTableAllTable),\n/* harmony export */   createLeagueTableBestTable: () => (/* binding */ createLeagueTableBestTable),\n/* harmony export */   createLeagueTableUnfoughtBestTable: () => (/* binding */ createLeagueTableUnfoughtBestTable),\n/* harmony export */   createLeagueTableUnfoughtTable: () => (/* binding */ createLeagueTableUnfoughtTable),\n/* harmony export */   createSkillChanceTable: () => (/* binding */ createSkillChanceTable),\n/* harmony export */   createSkillChanceTableWithAME: () => (/* binding */ createSkillChanceTableWithAME),\n/* harmony export */   createSkillPointsTable: () => (/* binding */ createSkillPointsTable)\n/* harmony export */ });\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\n\n\nfunction sortBoosterSimulationResults(results) {\n    results.sort((x, y) => {\n        const compareHelper = (x, y) => (x == y ? null : x - y);\n        const compare = (f) => compareHelper(f(y), f(x));\n        return (compare(e => e.result) ??\n            compare(e => e.boosterCounts.mythic) ??\n            compare(e => e.boosterCounts.cordyceps) ??\n            compare(e => e.boosterCounts.chlorella) ??\n            compare(e => e.boosterCounts.jujubes) ??\n            compare(e => e.boosterCounts.ginseng) ??\n            0);\n    });\n}\nfunction getBoosterIcon(rarity, booster) {\n    return `<div class=\"sim-booster-slot slot ${rarity}\"><div class=\"sim-booster-icon sim-icon-${booster}\"></div></div>`;\n}\nconst BoosterIconMap = {\n    ginseng: getBoosterIcon('legendary', 'ginseng'),\n    jujubes: getBoosterIcon('legendary', 'jujubes'),\n    chlorella: getBoosterIcon('legendary', 'chlorella'),\n    cordyceps: getBoosterIcon('legendary', 'cordyceps'),\n    headband: getBoosterIcon('mythic', 'headband'),\n    ame: getBoosterIcon('mythic', 'ame'),\n};\nfunction getBoosterIcons(boosterCounts, mythic) {\n    return _simulator_booster__WEBPACK_IMPORTED_MODULE_0__.BoosterKeys.map(key => BoosterIconMap[key === 'mythic' ? mythic : key].repeat(boosterCounts[key])).join('');\n}\nfunction createBoosterChanceTable(results) {\n    sortBoosterSimulationResults(results);\n    const withoutHB = results.filter(e => e.boosterCounts.mythic <= 0);\n    const withHB = results.filter(e => e.boosterCounts.mythic > 0);\n    return createTable();\n    function createTable() {\n        const test = withoutHB.map((e, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [\n            getBoosterIcons(e.boosterCounts, 'headband'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getChanceColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toPrecisePercentage)(e.result)}</span>`,\n            getBoosterIcons(withHB[i].boosterCounts, 'headband'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getChanceColor)(withHB[i].result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toPrecisePercentage)(withHB[i].result)}</span>`,\n        ])));\n        return $('<table class=\"sim-booster-table\"></table>').append(test.join('')).prop('outerHTML');\n    }\n}\nfunction createBoosterChanceTableWithAME(results) {\n    sortBoosterSimulationResults(results);\n    const withoutHB = results.filter(e => e.boosterCounts.mythic <= 0);\n    const withHB = results.filter(e => e.boosterCounts.mythic > 0);\n    return createTable();\n    function createTable() {\n        const test = withoutHB.map((e, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [\n            getBoosterIcons(e.boosterCounts, 'ame'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getChanceColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toPrecisePercentage)(e.result)}</span>`,\n            getBoosterIcons(withHB[i].boosterCounts, 'ame'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getChanceColor)(withHB[i].result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toPrecisePercentage)(withHB[i].result)}</span>`,\n        ])));\n        return $('<table class=\"sim-booster-table\"></table>').append(test.join('')).prop('outerHTML');\n    }\n}\nfunction createSkillChanceTable(results) {\n    results.forEach(result => {\n        result.results.forEach(result => {\n            sortBoosterSimulationResults(result.results);\n        });\n    });\n    return createTable();\n    function createTable() {\n        function createRow(level) {\n            return (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, results.map(result => createColumn(result))));\n            function createColumn(result) {\n                const skillName = result.skillName;\n                const boosterResults = result.results.find(e => e.level === level)?.results;\n                if (boosterResults == null)\n                    return '';\n                return createSubTable(boosterResults);\n                function createSubTable(boosterResults) {\n                    return [\n                        '<table>',\n                        (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.column)(2, `Level ${level} ${skillName}`)),\n                        ...boosterResults.map(e => {\n                            return (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [\n                                getBoosterIcons(e.boosterCounts, 'headband'),\n                                `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getChanceColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toPrecisePercentage)(e.result)}</span>`,\n                            ]));\n                        }),\n                        '</table>',\n                    ].join('');\n                }\n            }\n        }\n        const rows = [5, 4, 3, 2, 1].map(e => createRow(e));\n        return $('<table class=\"sim-booster-table\"></table>').append(rows.join('')).prop('outerHTML');\n    }\n}\nfunction createSkillChanceTableWithAME(results) {\n    results.forEach(result => {\n        result.results.forEach(result => {\n            sortBoosterSimulationResults(result.results);\n        });\n    });\n    return createTable();\n    function createTable() {\n        function createRow(level) {\n            return (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, results.map(result => createColumn(result))));\n            function createColumn(result) {\n                const skillName = result.skillName;\n                const boosterResults = result.results.find(e => e.level === level)?.results;\n                if (boosterResults == null)\n                    return '';\n                return createSubTable(boosterResults);\n                function createSubTable(boosterResults) {\n                    return [\n                        '<table>',\n                        (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.column)(2, `Level ${level} ${skillName}`)),\n                        ...boosterResults.map(e => {\n                            return (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [\n                                getBoosterIcons(e.boosterCounts, 'ame'),\n                                `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getChanceColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toPrecisePercentage)(e.result)}</span>`,\n                            ]));\n                        }),\n                        '</table>',\n                    ].join('');\n                }\n            }\n        }\n        const rows = [5, 4, 3, 2, 1].map(e => createRow(e));\n        return $('<table class=\"sim-booster-table\"></table>').append(rows.join('')).prop('outerHTML');\n    }\n}\nfunction createBoosterPointsTable(results) {\n    sortBoosterSimulationResults(results);\n    const withoutAME = results.filter(e => e.boosterCounts.mythic <= 0);\n    const withAME = results.filter(e => e.boosterCounts.mythic > 0);\n    return createTable();\n    function createTable() {\n        const test = withoutAME.map((e, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [\n            getBoosterIcons(e.boosterCounts, 'ame'),\n            `<span class=\"sim-points\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.result)}</span>`,\n            getBoosterIcons(withAME[i].boosterCounts, 'ame'),\n            `<span class=\"sim-points\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(withAME[i].result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(withAME[i].result)}</span>`,\n        ])));\n        return $('<table class=\"sim-booster-table\"></table>').append(test.join('')).prop('outerHTML');\n    }\n}\nfunction createSkillPointsTable(results) {\n    results.forEach(result => {\n        result.results.forEach(result => {\n            sortBoosterSimulationResults(result.results);\n        });\n    });\n    return createTable();\n    function createTable() {\n        function createRow(level) {\n            return (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, results.map(result => createColumn(result))));\n            function createColumn(result) {\n                const skillName = result.skillName;\n                const boosterResults = result.results.find(e => e.level === level)?.results;\n                if (boosterResults == null)\n                    return '';\n                return createSubTable(boosterResults);\n                function createSubTable(boosterResults) {\n                    return [\n                        '<table>',\n                        (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.column)(2, `Level ${level} ${skillName}`)),\n                        ...boosterResults.map(e => {\n                            return (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [\n                                getBoosterIcons(e.boosterCounts, 'ame'),\n                                `<span class=\"sim-points\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.result)}</span>`,\n                            ]));\n                        }),\n                        '</table>',\n                    ].join('');\n                }\n            }\n        }\n        const rows = [5, 4, 3, 2, 1].map(e => createRow(e));\n        return $('<table class=\"sim-booster-table\"></table>').append(rows.join('')).prop('outerHTML');\n    }\n}\nfunction createLeagueTableAllTable(results) {\n    sortBoosterSimulationResults(results);\n    const withoutAME = results.filter(e => e.boosterCounts.mythic <= 0);\n    const withAME = results.filter(e => e.boosterCounts.mythic > 0);\n    return createTable();\n    function createTable() {\n        const test = [...Array(Math.max(withoutAME.length, withAME.length))].map((_, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [withoutAME[i], withAME[i]].flatMap(e => {\n            const color = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(e.average);\n            return [\n                getBoosterIcons(e.boosterCounts, 'ame'),\n                `<span class=\"sim-points\" style=\"color: ${color}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.average)}</span>`,\n                '*',\n                `<span class=\"sim-points\">${e.challenges.toFixed()}</span>`,\n                '=',\n                `<span class=\"sim-points\" style=\"color: ${color}\">${e.sum.toFixed()}</span>`,\n            ];\n        }))));\n        return $('<table class=\"sim-booster-table\"></table>').append(test.join('')).prop('outerHTML');\n    }\n}\nfunction createLeagueTableUnfoughtTable(results, currentScore, foughtCounts) {\n    sortBoosterSimulationResults(results);\n    const withoutAME = results.filter(e => e.boosterCounts.mythic <= 0);\n    const withAME = results.filter(e => e.boosterCounts.mythic > 0);\n    return createTable();\n    function createTable() {\n        const test = [...Array(Math.max(withoutAME.length, withAME.length))].map((_, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [withoutAME[i], withAME[i]].flatMap(e => {\n            const color = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(e.average);\n            const total = e.sum + currentScore;\n            const avgTotal = total / (e.challenges + foughtCounts);\n            const color3 = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(avgTotal);\n            return [\n                getBoosterIcons(e.boosterCounts, 'ame'),\n                `<span class=\"sim-points\" style=\"color: ${color}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.average)}</span>`,\n                '*',\n                `<span>${e.challenges.toFixed()}</span>`,\n                '=',\n                `<span style=\"color: ${color}\">${e.sum.toFixed()}</span>`,\n                '=>',\n                `<span style=\"color: ${color3}\">${total.toFixed()}</span>`,\n                `<span style=\"color: ${color3}\">(${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(avgTotal)})</span>`,\n            ];\n        }))));\n        return $('<table class=\"sim-booster-table\"></table>').append(test.join('')).prop('outerHTML');\n    }\n}\nfunction createLeagueTableBestTable(noAME, all) {\n    sortBoosterSimulationResults(noAME);\n    sortBoosterSimulationResults(all);\n    const totals = [noAME, all].map(e => {\n        const sum = e.reduce((p, c) => p + c.sum, 0);\n        const challenges = e.reduce((p, c) => p + c.challenges, 0);\n        const average = sum / challenges;\n        const color = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(average);\n        return { sum, challenges, average, color };\n    });\n    return createTable();\n    function createTable() {\n        const rows = [...Array(Math.max(noAME.length, all.length))].map((_, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [noAME[i], all[i]].flatMap(e => {\n            if (e == null)\n                return Array(6).fill('');\n            const color = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(e.average);\n            return [\n                getBoosterIcons(e.boosterCounts, 'ame'),\n                `<span class=\"sim-points\" style=\"color: ${color}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.average)}</span>`,\n                '*',\n                `<span class=\"sim-points\">${e.challenges.toFixed()}</span>`,\n                '=',\n                `<span class=\"sim-points\" style=\"color: ${color}\">${e.sum.toFixed()}</span>`,\n            ];\n        }))));\n        return $('<table class=\"sim-booster-table\"></table>')\n            .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(6, ['No AME', 'All'])), rows.join(''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, totals.flatMap(e => [\n            'Sum:',\n            `<span class=\"sim-points\" style=\"color: ${e.color}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.average)}</span>`,\n            '*',\n            `<span class=\"sim-points\">${e.challenges.toFixed()}</span>`,\n            '=',\n            `<span class=\"sim-points\" style=\"color: ${e.color}\">${e.sum.toFixed()}</span>`,\n        ]))))\n            .prop('outerHTML');\n    }\n}\nfunction createLeagueTableUnfoughtBestTable(noAME, all, currentScore, foughtCounts) {\n    sortBoosterSimulationResults(noAME);\n    sortBoosterSimulationResults(all);\n    const currentAvg = foughtCounts === 0 ? NaN : currentScore / foughtCounts;\n    const color2 = foughtCounts === 0 ? '#FFF' : (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(currentAvg);\n    const totals = [noAME, all].map(e => {\n        const sum = e.reduce((p, c) => p + c.sum, 0);\n        const challenges = e.reduce((p, c) => p + c.challenges, 0);\n        const average = sum / challenges;\n        const color = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(average);\n        const total = sum + currentScore;\n        const avgTotal = total / (challenges + foughtCounts);\n        const color3 = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(avgTotal);\n        return { sum, challenges, average, color, total, avgTotal, color3 };\n    });\n    return createTable();\n    function createTable() {\n        const rows = [...Array(Math.max(noAME.length, all.length))].map((_, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, [noAME[i], all[i]].flatMap(e => {\n            if (e == null)\n                return Array(6).fill('');\n            const color = (0,_utils_color__WEBPACK_IMPORTED_MODULE_1__.getPointsColor)(e.average);\n            return [\n                getBoosterIcons(e.boosterCounts, 'ame'),\n                `<span class=\"sim-points\" style=\"color: ${color}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.average)}</span>`,\n                '*',\n                `<span class=\"sim-points\">${e.challenges.toFixed()}</span>`,\n                '=',\n                `<span class=\"sim-points\" style=\"color: ${color}\">${e.sum.toFixed()}</span>`,\n            ];\n        }))));\n        return $('<table class=\"sim-booster-table\"></table>')\n            .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(6, ['No AME', 'All'])), rows.join(''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, totals.flatMap(e => [\n            'Sum',\n            `<span class=\"sim-points\" style=\"color: ${e.color}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.average)}</span>`,\n            '*',\n            `<span class=\"sim-points\">${e.challenges.toFixed()}</span>`,\n            '=',\n            `<span class=\"sim-points\" style=\"color: ${e.color}\">${e.sum.toFixed()}</span>`,\n        ]))), (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, totals.flatMap(e => [\n            'Current score',\n            `<span style=\"color: ${color2}\">${Number.isNaN(currentAvg) ? '?' : (0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(currentAvg)}</span>`,\n            '*',\n            `<span>${foughtCounts}</span>`,\n            '=',\n            `<span style=\"color: ${color2}\">${currentScore}</span>`,\n        ]))), (0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_3__.columns)(1, totals.flatMap(e => [\n            'Total',\n            `<span style=\"color: ${e.color3}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_2__.toLeaguePointsPerFight)(e.avgTotal)}</span>`,\n            '*',\n            `<span>${e.challenges + foughtCounts}</span>`,\n            '=',\n            `<span style=\"color: ${e.color3}\">${e.total.toFixed()}</span>`,\n        ]))))\n            .prop('outerHTML');\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/booster-simulation.ts?");

/***/ }),

/***/ "./src/dom/booster-simulator-popup.ts":
/*!********************************************!*\
  !*** ./src/dom/booster-simulator-popup.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoosterSimulatorPopup: () => (/* binding */ BoosterSimulatorPopup)\n/* harmony export */ });\n/* harmony import */ var _data_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/selector */ \"./src/data/selector.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _booster_simulation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _popup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./popup */ \"./src/dom/popup.ts\");\n\n\n\n\nclass BoosterSimulatorPopup extends _popup__WEBPACK_IMPORTED_MODULE_3__.Popup {\n    fights;\n    booster;\n    output;\n    playerTeam;\n    opponents;\n    currentScore;\n    foughtCounts;\n    cache = new Map();\n    constructor(playerTeam, opponents, currentScore, foughtCounts) {\n        const header = $('<div class=\"sim-selectors form-wrapper\"></div>');\n        const fights = new _data_selector__WEBPACK_IMPORTED_MODULE_0__.SelectorView('sim-selector-fights', 'Fights', [\n            { label: 'All', value: 'all' },\n            { label: 'Unfought', value: 'unfought', selected: true },\n        ]);\n        const booster = new _data_selector__WEBPACK_IMPORTED_MODULE_0__.SelectorView('sim-selector-booster', 'Booster', [\n            { label: 'All', value: 'all', selected: true },\n            { label: 'Boosted', value: 'boosted' },\n            { label: 'Unboosted', value: 'unboosted' },\n            { label: 'Unboosted (sim)', value: 'unboosted_prediction' },\n        ]);\n        const output = new _data_selector__WEBPACK_IMPORTED_MODULE_0__.SelectorView('sim-selector-output', 'Output', [\n            { label: 'All', value: 'all', selected: true },\n            { label: 'Best', value: 'best' },\n        ]);\n        const update = () => {\n            this.update();\n        };\n        fights.onChange(update);\n        booster.onChange(update);\n        output.onChange(update);\n        super(header.append(fights.getElement(), booster.getElement(), output.getElement()));\n        this.fights = fights;\n        this.booster = booster;\n        this.output = output;\n        this.playerTeam = playerTeam;\n        this.opponents = opponents;\n        this.currentScore = currentScore;\n        this.foughtCounts = foughtCounts;\n    }\n    update() {\n        this.setContent('Now loading...');\n        queueMicrotask(async () => {\n            const fights = this.fights.getValue();\n            const booster = this.booster.getValue();\n            const output = this.output.getValue();\n            const unfoughtOnly = fights === 'unfought';\n            try {\n                let opponents = this.opponents;\n                if (unfoughtOnly)\n                    opponents = opponents.filter(e => e.numChallenges > 0);\n                if (booster === 'boosted')\n                    opponents = opponents.filter(e => e.isBoosted);\n                if (booster === 'unboosted')\n                    opponents = opponents.filter(e => !e.isBoosted);\n                const usePrediction = booster === 'unboosted_prediction';\n                const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_1__.simulateLeagueTable)(this.playerTeam, opponents, this.cache, usePrediction);\n                const push = (map, key, value) => {\n                    let list = map.get(key);\n                    if (list == null) {\n                        list = [];\n                        map.set(key, list);\n                    }\n                    list.push(value);\n                };\n                if (output === 'all') {\n                    const map = new Map();\n                    results.forEach(e => {\n                        push(map, e.boosterKey, e);\n                    });\n                    const allResults = [...map.values()].map(value => {\n                        const boosterCounts = value[0].boosterCounts;\n                        const sum = unfoughtOnly\n                            ? value.reduce((p, c) => p + c.result * c.challenges, 0)\n                            : value.reduce((p, c) => p + c.result, 0) * 3;\n                        const challenges = unfoughtOnly\n                            ? value.reduce((p, c) => p + c.challenges, 0)\n                            : value.length * 3;\n                        const average = sum / challenges;\n                        const result = sum;\n                        return { boosterCounts, sum, challenges, average, result };\n                    });\n                    if (fights === 'unfought' && booster === 'all') {\n                        this.setContent((0,_booster_simulation__WEBPACK_IMPORTED_MODULE_2__.createLeagueTableUnfoughtTable)(allResults, this.currentScore, this.foughtCounts));\n                    }\n                    else {\n                        this.setContent((0,_booster_simulation__WEBPACK_IMPORTED_MODULE_2__.createLeagueTableAllTable)(allResults));\n                    }\n                }\n                if (output === 'best') {\n                    const opponentMap = new Map();\n                    results.forEach(e => {\n                        push(opponentMap, e.opponentId, e);\n                    });\n                    const [noAME, all] = [\n                        [...opponentMap.values()].map(e => e.filter(e => e.boosterCounts.mythic == 0)),\n                        [...opponentMap.values()],\n                    ].map(list => {\n                        const bestMap = new Map();\n                        list.forEach(e => {\n                            const max = e.reduce((p, c) => Math.max(p, c.result), 0);\n                            e.filter(e => e.result >= max).forEach(e => {\n                                push(bestMap, e.boosterKey, e);\n                            });\n                        });\n                        const opponentSet = new Set();\n                        const bestList = [];\n                        let duplicateBestList = [...bestMap.values()];\n                        while (true) {\n                            if (duplicateBestList.length === 0)\n                                break;\n                            const best = duplicateBestList.sort((x, y) => x.length - y.length).pop();\n                            if (best.length === 0)\n                                break;\n                            bestList.push(best);\n                            best.forEach(e => {\n                                opponentSet.add(e.opponentId);\n                            });\n                            duplicateBestList = duplicateBestList.map(e => e.filter(e => !opponentSet.has(e.opponentId)));\n                        }\n                        const results = bestList.map(value => {\n                            const boosterCounts = value[0].boosterCounts;\n                            const sum = unfoughtOnly\n                                ? value.reduce((p, c) => p + c.result * c.challenges, 0)\n                                : value.reduce((p, c) => p + c.result, 0) * 3;\n                            const challenges = unfoughtOnly\n                                ? value.reduce((p, c) => p + c.challenges, 0)\n                                : value.length * 3;\n                            const average = sum / challenges;\n                            const result = challenges;\n                            return { boosterCounts, sum, challenges, average, result };\n                        });\n                        return results;\n                    });\n                    if (fights === 'unfought' && booster === 'all') {\n                        this.setContent((0,_booster_simulation__WEBPACK_IMPORTED_MODULE_2__.createLeagueTableUnfoughtBestTable)(noAME, all, this.currentScore, this.foughtCounts));\n                    }\n                    else {\n                        this.setContent((0,_booster_simulation__WEBPACK_IMPORTED_MODULE_2__.createLeagueTableBestTable)(noAME, all));\n                    }\n                }\n            }\n            catch (e) {\n                const message = e instanceof Error ? e.message : e;\n                this.setContent(`Error: ${message}<br>1. Go to the market page<br>2. Try again`);\n            }\n        });\n    }\n    show() {\n        this.update();\n        super.show();\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/booster-simulator-popup.ts?");

/***/ }),

/***/ "./src/dom/chance.ts":
/*!***************************!*\
  !*** ./src/dom/chance.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChanceView: () => (/* binding */ ChanceView)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n\n\nclass ChanceView {\n    element;\n    last;\n    constructor() {\n        this.element = $('<div class=\"sim-result\"></div>');\n    }\n    updateAsync(resultPromise) {\n        this.reset();\n        this.last = resultPromise;\n        queueMicrotask(async () => {\n            const result = await resultPromise;\n            if (this.last !== resultPromise)\n                return;\n            const question = result.hasAssumptions ? '?' : '';\n            let mark = '';\n            if (result.alwaysWin)\n                mark = '<div class=\"vCheck_mix_icn sim-mark\"></div>';\n            if (result.neverWin)\n                mark = '<div class=\"xUncheck_mix_icn sim-mark\"></div>';\n            this.element\n                .removeClass('sim-pending')\n                .html(`<div class=\"sim-label\">P[W]:</div>${mark}<span class=\"sim-chance\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPercentage)(result.chance)}${question}</span>`)\n                .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getChanceColor)(result.chance));\n        });\n        return this.element;\n    }\n    reset() {\n        this.element.addClass('sim-pending').html('<div class=\"sim-label\">P[W]:</div>-').css('color', '');\n    }\n    setTooltip(html) {\n        this.element.attr('tooltip', html);\n    }\n    getElement() {\n        return this.element;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/chance.ts?");

/***/ }),

/***/ "./src/dom/mojo.ts":
/*!*************************!*\
  !*** ./src/dom/mojo.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MojoView: () => (/* binding */ MojoView)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\n\nclass MojoView {\n    mojo;\n    element;\n    last;\n    constructor(mojo) {\n        this.mojo = mojo;\n        this.element = $('<div class=\"sim-result\"></div>');\n    }\n    updateAsync(resultPromise) {\n        this.reset();\n        this.last = resultPromise;\n        queueMicrotask(async () => {\n            const result = await resultPromise;\n            if (this.last !== resultPromise)\n                return;\n            const question = result.hasAssumptions ? '?' : '';\n            const winChance = result.chance;\n            const lossChance = 1 - winChance;\n            const winMojo = this.mojo;\n            const lossMojo = Math.min(winMojo - 40, -1);\n            const odds = winMojo * winChance + lossMojo * lossChance;\n            this.element\n                .removeClass('sim-pending')\n                .html(`<div class=\"sim-label\">E[M]:</div><span class=\"sim-mojo\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toRoundedNumber)(odds, 2)}${question}</span>`)\n                .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getMojoColor)(odds))\n                .attr('tooltip', createMojoTable());\n            function createMojoTable() {\n                return $('<table class=\"sim-table\"></table>')\n                    .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, ['Win', 'Loss'])))\n                    .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, 'Mojo'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, [winMojo, lossMojo].map(e => (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toRoundedNumber)(e, 2)))))\n                    .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, '%'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, [winChance, lossChance].map(e => (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPercentage)(e)))))\n                    .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, 'E[M]'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(2, (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toRoundedNumber)(odds, 2))))\n                    .prop('outerHTML');\n            }\n        });\n        return this.element;\n    }\n    reset() {\n        this.element.addClass('sim-pending').html('<div class=\"sim-label\">E[M]:</div>-').css('color', '');\n    }\n    getElement() {\n        return this.element;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/mojo.ts?");

/***/ }),

/***/ "./src/dom/points-table.ts":
/*!*********************************!*\
  !*** ./src/dom/points-table.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPointsTable: () => (/* binding */ createPointsTable)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\n\nfunction createPointsTable(result) {\n    if ('pointsTable' in result) {\n        const max = Math.sqrt(result.pointsTable.reduce((p, c) => Math.max(p, c), 0));\n        const rows = result.pointsTable\n            .map((e, i) => ({ points: i, probability: e }))\n            .filter(e => e.probability > 0)\n            .sort((x, y) => y.points - x.points)\n            .flatMap(e => [\n            `<tr style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getPointsColor)(e.points)};\">`,\n            '<td>',\n            e.points.toFixed(),\n            '</td>',\n            '<td class=\"sim-bar-container\">',\n            `<div class=\"sim-bar\" style=\"width: ${(e.probability * 5) / max}rem;\"></div>`,\n            (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPrecisePercentage)(e.probability),\n            '</td>',\n            '</tr>',\n        ]);\n        return $('<table class=\"sim-points-table\"></table>').append(rows.join('')).prop('outerHTML');\n    }\n    else {\n        return $('<table class=\"sim-table\"></table>')\n            .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(2, 'Points')))\n            .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, ['Max', result.maxPoints.toFixed()])))\n            .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, ['Avg', (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPreciseLeaguePointsPerFight)(result.avgPoints)])))\n            .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, ['Min', result.minPoints.toFixed()])))\n            .prop('outerHTML');\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/points-table.ts?");

/***/ }),

/***/ "./src/dom/points.ts":
/*!***************************!*\
  !*** ./src/dom/points.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointsView: () => (/* binding */ PointsView)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n\n\nclass PointsView {\n    element;\n    last;\n    constructor() {\n        this.element = $('<div class=\"sim-result\"></div>');\n    }\n    updateAsync(resultPromise) {\n        this.reset();\n        this.last = resultPromise;\n        queueMicrotask(async () => {\n            const result = await resultPromise;\n            if (this.last !== resultPromise)\n                return;\n            const question = result.hasAssumptions ? '?' : '';\n            let mark = '';\n            if (result.minPoints >= 25)\n                mark = '<div class=\"vCheck_mix_icn sim-mark\"></div>';\n            this.element\n                .removeClass('sim-pending')\n                .html(`<div class=\"sim-label\">E[P]:</div>${mark}<span class=\"sim-points\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toLeaguePointsPerFight)(result.avgPoints)}${question}</span>`)\n                .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getPointsColor)(result.avgPoints));\n        });\n        return this.element;\n    }\n    reset() {\n        this.element.addClass('sim-pending').html('<div class=\"sim-label\">E[P]:</div>-').css('color', '');\n    }\n    setTooltip(html) {\n        this.element.attr('tooltip', html);\n    }\n    getElement() {\n        return this.element;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/points.ts?");

/***/ }),

/***/ "./src/dom/popup.ts":
/*!**************************!*\
  !*** ./src/dom/popup.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Popup: () => (/* binding */ Popup)\n/* harmony export */ });\nclass Popup {\n    element;\n    content;\n    constructor(header) {\n        this.element = $('<div class=\"sim-popup\"></div>');\n        const closeButton = $('<div class=\"close-button xUncheck_mix_icn\"></div>');\n        closeButton.on('click', () => {\n            this.hide();\n        });\n        this.element.append(closeButton);\n        if (typeof header === 'string') {\n            this.element.append($('<h1 class=\"caption\"></h1>').text(header));\n        }\n        else {\n            this.element.append(header);\n        }\n        const content = $('<div class=\"content\"></div>');\n        this.content = content;\n        this.element.append(content);\n    }\n    show() {\n        this.element.appendTo('#contains_all');\n    }\n    hide() {\n        this.element.detach();\n    }\n    toggle() {\n        if (this.element.parent().length === 0) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    setContent(dom) {\n        if (typeof dom === 'string') {\n            this.content.html(dom);\n        }\n        else {\n            this.content.empty().append(dom);\n        }\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/popup.ts?");

/***/ }),

/***/ "./src/global.ts":
/*!***********************!*\
  !*** ./src/global.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simulator/battle */ \"./src/simulator/battle.ts\");\n\nwindow.HHBattleSimulator = {\n    /**\n     * @param {any} playerFighter - hero_data\n     * @param {any} opponentFighter - opponent_fighter.player\n     * @returns {Promise<{ chance: number, alwaysWin: boolean, neverWin: boolean, avgPoints: number, minPoints: number, maxPoints: number }>} - Player's winning chance and league points\n     */\n    async simulateFromFighters(playerFighter, opponentFighter) {\n        return await (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_0__.simulateFromFighters)('Standard', playerFighter, opponentFighter);\n    },\n    /**\n     * @param {any} playerTeam - hero_data.team\n     * @param {any} opponentTeam - opponent_fighter.player.team\n     * @param {number} mythicBoosterMultiplier - Default: 1, AME/LME/SME: 1.15, Headband: 1.25\n     * @returns {Promise<{ chance: number, alwaysWin: boolean, neverWin: boolean, avgPoints: number, minPoints: number, maxPoints: number }>} - Player's winning chance and league points\n     */\n    async simulateFromTeams(playerTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n        return await (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_0__.simulateFromTeams)('Standard', playerTeam, opponentTeam, mythicBoosterMultiplier);\n    },\n};\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/global.ts?");

/***/ }),

/***/ "./src/interop/hh-plus-plus-config.ts":
/*!********************************************!*\
  !*** ./src/interop/hh-plus-plus-config.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConfig: () => (/* binding */ getConfig),\n/* harmony export */   registerConfig: () => (/* binding */ registerConfig)\n/* harmony export */ });\n/* harmony import */ var _hh_plus_plus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hh-plus-plus */ \"./src/interop/hh-plus-plus.ts\");\n\nconst config = {\n    addBattleSimulator: true,\n    doSimulateTroll: true,\n    doSimulateLeague: true,\n    doSimulateSeason: true,\n    doSimulatePantheon: true,\n    doSimulateTeams: true,\n    doSimulateEditTeam: true,\n    doSimulateLeagueTable: true,\n    doSimulateFoughtOpponents: true,\n    addBoosterSimulatorToLeagueTable: true,\n    replaceHHLeaguesPlusPlus: true,\n    addBoosterSimulator: true,\n    simulateGinseng: true,\n    simulateJujubes: true,\n    simulateChlorella: true,\n    simulateCordyceps: true,\n    addSkillSimulator: true,\n    skillLevelsToBeSimulated: [5, 4, 3, 2, 1],\n    calculateLeaguePointsTable: false,\n    addGirlTraitsToGirlTooltip: true,\n    improveTooltipsForLabyrinth: true,\n    fixAutoAssignForLabyrinth: true,\n    addAttackOrderIconToLabyrinth: true,\n    addClassIconToLabyrinth: true,\n};\nasync function registerConfig() {\n    const hhPlusPlusConfig = await (0,_hh_plus_plus__WEBPACK_IMPORTED_MODULE_0__.getHHPlusPlusConfig)();\n    if (hhPlusPlusConfig == null)\n        return;\n    hhPlusPlusConfig.registerGroup({ key: 'sim-v4', name: 'Sim v4' });\n    config.addBattleSimulator = false;\n    config.doSimulateTroll = false;\n    config.doSimulateLeague = false;\n    config.doSimulateSeason = false;\n    config.doSimulatePantheon = false;\n    config.doSimulateTeams = false;\n    config.doSimulateEditTeam = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'BattleSimulator',\n            label: 'Battle Sim',\n            default: true,\n            subSettings: [\n                { key: 'troll', default: true, label: 'Villain' },\n                { key: 'league', default: true, label: 'League' },\n                { key: 'season', default: true, label: 'Season' },\n                { key: 'pantheon', default: true, label: 'Pantheon' },\n                { key: 'teams', default: true, label: 'Team Selecting' },\n                { key: 'editTeam', default: true, label: 'Team Editing' },\n            ],\n        },\n        run(subSettings) {\n            config.addBattleSimulator = true;\n            config.doSimulateTroll = subSettings.troll;\n            config.doSimulateLeague = subSettings.league;\n            config.doSimulateSeason = subSettings.season;\n            config.doSimulatePantheon = subSettings.pantheon;\n            config.doSimulateTeams = subSettings.teams;\n            config.doSimulateEditTeam = subSettings.editTeam;\n        },\n    });\n    config.doSimulateLeagueTable = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'DoSimulateLeagueTable',\n            label: 'Run simulations in the league table (maybe slow)',\n            default: true,\n            subSettings: [\n                { key: 'skip', default: true, label: 'Skip fought opponents' },\n                { key: 'booster', default: false, label: 'Add booster simulator to league table' },\n            ],\n        },\n        run(subSettings) {\n            config.doSimulateLeagueTable = true;\n            config.doSimulateFoughtOpponents = !subSettings.skip;\n            config.addBoosterSimulatorToLeagueTable = subSettings.booster;\n        },\n    });\n    config.calculateLeaguePointsTable = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'CalculateLeaguePointsTable',\n            label: 'Calculate each probability of league score (maybe slow)',\n            default: false,\n        },\n        run() {\n            config.calculateLeaguePointsTable = true;\n        },\n    });\n    config.addBoosterSimulator = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'BoosterSimulator',\n            label: 'Booster Sim',\n            default: true,\n            subSettings: [\n                { key: 'ginseng', default: true, label: 'Ginseng' },\n                { key: 'jujubes', default: false, label: 'Jujubes' },\n                { key: 'chlorella', default: true, label: 'Chlorella' },\n                { key: 'cordyceps', default: true, label: 'Cordyceps' },\n            ],\n        },\n        run(subSettings) {\n            config.addBoosterSimulator = true;\n            config.simulateGinseng = subSettings.ginseng;\n            config.simulateJujubes = subSettings.jujubes;\n            config.simulateChlorella = subSettings.chlorella;\n            config.simulateCordyceps = subSettings.cordyceps;\n        },\n    });\n    config.addSkillSimulator = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'SkillSimulator',\n            label: 'Skill Sim',\n            default: false,\n            subSettings: [\n                { key: 'level5', default: true, label: 'Level 5' },\n                { key: 'level4', default: true, label: 'Level 4' },\n                { key: 'level3', default: false, label: 'Level 3' },\n                { key: 'level2', default: false, label: 'Level 2' },\n                { key: 'level1', default: false, label: 'Level 1' },\n            ],\n        },\n        run(subSettings) {\n            config.addSkillSimulator = true;\n            config.skillLevelsToBeSimulated = [5, 4, 3, 2, 1].filter(e => subSettings['level' + e]);\n        },\n    });\n    config.replaceHHLeaguesPlusPlus = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'ReplaceHHLeaguesPlusPlus',\n            label: 'Replace HH Leagues++ sim',\n            default: true,\n        },\n        run() {\n            config.replaceHHLeaguesPlusPlus = true;\n        },\n    });\n    config.addGirlTraitsToGirlTooltip = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'AddGirlTraitsToGirlTooltip',\n            label: \"Add girl's traits to girl's tooltip\",\n            default: true,\n        },\n        run() {\n            config.addGirlTraitsToGirlTooltip = true;\n        },\n    });\n    config.improveTooltipsForLabyrinth = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'ImproveTooltipsForLabyrinth',\n            label: 'Improve tooltips for Labyrinth',\n            default: true,\n        },\n        run() {\n            config.improveTooltipsForLabyrinth = true;\n        },\n    });\n    config.fixAutoAssignForLabyrinth = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'FixAutoAssignForLabyrinth',\n            label: 'Fix Auto Assign for Labyrinth (Temporary bug fix)',\n            default: true,\n        },\n        run() {\n            config.fixAutoAssignForLabyrinth = true;\n        },\n    });\n    config.addAttackOrderIconToLabyrinth = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'AddAttackOrderIconToLabyrinth',\n            label: 'Add attack order icon to Labyrinth',\n            default: true,\n        },\n        run() {\n            config.addAttackOrderIconToLabyrinth = true;\n        },\n    });\n    config.addClassIconToLabyrinth = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'AddClassIconToLabyrinth',\n            label: 'Add class icon to Labyrinth',\n            default: true,\n        },\n        run() {\n            config.addClassIconToLabyrinth = true;\n        },\n    });\n    hhPlusPlusConfig.loadConfig();\n    hhPlusPlusConfig.runModules();\n}\nfunction getConfig() {\n    return config;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/hh-plus-plus-config.ts?");

/***/ }),

/***/ "./src/interop/hh-plus-plus-league.ts":
/*!********************************************!*\
  !*** ./src/interop/hh-plus-plus-league.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLeaguesPlusPlusOpponentTeam: () => (/* binding */ getLeaguesPlusPlusOpponentTeam),\n/* harmony export */   replaceHHPlusPlusLeague: () => (/* binding */ replaceHHPlusPlusLeague)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _dom_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom/popup */ \"./src/dom/popup.ts\");\n/* harmony import */ var _page_tower_of_fame__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../page/tower-of-fame */ \"./src/page/tower-of-fame.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _hh_plus_plus__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hh-plus-plus */ \"./src/interop/hh-plus-plus.ts\");\n/* harmony import */ var _hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet lastOpponentTeam;\nasync function replaceHHPlusPlusLeague() {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_11__.checkPage)('/tower-of-fame.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_10__.beforeGameInited)();\n    const HHPlusPlus = await (0,_hh_plus_plus__WEBPACK_IMPORTED_MODULE_12__.getHHPlusPlus)();\n    if (HHPlusPlus == null)\n        return;\n    const config = (0,_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_13__.getConfig)();\n    if (!config.replaceHHLeaguesPlusPlus)\n        return;\n    (0,_page_tower_of_fame__WEBPACK_IMPORTED_MODULE_6__.assertTowerOfFameWindow)(window);\n    const tofWindow = window;\n    let inited = config.doSimulateLeagueTable;\n    let playerLeagueTeam;\n    let leagueBoosterMultiplier;\n    let lastDisplay;\n    const originalLeague = HHPlusPlus.League;\n    HHPlusPlus.League = class League {\n        original;\n        constructor(...args) {\n            this.original = new originalLeague(...args);\n        }\n        extract() {\n            return this.original.extract();\n        }\n        display(result) {\n            lastDisplay = result;\n            let { forSim } = result;\n            if (forSim == null) {\n                if (!inited) {\n                    inited = true;\n                    (async () => {\n                        const playerLeagueData = await (0,_page_tower_of_fame__WEBPACK_IMPORTED_MODULE_6__.fetchPlayerLeagueData)(tofWindow);\n                        playerLeagueTeam = playerLeagueData?.team;\n                        leagueBoosterMultiplier = playerLeagueData?.leagueMultiplier ?? 1;\n                        const forSim = lastDisplay?.forSim;\n                        if (forSim != null && forSim.hasAssumptions === true) {\n                            forSim.playerTeam = playerLeagueTeam;\n                            forSim.mythicBoosterMultiplier = leagueBoosterMultiplier;\n                            this.display(lastDisplay);\n                        }\n                    })();\n                }\n                const hero_data = window.hero_data;\n                const opponent_fighter = window.opponent_fighter;\n                if (hero_data != null && opponent_fighter != null) {\n                    const playerTeam = playerLeagueTeam ?? hero_data.team;\n                    const id = $('.data-row.body-row.selected [id-member]').attr('id-member');\n                    const opponentTeam = ((id != null ? tofWindow.opponents_list.find(e => +e.player.id_fighter === +id) : null) ??\n                        opponent_fighter).player.team;\n                    const mythicBoosterMultiplier = leagueBoosterMultiplier ?? 1;\n                    const hasAssumptions = playerTeam.id_team == null;\n                    forSim = { playerTeam, opponentTeam, mythicBoosterMultiplier, hasAssumptions };\n                    result.forSim = forSim;\n                }\n            }\n            if (forSim != null) {\n                let playerTeam = forSim.playerTeam;\n                const opponentTeam = forSim.opponentTeam;\n                lastOpponentTeam = opponentTeam;\n                if (forSim.result == null || (forSim.hasAssumptions && playerTeam.id_team != null)) {\n                    playerTeam = playerLeagueTeam ?? playerTeam;\n                    const mythicBoosterMultiplier = leagueBoosterMultiplier ?? forSim.mythicBoosterMultiplier ?? 1;\n                    const { player, opponent } = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_9__.calcBattlersFromTeams)(playerTeam, opponentTeam, mythicBoosterMultiplier);\n                    forSim.battleTable = (0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent);\n                    const hasAssumptions = playerTeam.id_team == null;\n                    forSim.hasAssumptions = hasAssumptions;\n                    const { calculateLeaguePointsTable } = (0,_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_13__.getConfig)();\n                    const simType = calculateLeaguePointsTable ? 'Full' : 'Standard';\n                    forSim.result = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_7__.simulateFromBattlers)(simType, player, opponent).then(result => ({\n                        ...result,\n                        hasAssumptions,\n                    }));\n                }\n                const resultPromise = forSim.result;\n                $('.opponent .icon-area').parent().find('.sim-result').remove();\n                const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_2__.ChanceView();\n                chanceView.updateAsync(resultPromise);\n                chanceView.setTooltip(forSim.battleTable);\n                $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n                const pointsView = new _dom_points__WEBPACK_IMPORTED_MODULE_3__.PointsView();\n                pointsView.updateAsync(resultPromise);\n                resultPromise.then((result) => {\n                    pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_4__.createPointsTable)(result));\n                });\n                $('.opponent .icon-area').before(pointsView.getElement().addClass('sim-right'));\n                if (playerTeam.id_team != null) {\n                    if (config.addBoosterSimulator) {\n                        const boosterPopup = new _dom_popup__WEBPACK_IMPORTED_MODULE_5__.Popup('Booster simulator');\n                        const boosterIconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-ame\"></div></div>')\n                            .addClass('sim-left')\n                            .addClass('sim-top')\n                            .attr('tooltip', 'Booster simulator');\n                        boosterIconButton.on('click', async () => {\n                            boosterPopup.toggle();\n                            if (forSim.boosterTable == null) {\n                                boosterPopup.setContent('Now loading...');\n                                if (forSim.boosterResults == null) {\n                                    forSim.boosterResults = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_8__.simulatePointsForBoosterCombinationWithAME)(playerTeam, opponentTeam);\n                                }\n                                try {\n                                    const results = await forSim.boosterResults;\n                                    forSim.boosterTable = (0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createBoosterPointsTable)(results);\n                                }\n                                catch (e) {\n                                    const message = e instanceof Error ? e.message : e;\n                                    forSim.boosterTable = `Error: ${message}<br>1. Go to the market page<br>2. Try again`;\n                                }\n                            }\n                            boosterPopup.setContent(forSim.boosterTable);\n                        });\n                        $('.opponent .icon-area').before(boosterIconButton);\n                    }\n                    if (config.addSkillSimulator) {\n                        const skillPopup = new _dom_popup__WEBPACK_IMPORTED_MODULE_5__.Popup('Skill simulator');\n                        const skillIconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-girl-skills\"></div></div>')\n                            .addClass('sim-right')\n                            .addClass('sim-top')\n                            .attr('tooltip', 'Skill simulator');\n                        skillIconButton.on('click', async () => {\n                            skillPopup.toggle();\n                            if (forSim.skillTable == null) {\n                                skillPopup.setContent('Now loading...');\n                                if (forSim.skillResults == null) {\n                                    forSim.skillResults = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_8__.simulatePointsForSkillCombinationWithAME)(playerTeam, opponentTeam);\n                                }\n                                try {\n                                    const results = await forSim.skillResults;\n                                    forSim.skillTable = (0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createSkillPointsTable)(results);\n                                }\n                                catch (e) {\n                                    const message = e instanceof Error ? e.message : e;\n                                    forSim.skillTable = `Error: ${message}<br>1. Go to the market page<br>2. Try again`;\n                                }\n                            }\n                            skillPopup.setContent(forSim.skillTable);\n                        });\n                        $('.opponent .icon-area').before(skillIconButton);\n                    }\n                }\n                return;\n            }\n            return this.original.display(result);\n        }\n    };\n}\nfunction getLeaguesPlusPlusOpponentTeam() {\n    return lastOpponentTeam;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/hh-plus-plus-league.ts?");

/***/ }),

/***/ "./src/interop/hh-plus-plus.ts":
/*!*************************************!*\
  !*** ./src/interop/hh-plus-plus.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHHPlusPlus: () => (/* binding */ getHHPlusPlus),\n/* harmony export */   getHHPlusPlusConfig: () => (/* binding */ getHHPlusPlusConfig)\n/* harmony export */ });\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n\nconst hhPlusPlusPromise = (async () => {\n    if (window.HHPlusPlus != null)\n        return window.HHPlusPlus;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.beforeScriptStart)();\n    if (window.HHPlusPlus != null)\n        return window.HHPlusPlus;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.afterGameInited)();\n    if (window.HHPlusPlus != null)\n        return window.HHPlusPlus;\n    await new Promise($);\n    return window.HHPlusPlus;\n})();\nconst hhPlusPlusConfigPromise = (async () => {\n    if (window.hhPlusPlusConfig != null)\n        return window.hhPlusPlusConfig;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.beforeScriptStart)();\n    if (window.hhPlusPlusConfig != null)\n        return window.hhPlusPlusConfig;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.afterGameInited)();\n    if (window.hhPlusPlusConfig != null)\n        return window.hhPlusPlusConfig;\n    await new Promise($);\n    return window.hhPlusPlusConfig;\n})();\nfunction getHHPlusPlus() {\n    return hhPlusPlusPromise;\n}\nfunction getHHPlusPlusConfig() {\n    return hhPlusPlusConfigPromise;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/hh-plus-plus.ts?");

/***/ }),

/***/ "./src/interop/match-rating.ts":
/*!*************************************!*\
  !*** ./src/interop/match-rating.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   avoidOverlappingMatchRating: () => (/* binding */ avoidOverlappingMatchRating)\n/* harmony export */ });\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n\nasync function avoidOverlappingMatchRating() {\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.afterGameInited)();\n    const update = () => {\n        if ($('.matchRating').length > 0) {\n            $('.sim-result').addClass('sim-top');\n        }\n    };\n    update();\n    const observer = new MutationObserver(update);\n    document.querySelectorAll('.player_team_block.opponent, .season_arena_opponent_container').forEach(e => {\n        observer.observe(e, { childList: true, subtree: true });\n    });\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/match-rating.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   main: () => (/* binding */ main)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global */ \"./src/global.ts\");\n/* harmony import */ var _page_troll_pre_battle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./page/troll-pre-battle */ \"./src/page/troll-pre-battle.ts\");\n/* harmony import */ var _page_edit_team__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./page/edit-team */ \"./src/page/edit-team.ts\");\n/* harmony import */ var _page_league_battle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page/league-battle */ \"./src/page/league-battle.ts\");\n/* harmony import */ var _page_leagues_pre_battle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./page/leagues-pre-battle */ \"./src/page/leagues-pre-battle.ts\");\n/* harmony import */ var _page_pantheon_pre_battle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./page/pantheon-pre-battle */ \"./src/page/pantheon-pre-battle.ts\");\n/* harmony import */ var _page_season_arena__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./page/season-arena */ \"./src/page/season-arena.ts\");\n/* harmony import */ var _page_shop__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./page/shop */ \"./src/page/shop.ts\");\n/* harmony import */ var _page_teams__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./page/teams */ \"./src/page/teams.ts\");\n/* harmony import */ var _page_tower_of_fame__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./page/tower-of-fame */ \"./src/page/tower-of-fame.ts\");\n/* harmony import */ var _store_unused__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./store/unused */ \"./src/store/unused.ts\");\n/* harmony import */ var _interop_match_rating__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interop/match-rating */ \"./src/interop/match-rating.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _interop_hh_plus_plus_league__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./interop/hh-plus-plus-league */ \"./src/interop/hh-plus-plus-league.ts\");\n/* harmony import */ var _page_base_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./page/base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function main() {\n    (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_12__.registerConfig)();\n    (0,_interop_hh_plus_plus_league__WEBPACK_IMPORTED_MODULE_13__.replaceHHPlusPlusLeague)();\n    [\n        _page_base_common__WEBPACK_IMPORTED_MODULE_14__.GamePage,\n        _page_edit_team__WEBPACK_IMPORTED_MODULE_2__.EditTeamPage,\n        _page_league_battle__WEBPACK_IMPORTED_MODULE_3__.LeagueBattlePage,\n        _page_leagues_pre_battle__WEBPACK_IMPORTED_MODULE_4__.LeaguesPreBattlePage,\n        _page_pantheon_pre_battle__WEBPACK_IMPORTED_MODULE_5__.PantheonPreBattlePage,\n        _page_season_arena__WEBPACK_IMPORTED_MODULE_6__.SeasonArenaPage,\n        _page_shop__WEBPACK_IMPORTED_MODULE_7__.ShopPage,\n        _page_teams__WEBPACK_IMPORTED_MODULE_8__.TeamsPage,\n        _page_tower_of_fame__WEBPACK_IMPORTED_MODULE_9__.TowerOfFamePage,\n        _page_troll_pre_battle__WEBPACK_IMPORTED_MODULE_1__.TrollPreBattlePage,\n    ].forEach(pageRun => {\n        queueMicrotask(() => {\n            pageRun(window);\n        });\n    });\n    (0,_interop_match_rating__WEBPACK_IMPORTED_MODULE_11__.avoidOverlappingMatchRating)();\n    (0,_store_unused__WEBPACK_IMPORTED_MODULE_10__.removeUnusedData)();\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/main.ts?");

/***/ }),

/***/ "./src/page/base/common.ts":
/*!*********************************!*\
  !*** ./src/page/base/common.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GamePage: () => (/* binding */ GamePage),\n/* harmony export */   assertGameWindow: () => (/* binding */ assertGameWindow),\n/* harmony export */   loadMythicBoosterMultiplier: () => (/* binding */ loadMythicBoosterMultiplier),\n/* harmony export */   loadOpponentTeam: () => (/* binding */ loadOpponentTeam)\n/* harmony export */ });\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/storage */ \"./src/utils/storage.ts\");\n\n\n\n\n\n\nfunction assertGameWindow(window) {\n    // from jquery.js\n    const { $ } = window;\n    if ($ == null)\n        throw new Error('jQuery is not found.');\n    // from default.js\n    const { localStorageGetItem, localStorageSetItem, get_lang, get_dec_and_sep } = window;\n    if (localStorageGetItem == null)\n        throw new Error('localStorageGetItem is not found.');\n    if (localStorageSetItem == null)\n        throw new Error('localStorageSetItem is not found.');\n    if (get_lang == null)\n        throw new Error('get_lang is not found.');\n    if (get_dec_and_sep == null)\n        throw new Error('get_dec_and_sep is not found.');\n    // from head\n    const { SITE_ROOT, IMAGES_URL } = window;\n    if (SITE_ROOT == null)\n        throw new Error('SITE_ROOT is not found.');\n    if (IMAGES_URL == null)\n        throw new Error('IMAGES_URL is not found.');\n    // from body\n    const { Hero } = window;\n    if (Hero == null)\n        throw new Error('Hero is not found.');\n}\nasync function GamePage(window) {\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_3__.beforeGameInited)();\n    try {\n        assertGameWindow(window);\n        const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n        if (config.addGirlTraitsToGirlTooltip)\n            addGirlTraitsToTooltip(window);\n        if (config.improveTooltipsForLabyrinth)\n            improveTooltipsForLabyrinth(window);\n        if (config.fixAutoAssignForLabyrinth)\n            fixAutoAssignForLabyrinth(window);\n        if (config.addAttackOrderIconToLabyrinth)\n            showAttackOrder(window);\n        if (config.addClassIconToLabyrinth)\n            showClass(window);\n    }\n    catch (e) { }\n}\nasync function addGirlTraitsToTooltip(window) {\n    const { tooltips } = window;\n    if (tooltips == null || typeof tooltips !== 'object')\n        return;\n    if (!('[data-new-girl-tooltip]' in tooltips))\n        return;\n    if (typeof tooltips['[data-new-girl-tooltip]'] !== 'function')\n        return;\n    const old = tooltips['[data-new-girl-tooltip]'];\n    const map = new Map();\n    tooltips['[data-new-girl-tooltip]'] = function dataNewGirlTooltip(...args) {\n        const ret = old(...args);\n        const element = $(args[0]);\n        const data = JSON.parse(element.attr('data-new-girl-tooltip') ?? '');\n        const id = data.id_girl ??\n            (() => {\n                const icon = element.is('[girl-ico-src]') ? element : element.find('[girl-ico-src]');\n                return icon.attr('girl-ico-src')?.match(/pictures\\/girls\\/(\\d+)\\/(?:ico|ava)/)?.[1];\n            })() ??\n            (() => {\n                const icon = element.is('img[src]') ? element : element.find('img[src]');\n                return icon.attr('src')?.match(/pictures\\/girls\\/(\\d+)\\/(?:ico|ava)/)?.[1];\n            })();\n        if (id != null) {\n            const traits = map.get(+id);\n            if (traits != null) {\n                const zodiacMap = {\n                    '♈': 'aries',\n                    '♉': 'taurus',\n                    '♊': 'gemini',\n                    '♋': 'cancer',\n                    '♌': 'leo',\n                    '♍': 'virgo',\n                    '♎': 'libra',\n                    '♏': 'scorpio',\n                    '♐': 'sagittarius',\n                    '♑': 'capricorn',\n                    '♒': 'aquarius',\n                    '♓': 'pisces',\n                };\n                const baseUrl = window.IMAGES_URL + '/pictures/design/blessings_icons/';\n                const getIcon = (icon) => `<span class=\"sim-trait-icon\" style=\"background-image: url('${baseUrl}${icon}');\"></span>`;\n                const getHairColorIcon = (color) => color == '' ? '' : getIcon(`hair_colors/hair_color_${color}.png`);\n                const getEyeColorIcon = (color) => color == '' ? '' : getIcon(`eye_colors/eye_color_${color}.png`);\n                const getZodiacIcon = (zodiac) => zodiac == '' ? '' : getIcon(`zodiac_signs/zodiac_sign_${zodiacMap[zodiac.charAt(0)]}.png`);\n                const getPoseIcon = (pose) => (pose == '' ? '' : getIcon(`positions/fav_pose_${pose}.png`));\n                const icons = [\n                    '<div class=\"sim-traits\">',\n                    getHairColorIcon(traits[0]),\n                    getHairColorIcon(traits[1]),\n                    ' ',\n                    getEyeColorIcon(traits[2]),\n                    getEyeColorIcon(traits[3]),\n                    ' ',\n                    getZodiacIcon(traits[4]),\n                    ' ',\n                    getPoseIcon(traits[5]),\n                    '</div>',\n                ];\n                const body = ret.body;\n                ret.body = body + icons.join('');\n            }\n        }\n        const html = ret.body;\n        if (typeof html === 'string') {\n            if (html.includes('active_skills_icon.png')) {\n                const girlElement = html.match(/class=\"(\\w+?)_element_icn/)?.[1];\n                if (girlElement != null) {\n                    const stun = '/pvp4_trigger_skills/stun_icon.png';\n                    const shield = '/pvp4_trigger_skills/shield_icon.png';\n                    const reflect = '/pvp3_active_skills/reflect_icon.png';\n                    const execute = '/pvp3_active_skills/execute_icon.png';\n                    const map = {\n                        darkness: stun,\n                        sun: stun,\n                        stone: shield,\n                        light: shield,\n                        nature: reflect,\n                        psychic: reflect,\n                        fire: execute,\n                        water: execute,\n                    };\n                    const labyrinthMap = {\n                        darkness: '/pvp4_trigger_skills/punch_icon.png',\n                        sun: '/pvp4_trigger_skills/stun_icon.png',\n                        stone: '/pvp4_trigger_skills/defenses_up_icon.png',\n                        light: '/pvp4_trigger_skills/heal_up_icon.png',\n                        nature: '/pvp4_trigger_skills/mana_boost_icon.png',\n                        psychic: '/pvp4_trigger_skills/mana_steal_icon.png',\n                        fire: '/pvp4_trigger_skills/burn_icon.png',\n                        water: '/pvp4_trigger_skills/shield_icon.png',\n                    };\n                    const skill = (html.includes('carac-speed') ? labyrinthMap : map)[girlElement];\n                    if (skill != null) {\n                        const newHtml = html.replace('/images/pictures/design/girl_skills/active_skills_icon.png', window.IMAGES_URL + '/pictures/design/girl_skills' + skill);\n                        return { ...ret, body: newHtml };\n                    }\n                }\n            }\n        }\n        return ret;\n    };\n    const addToMap = (girl) => {\n        if (girl?.id_girl == null)\n            return;\n        const data = [\n            girl.hair_color1 ?? girl.girl?.hair_color1 ?? '',\n            girl.hair_color2 ?? girl.girl?.hair_color2 ?? '',\n            girl.eye_color1 ?? girl.girl?.eye_color1 ?? '',\n            girl.eye_color2 ?? girl.girl?.eye_color2 ?? '',\n            girl.zodiac ?? girl.girl?.zodiac ?? '',\n            girl.figure ?? girl.girl?.figure ?? '',\n        ];\n        if (data.every(e => e === ''))\n            return;\n        map.set(+girl.id_girl, data);\n    };\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/troll-pre-battle.html', '/leagues-pre-battle.html', '/pantheon-pre-battle.html')) {\n        const hero_data = window.hero_data;\n        hero_data.team.girls.map((e) => addToMap(e));\n        const opponent_fighter = window.opponent_fighter;\n        opponent_fighter.player.team.girls.map((e) => addToMap(e));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/troll-battle.html', '/league-battle.html', '/pantheon-battle.html', '/season-battle.html', '/boss-bang-battle.html')) {\n        const hero_fighter = window.hero_fighter;\n        hero_fighter.girls.map((e) => addToMap(e));\n        const opponent_fighter = window.opponent_fighter;\n        opponent_fighter.girls.map((e) => addToMap(e));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/tower-of-fame.html')) {\n        const opponents_list = window.opponents_list;\n        opponents_list.forEach((e) => e.player.team.girls.map((e) => addToMap(e)));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/season-arena.html')) {\n        const hero_data = window.hero_data;\n        hero_data.team.girls.map((e) => addToMap(e));\n        const opponents = window.opponents;\n        opponents.forEach((e) => e.player.team.girls.map((e) => addToMap(e)));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/teams.html')) {\n        const teams_data = window.teams_data;\n        Object.values(teams_data).forEach((team) => {\n            team.girls.map((e) => addToMap(e));\n        });\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/edit-team.html')) {\n        const availableGirls = window.availableGirls;\n        availableGirls.forEach((e) => addToMap(e));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/waifu.html')) {\n        const girlsDataList = window.girlsDataList;\n        girlsDataList.forEach((e) => addToMap(e));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/path-of-valor.html', '/path-of-glory.html')) {\n        const path_girls = window.path_girls;\n        path_girls.forEach((e) => addToMap(e));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/activities.html')) {\n        const pop_hero_girls = window.pop_hero_girls;\n        Object.values(pop_hero_girls).forEach((e) => addToMap(e));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/pantheon.html')) {\n        if (Array.isArray(girl_rewards)) {\n            girl_rewards.forEach((e) => addToMap(e.girl_data));\n        }\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/clubs.html')) {\n        const club_champion_data = window.club_champion_data;\n        const girl = club_champion_data?.champion?.girl;\n        if (girl != null)\n            addToMap(girl);\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/champions/')) {\n        const championData = window.championData;\n        const girl = championData?.champion?.girl;\n        if (girl != null)\n            addToMap(girl);\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/girl/')) {\n        const girl = window.girl;\n        if (girl != null)\n            addToMap(girl);\n        $(document).on('ajaxComplete', (event, jqXHR, ajaxOptions) => {\n            if (ajaxOptions.data?.includes('action=get_teams_for_girl')) {\n                const json = jqXHR.responseJSON;\n                json?.teams?.forEach((e) => e.girls.forEach((e) => addToMap(e)));\n            }\n        });\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/event.html')) {\n        const event_girls = window.event_girls;\n        event_girls?.forEach((e) => addToMap(e));\n        // Boss Bang\n        const current_event = window.current_event;\n        current_event?.event_data?.indexed_hero_teams?.forEach((e) => {\n            e.girls?.forEach((e) => addToMap(e));\n        });\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/add-boss-bang-team.html')) {\n        const availableGirls = window.availableGirls;\n        availableGirls.forEach((e) => addToMap(e));\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/labyrinth.html')) {\n        const old = window.applyLabyrinthSpecifications;\n        if (typeof old === 'function') {\n            window.applyLabyrinthSpecifications = function applyLabyrinthSpecifications(...args) {\n                addToMap(args[0]);\n                old(...args);\n            };\n        }\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/labyrinth-pre-battle.html')) {\n        const hero_fighter = window.hero_fighter;\n        Object.values(hero_fighter.team.girls).map((e) => addToMap(e));\n        const opponent_fighter = window.opponent_fighter;\n        opponent_fighter.team.girls.map((e) => addToMap(e));\n    }\n}\nasync function improveTooltipsForLabyrinth(window) {\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/labyrinth-pool-select.html', '/labyrinth.html', '/labyrinth-pre-battle.html', '/edit-labyrinth-team.html')) {\n        const _displayPvpV4Caracs = window.displayPvpV4Caracs;\n        if (typeof _displayPvpV4Caracs === 'function') {\n            const number_format_lang = window.number_format_lang;\n            window.displayPvpV4Caracs = function displayPvpV4Caracs(...args) {\n                const ret = _displayPvpV4Caracs(...args);\n                try {\n                    return $('<div id=\"wrapper\"></div>')\n                        .html(ret)\n                        .find('.left-section')\n                        .prepend($('<span carac=\"ego\"></span>').text(number_format_lang(args[0].battle_caracs.ego)))\n                        .closest('#wrapper')\n                        .html();\n                }\n                catch {\n                    return ret;\n                }\n            };\n            $(`<style>\n.new_girl_tooltip.pvp-v4 .stats-wrapper .right-section {\n    width: 50%;\n    margin-left: 40%;\n    margin-top: -1.5rem;\n}\n.new_girl_tooltip .caracs {\n    margin-top: 0;\n}\n.new_girl_tooltip.pvp-v4 .stats-wrapper .caracs {\n    height: 8rem;\n}\n</style>`).appendTo(document.head);\n        }\n    }\n}\nasync function fixAutoAssignForLabyrinth(window) {\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/labyrinth-pool-select.html')) {\n        const owned_girls = window.owned_girls;\n        if (Array.isArray(owned_girls)) {\n            owned_girls.forEach(e => (e.id_girl = Number(e.id_girl)));\n        }\n    }\n}\nasync function showAttackOrder(window) {\n    const appendStyle = () => {\n        $(`<style>\n.sim-team-order-number {\n    position: absolute;\n    width: 1.5rem;\n    height: 1.5rem;\n    right: -0.5rem;\n    bottom: -0.25rem;\n    font-size: 0.75rem;\n    line-height: 1.25rem;\n    text-align: center;\n    background: linear-gradient(to right, #333750 0, #1e9fdf 100%);\n    border-radius: 50%;\n    border: 2px solid #fff;\n    z-index: 2;\n    pointer-events: none;\n}\n.change-team-panel .sim-team-order-number {\n    right: 0;\n    bottom: -3px;\n}\n.change-team-panel.harem-panel .sim-team-order-number {\n    right: 0;\n    bottom: unset;\n}\n</style>`).appendTo(document.head);\n    };\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/labyrinth-pre-battle.html')) {\n        appendStyle();\n        const hero_fighter = window.hero_fighter;\n        const opponent_fighter = window.opponent_fighter;\n        const list = [...Object.values(hero_fighter.fighters), ...Object.values(opponent_fighter.fighters)];\n        list.sort((x, y) => +y.speed - +x.speed);\n        (0,_utils_storage__WEBPACK_IMPORTED_MODULE_5__.setIntoLocalStorage)('HHBattleSimulator.LabyrinthTeamData', [\n            ...Object.values(opponent_fighter.fighters).map((e) => e.speed),\n        ]);\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_3__.afterGameInited)();\n        list.forEach((e, i) => {\n            const order = i + 1;\n            const icon = $('<div class=\"sim-team-order-number\"></div>').text(order);\n            $(e.is_hero_fighter ? '.player-panel' : '.opponent-panel')\n                .find(`[data-team-member-position=\"${e.position}\"]`)\n                .append(icon);\n        });\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/edit-labyrinth-team.html')) {\n        appendStyle();\n        const opponent = (0,_utils_storage__WEBPACK_IMPORTED_MODULE_5__.getFromLocalStorage)('HHBattleSimulator.LabyrinthTeamData', []);\n        const availableGirls = window.availableGirls;\n        const girlsMap = new Map(availableGirls.map((e) => [String(e.id_girl), e]));\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_3__.afterGameInited)();\n        const update = () => {\n            const list = [\n                ...[...document.querySelectorAll('[data-girl-id]')]\n                    .map(e => {\n                    const girl = girlsMap.get(e.dataset.girlId);\n                    return {\n                        speed: girl.battle_caracs.speed,\n                        is_hero_fighter: true,\n                        position: +(e.dataset.teamMemberPosition ?? -1),\n                    };\n                })\n                    .sort((x, y) => x.position - y.position),\n                ...opponent.map((e) => ({\n                    speed: e,\n                    is_hero_fighter: false,\n                })),\n            ];\n            list.sort((x, y) => +y.speed - +x.speed);\n            list.forEach((e, i) => {\n                if (!e.is_hero_fighter)\n                    return;\n                const order = i + 1;\n                const $container = $(`[data-team-member-position=\"${e.position}\"]`);\n                const $icon = $container.find('.sim-team-order-number');\n                if ($icon.length > 0) {\n                    $icon.text(order);\n                }\n                else {\n                    $container.append($('<div class=\"sim-team-order-number\"></div>').text(order));\n                }\n            });\n            const speedList = list.map(e => e.speed);\n            $('.harem-panel-girls [id_girl]').each((_, e) => {\n                const id = e.getAttribute('id_girl');\n                const girl = girlsMap.get(id);\n                const speed = girl.battle_caracs.speed;\n                let order = speedList.findIndex(e => e <= speed) + 1;\n                if (order === 0)\n                    order = 14;\n                const $container = $(e);\n                const $icon = $container.find('.sim-team-order-number');\n                if ($icon.length > 0) {\n                    $icon.text(order);\n                }\n                else {\n                    $container.append($('<div class=\"sim-team-order-number\"></div>').text(order));\n                }\n            });\n        };\n        const onChange = () => {\n            observer.disconnect();\n            update();\n            observer.observe(document.querySelector('.team-hexagon'), {\n                childList: true,\n                subtree: true,\n                attributes: true,\n                attributeFilter: ['src'],\n            });\n        };\n        const observer = new MutationObserver(onChange);\n        onChange();\n    }\n}\nasync function showClass(window) {\n    const appendStyle = () => {\n        $(`<style>\n.sim-labyrinth-class {\n    position: absolute;\n    left: -0.375rem;\n    bottom: -0.125rem;\n    line-height: 0;\n    filter: drop-shadow(-1px -1px #fff) drop-shadow(-1px 1px #fff) drop-shadow(1px -1px #fff) drop-shadow(1px 1px #fff);\n    z-index: 2;\n    pointer-events: none;\n}\n.sim-labyrinth-class [carac=\"1\"]::before,\n.sim-labyrinth-class [carac=\"2\"]::before,\n.sim-labyrinth-class [carac=\"3\"]::before {\n    width: 1.25rem;\n    height: 1.25rem;\n}\n.change-team-panel .sim-labyrinth-class {\n    left: 2px;\n    bottom: -1px;\n}\n.change-team-panel.harem-panel .sim-labyrinth-class {\n    bottom: unset;\n}\n</style>`).appendTo(document.head);\n    };\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/labyrinth-pre-battle.html')) {\n        appendStyle();\n        const hero_fighter = window.hero_fighter;\n        const opponent_fighter = window.opponent_fighter;\n        const list = [...Object.values(hero_fighter.fighters), ...Object.values(opponent_fighter.fighters)];\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_3__.afterGameInited)();\n        list.forEach((e, i) => {\n            const klass = e.girl.girl.class;\n            const icon = $('<div class=\"sim-labyrinth-class\"></div>').append($('<div></div>').attr('carac', klass));\n            $(e.is_hero_fighter ? '.player-panel' : '.opponent-panel')\n                .find(`[data-team-member-position=\"${e.position}\"]`)\n                .append(icon);\n        });\n    }\n    if ((0,_utils_page__WEBPACK_IMPORTED_MODULE_4__.checkPage)('/edit-labyrinth-team.html')) {\n        appendStyle();\n        const availableGirls = window.availableGirls;\n        const girlsMap = new Map(availableGirls.map((e) => [String(e.id_girl), e]));\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_3__.afterGameInited)();\n        const update = () => {\n            document.querySelectorAll('[data-girl-id]').forEach((e) => {\n                const girl = girlsMap.get(e.dataset.girlId);\n                const $container = $(e);\n                const $icon = $container.find('.sim-labyrinth-class');\n                if ($icon.length > 0) {\n                    $icon.find('[carac]').attr('carac', girl.class);\n                }\n                else {\n                    $container.append($('<div class=\"sim-labyrinth-class\"></div>').append($('<div></div>').attr('carac', girl.class)));\n                }\n            });\n        };\n        $('.harem-panel-girls [id_girl]').each((_, e) => {\n            const id = e.getAttribute('id_girl');\n            const girl = girlsMap.get(id);\n            const $container = $(e);\n            const $icon = $container.find('.sim-labyrinth-class');\n            if ($icon.length > 0) {\n                $icon.find('[carac]').attr('carac', girl.class);\n            }\n            else {\n                $container.append($('<div class=\"sim-labyrinth-class\"></div>').append($('<div></div>').attr('carac', girl.class)));\n            }\n        });\n        const onChange = () => {\n            observer.disconnect();\n            update();\n            observer.observe(document.querySelector('.team-hexagon'), {\n                childList: true,\n                subtree: true,\n                attributes: true,\n                attributeFilter: ['src'],\n            });\n        };\n        const observer = new MutationObserver(onChange);\n        onChange();\n    }\n}\nfunction loadOpponentTeam(window) {\n    const { localStorageGetItem } = window;\n    const battleType = localStorageGetItem('battle_type');\n    const opponentTeamData = (0,_store_team__WEBPACK_IMPORTED_MODULE_2__.loadOpponentTeamData)();\n    if (opponentTeamData == null || opponentTeamData.battleType !== battleType)\n        return null;\n    const opponentIdMap = {\n        leagues: () => localStorageGetItem('leagues_id'),\n        trolls: () => localStorageGetItem('troll_id'),\n        pantheon: () => localStorageGetItem('pantheon_id'),\n        seasons: () => opponentTeamData.opponentId,\n    };\n    const opponentId = opponentIdMap[battleType]?.();\n    if (opponentId === opponentTeamData.opponentId)\n        return opponentTeamData.team;\n    return null;\n}\nfunction loadMythicBoosterMultiplier(battleType) {\n    return (0,_store_booster__WEBPACK_IMPORTED_MODULE_1__.loadBoosterData)().mythic?.[battleType] ?? null;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/base/common.ts?");

/***/ }),

/***/ "./src/page/edit-team.ts":
/*!*******************************!*\
  !*** ./src/page/edit-team.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditTeamPage: () => (/* binding */ EditTeamPage),\n/* harmony export */   fetchTeamParams: () => (/* binding */ fetchTeamParams)\n/* harmony export */ });\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _data_fighter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/fighter */ \"./src/data/fighter.ts\");\n/* harmony import */ var _store_hero__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/hero */ \"./src/store/hero.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _dom_mojo__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../dom/mojo */ \"./src/dom/mojo.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertEditTeamWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_7__.assertGameWindow)(window);\n    const { hero_data, teamGirls, theme_resonance_bonuses, availableGirls } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (teamGirls == null)\n        throw new Error('teamGirls is not found.');\n    if (theme_resonance_bonuses == null)\n        throw new Error('theme_resonance_bonuses is not found.');\n    if (availableGirls == null)\n        throw new Error('availableGirls is not found.');\n}\nasync function EditTeamPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_6__.checkPage)('/edit-team.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.beforeGameInited)();\n    assertEditTeamWindow(window);\n    const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_13__.getConfig)();\n    const { availableGirls } = window;\n    const girlMap = Object.fromEntries(availableGirls.map((e) => [e.id_girl, e]));\n    const { get_lang, get_dec_and_sep } = window;\n    const separator = get_dec_and_sep(get_lang()).sep;\n    const parseNumber = (str) => parseFloat(str.trim().replaceAll(separator, ''));\n    const getTeamPower = () => parseNumber($('.team-total-power').text());\n    const getCaracs = () => {\n        const getStat = (name) => parseNumber($(`#stats-${name}`).text());\n        return {\n            damage: getStat('damage'),\n            defense: getStat('defense'),\n            ego: getStat('ego'),\n            chance: getStat('chance'),\n        };\n    };\n    const getGirls = () => {\n        const girls = Array(7);\n        document.querySelectorAll('.team-hexagon [data-girl-id]').forEach(e => {\n            const index = e.dataset.teamMemberPosition;\n            const girlId = e.dataset.girlId;\n            if (index != null && girlId != null) {\n                girls[+index] = girlMap[girlId];\n            }\n        });\n        return girls.filter(e => e != null);\n    };\n    const getTeam = () => ({\n        caracs: getCaracs(),\n        total_power: getTeamPower(),\n        girls: getGirls(),\n        id_team: window.hero_data.team.id_team,\n    });\n    saveTeamSimulationParams(window);\n    if (config.doSimulateEditTeam)\n        addSimulation(window);\n    async function addSimulation(window) {\n        const { hero_data, teamGirls, theme_resonance_bonuses, availableGirls, localStorageGetItem } = window;\n        const opponentTeam = (0,_base_common__WEBPACK_IMPORTED_MODULE_7__.loadOpponentTeam)(window);\n        if (opponentTeam == null)\n            return;\n        const opponentTeam2 = opponentTeam;\n        const initialTeam = hero_data.team;\n        if (initialTeam == null)\n            return;\n        const girlsMap = new Map(Object.values(availableGirls).map((e) => [e.id_girl, e]));\n        const battleType = localStorageGetItem('battle_type');\n        const mythicBoosterMultiplier = (0,_base_common__WEBPACK_IMPORTED_MODULE_7__.loadMythicBoosterMultiplier)(battleType);\n        if (mythicBoosterMultiplier == null)\n            return;\n        const elements = Object.fromEntries(initialTeam.synergies.map((e) => [e.element.type, e.element]));\n        let currentTeam = { ...initialTeam };\n        let hasAssumptions = false;\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n        const $iconArea = $('.player_team_block.battle_hero .icon-area');\n        const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_9__.ChanceView();\n        $iconArea.before(chanceView.getElement().addClass('sim-left'));\n        const pointsView = battleType === 'leagues' ? new _dom_points__WEBPACK_IMPORTED_MODULE_0__.PointsView() : null;\n        if (pointsView != null) {\n            $iconArea.before(pointsView.getElement().addClass('sim-right'));\n        }\n        const mojo = (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.loadOpponentTeamData)()?.mojo;\n        const mojoView = battleType === 'seasons' && mojo != null ? new _dom_mojo__WEBPACK_IMPORTED_MODULE_14__.MojoView(mojo) : null;\n        if (mojoView != null) {\n            $iconArea.before(mojoView.getElement().addClass('sim-right'));\n        }\n        update();\n        const statsContainer = document.querySelector('.player_stats');\n        if (statsContainer != null) {\n            const observer = new MutationObserver(updateStats);\n            observer.observe(statsContainer, {\n                subtree: true,\n                childList: true,\n            });\n        }\n        const teamHexagon = document.querySelector('.team-hexagon');\n        if (teamHexagon != null) {\n            const observer = new MutationObserver(updateTeam);\n            observer.observe(teamHexagon, {\n                subtree: true,\n                attributes: true,\n                attributeFilter: ['src'],\n            });\n        }\n        function updateTeam() {\n            const oldTeamGirls = currentTeam.girls;\n            const oldTeamCenterGirlId = +oldTeamGirls[0]?.id_girl;\n            const oldTeamIdSet = new Set(oldTeamGirls.map(e => +e.id_girl));\n            const newTeamGirlIds = getTeam().girls.map(e => +e.id_girl);\n            const newTeamCenterGirlId = newTeamGirlIds[0];\n            if (newTeamGirlIds.length == oldTeamGirls.length) {\n                if (newTeamGirlIds.every(e => oldTeamIdSet.has(e))) {\n                    if (newTeamCenterGirlId === oldTeamCenterGirlId) {\n                        // skip sim\n                        return;\n                    }\n                    else {\n                        // update sim\n                        currentTeam.girls = newTeamGirlIds.map(e => oldTeamGirls.find(girl => +girl.id_girl === +e));\n                        update();\n                        return;\n                    }\n                }\n            }\n            // reset sim\n            chanceView.reset();\n            pointsView?.reset();\n            mojoView?.reset();\n        }\n        function updateStats() {\n            const caracs = getCaracs();\n            const teamMembers = Array.from(document.querySelectorAll('.team-member-container[data-girl-id]'))\n                .sort((x, y) => Number(x.dataset.teamMemberPosition) - Number(y.dataset.teamMemberPosition))\n                .map(e => girlsMap.get(e.dataset.girlId));\n            hasAssumptions = false;\n            currentTeam.girls = teamMembers.map(e => {\n                const id = e.id_girl;\n                const girlData = teamGirls.find((girl) => girl.id_girl == id);\n                if (girlData != null)\n                    return { ...e, skills: girlData.skills };\n                const skills = {};\n                const tier4 = e.skill_tiers_info[4]?.skill_points_used ?? 0;\n                if (tier4) {\n                    hasAssumptions = true;\n                    skills[9] = { skill: { percentage_value: 0.2 * tier4 } };\n                    skills[10] = { skill: { percentage_value: 0 } };\n                }\n                const tier5 = e.skill_tiers_info[5]?.skill_points_used ?? 0;\n                if (tier5 > 0) {\n                    const element = e.element;\n                    if (['darkness', 'sun'].includes(element))\n                        skills[11] = { skill: { percentage_value: 7 * tier5 } }; // stun\n                    if (['stone', 'light'].includes(element))\n                        skills[12] = { skill: { percentage_value: 8 * tier5 } }; // shield\n                    if (['nature', 'psychic'].includes(element))\n                        skills[13] = { skill: { percentage_value: 20 * tier5 } }; // reflect\n                    if (['fire', 'water'].includes(element))\n                        skills[14] = { skill: { percentage_value: 6 * tier5 } }; // execute\n                }\n                return { ...e, skills };\n            });\n            const elementCounts = Object.fromEntries(Object.keys(elements).map(e => [e, 0]));\n            teamMembers.forEach(e => {\n                elementCounts[e.element]++;\n            });\n            currentTeam.synergies = initialTeam.synergies.map(e => ({\n                ...e,\n                element: { type: e.element.type },\n                bonus_multiplier: e.harem_bonus_multiplier + e.team_bonus_per_girl * elementCounts[e.element.type],\n            }));\n            const theme = Object.entries(elementCounts)\n                .filter(([_, count]) => count >= 3)\n                .map(([type, _]) => type);\n            currentTeam.theme_elements = theme.map(e => elements[e]);\n            currentTeam.theme = theme.join(',');\n            if (theme.length > 0) {\n                const balancedBonus = theme_resonance_bonuses[''];\n                if (balancedBonus) {\n                    const { defense, chance } = balancedBonus;\n                    if (defense)\n                        caracs.defense /= Math.pow(1.02, defense / 2);\n                    if (chance)\n                        caracs.chance /= Math.pow(1.04, chance / 4);\n                }\n                theme.forEach(element => {\n                    const bonus = theme_resonance_bonuses[element];\n                    if (bonus) {\n                        const { defense, chance } = bonus;\n                        if (defense)\n                            caracs.defense *= Math.pow(1.02, defense / 2);\n                        if (chance)\n                            caracs.chance *= Math.pow(1.04, chance / 4);\n                    }\n                });\n            }\n            currentTeam.caracs = caracs;\n            update();\n        }\n        function update() {\n            const _hasAssumptions = hasAssumptions;\n            const player = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_12__.calcBattlerFromTeams)(currentTeam, opponentTeam2, mythicBoosterMultiplier ?? 1);\n            const opponent = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_12__.calcBattlerFromTeams)(opponentTeam2, currentTeam);\n            const simType = pointsView == null ? 'Chance' : config.calculateLeaguePointsTable ? 'Full' : 'Standard';\n            const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_1__.simulateFromBattlers)(simType, player, opponent).then(result => {\n                return {\n                    ...result,\n                    hasAssumptions: _hasAssumptions,\n                };\n            });\n            chanceView.updateAsync(resultPromise);\n            chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_10__.createBattleTable)(player, opponent));\n            if (pointsView != null) {\n                const leaguePromise = resultPromise;\n                pointsView.updateAsync(leaguePromise);\n                leaguePromise.then(result => {\n                    pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_11__.createPointsTable)(result));\n                });\n            }\n            if (mojoView != null) {\n                mojoView.updateAsync(resultPromise);\n            }\n        }\n    }\n    async function saveTeamSimulationParams(window) {\n        const { Hero, hero_data, server_now_ts } = window;\n        const initialTeam = hero_data.team;\n        const mergedInitialTeam = { ...initialTeam, girls: initialTeam.girls.map(e => girlMap[e.id_girl]) };\n        updateTeamParams(mergedInitialTeam, Hero, server_now_ts);\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n        const validateButton = document.getElementById('validate-team');\n        if (validateButton != null) {\n            validateButton.addEventListener('click', () => {\n                updateTeamParams(getTeam(), Hero, server_now_ts);\n            }, true);\n        }\n    }\n}\nlet fetchedWindow = null;\nasync function fetchEditTeamPage(id_team) {\n    fetchedWindow ??= (async () => {\n        const page = await fetch(`edit-team.html?id_team=${id_team}`);\n        const html = await page.text();\n        const teamGirls = JSON.parse(html.match(/var\\s+teamGirls\\s*=\\s*(\\[.*?\\]);/)[1]);\n        const theme_resonance_bonuses = JSON.parse(html.match(/var\\s+theme_resonance_bonuses\\s*=\\s*((?:\\{|\\[).*?(?:\\}|\\]));/)[1]);\n        const hero_data = Function('return ' + html.match(/var\\s+hero_data\\s*=\\s*(\\{.*?\\});/s)[1])();\n        const availableGirls = JSON.parse(html.match(/var\\s+availableGirls\\s*=\\s*(\\[.*?\\]);/)[1]);\n        const Hero_infos = JSON.parse(html.match(/Hero.infos\\s*=\\s*(\\{.*?\\});/)[1]);\n        return {\n            teamGirls,\n            theme_resonance_bonuses,\n            hero_data,\n            availableGirls,\n            Hero_infos,\n        };\n    })();\n    return fetchedWindow;\n}\nlet teamParams;\nasync function fetchTeamParams(teamId, hero, server_now_ts) {\n    if (teamParams != null)\n        return teamParams;\n    const editTeamPage = await fetchEditTeamPage(teamId);\n    const girlMap = Object.fromEntries(editTeamPage.availableGirls.map(e => [e.id_girl, e]));\n    const team = {\n        ...editTeamPage.hero_data.team,\n        girls: editTeamPage.hero_data.team.girls.map(e => girlMap[e.id_girl]),\n    };\n    const newHero = {\n        ...hero,\n        infos: editTeamPage.Hero_infos,\n    };\n    teamParams = updateTeamParams(team, newHero, server_now_ts);\n    return teamParams;\n}\nfunction updateTeamParams(team, hero, server_now_ts) {\n    const classBonus = (0,_store_hero__WEBPACK_IMPORTED_MODULE_3__.loadClassBonus)();\n    if (classBonus == null)\n        return;\n    const boosterBonus = (0,_store_booster__WEBPACK_IMPORTED_MODULE_8__.loadBoosterBonus)(server_now_ts);\n    if (boosterBonus == null)\n        return;\n    const heroCaracs = (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.multiplyFighterCaracs)((0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.getFighterCaracsFromHero)(hero), classBonus);\n    const girlArmorCaracs = team.girls\n        .flatMap(girl => girl.armor.map(armor => (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.toFighterCaracs)(armor.caracs)))\n        .reduce((p, c) => (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.addFighterCaracs)(p, c), (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.toFighterCaracs)({}));\n    const teamCaracs = new _data_fighter__WEBPACK_IMPORTED_MODULE_2__.FighterCaracsCalculator()\n        .add((0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.getFighterCaracsFromTeamPower)(team.total_power))\n        .multiply(classBonus)\n        .add(girlArmorCaracs)\n        .result();\n    const combinedBonus = new _data_fighter__WEBPACK_IMPORTED_MODULE_2__.FighterCaracsCalculator()\n        .add(team.caracs)\n        .divide(boosterBonus.multiplier)\n        .subtract(boosterBonus.addend)\n        .divide((0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.addFighterCaracs)(teamCaracs, heroCaracs))\n        .result();\n    const multiplier = (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.multiplyFighterCaracs)(classBonus, combinedBonus);\n    const addend = (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.multiplyFighterCaracs)(teamCaracs, combinedBonus);\n    const teamId = +team.id_team;\n    const teamParams = { teamId, multiplier, addend, caracs: team.caracs };\n    (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.saveTeamParams)(teamParams);\n    return teamParams;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/edit-team.ts?");

/***/ }),

/***/ "./src/page/league-battle.ts":
/*!***********************************!*\
  !*** ./src/page/league-battle.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LeagueBattlePage: () => (/* binding */ LeagueBattlePage)\n/* harmony export */ });\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\nfunction assertLeagueBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_3__.assertGameWindow)(window);\n    const { hero_fighter, opponent_fighter } = window;\n    if (hero_fighter == null)\n        throw new Error('hero_fighter is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function LeagueBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_2__.checkPage)('/league-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_1__.beforeGameInited)();\n    assertLeagueBattleWindow(window);\n    updatePlayerLeagueTeam(window);\n}\nfunction updatePlayerLeagueTeam(window) {\n    const { hero_fighter } = window;\n    (0,_store_team__WEBPACK_IMPORTED_MODULE_0__.savePlayerLeagueTeam)(hero_fighter);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/league-battle.ts?");

/***/ }),

/***/ "./src/page/leagues-pre-battle.ts":
/*!****************************************!*\
  !*** ./src/page/leagues-pre-battle.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LeaguesPreBattlePage: () => (/* binding */ LeaguesPreBattlePage),\n/* harmony export */   fetchLeaguesPreBattlePage: () => (/* binding */ fetchLeaguesPreBattlePage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _dom_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom/popup */ \"./src/dom/popup.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction asserLeaguesPreBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_14__.assertGameWindow)(window);\n    const { hero_data, opponent_fighter } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function LeaguesPreBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_13__.checkPage)('/leagues-pre-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.beforeGameInited)();\n    asserLeaguesPreBattleWindow(window);\n    const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_6__.getConfig)();\n    updatePlayerLeagueTeam(window);\n    updateMythicBooster(window);\n    saveOpponentTeam(window);\n    if (config.doSimulateLeague) {\n        addChanceAndPoints(window);\n        if (config.addBoosterSimulator)\n            addBoosterSimulator(window);\n        if (config.addSkillSimulator)\n            addSkillSimulator(window);\n    }\n}\nfunction updatePlayerLeagueTeam(window) {\n    const { hero_data } = window;\n    (0,_store_team__WEBPACK_IMPORTED_MODULE_11__.savePlayerLeagueTeam)(hero_data.team);\n}\nfunction updateMythicBooster(window) {\n    const { hero_data, opponent_fighter } = window;\n    const multiplier = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_8__.calcMythicBoosterMultiplierFromFighters)(hero_data, opponent_fighter.player);\n    const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_10__.loadMythicBoosterBonus)();\n    mythicBoosterData.leagues = multiplier;\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_10__.saveMythicBoosterBonus)(mythicBoosterData);\n}\nasync function saveOpponentTeam(window) {\n    const { opponent_fighter, localStorageSetItem } = window;\n    const opponentId = (0,_utils_page__WEBPACK_IMPORTED_MODULE_13__.getOpponentIdFromUrl)();\n    const opponentTeam = opponent_fighter.player.team;\n    const update = () => {\n        localStorageSetItem('battle_type', 'leagues');\n        localStorageSetItem('leagues_id', opponentId);\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_11__.saveOpponentTeamData)({\n            battleType: 'leagues',\n            opponentId,\n            team: opponentTeam,\n        });\n    };\n    update();\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nasync function addChanceAndPoints(window) {\n    const { hero_data, opponent_fighter } = window;\n    const { player, opponent } = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_9__.calcBattlersFromFighters)(hero_data, opponent_fighter.player);\n    const { calculateLeaguePointsTable } = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_6__.getConfig)();\n    const simType = calculateLeaguePointsTable ? 'Full' : 'Standard';\n    const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_7__.simulateFromBattlers)(simType, player, opponent);\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n    const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_2__.ChanceView();\n    chanceView.updateAsync(resultPromise);\n    chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n    $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n    const pointsView = new _dom_points__WEBPACK_IMPORTED_MODULE_3__.PointsView();\n    pointsView.updateAsync(resultPromise);\n    resultPromise.then(result => {\n        pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_4__.createPointsTable)(result));\n    });\n    $('.opponent .icon-area').before(pointsView.getElement().addClass('sim-right'));\n}\nasync function addBoosterSimulator(window) {\n    const { hero_data, opponent_fighter } = window;\n    const playerTeam = hero_data.team;\n    const opponentTeam = opponent_fighter.player.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n    const popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_5__.Popup('Booster simulator');\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-ame\"></div></div>')\n        .addClass('sim-right')\n        .attr('tooltip', 'Booster simulator');\n    let inited = false;\n    iconButton.on('click', () => {\n        if (!inited) {\n            inited = true;\n            popup.setContent('Now loading...');\n            queueMicrotask(async () => {\n                try {\n                    const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_8__.simulatePointsForBoosterCombinationWithAME)(playerTeam, opponentTeam);\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createBoosterPointsTable)(results));\n                }\n                catch (e) {\n                    const message = e instanceof Error ? e.message : e;\n                    popup.setContent(`Error: ${message}<br>1. Go to the market page<br>2. Try again`);\n                }\n            });\n        }\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\nasync function addSkillSimulator(window) {\n    const { hero_data, opponent_fighter } = window;\n    const playerTeam = hero_data.team;\n    const opponentTeam = opponent_fighter.player.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n    const popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_5__.Popup('Skill simulator');\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-girl-skills\"></div></div>')\n        .addClass('sim-left')\n        .attr('tooltip', 'Skill simulator');\n    let inited = false;\n    iconButton.on('click', () => {\n        if (!inited) {\n            inited = true;\n            popup.setContent('Now loading...');\n            queueMicrotask(async () => {\n                try {\n                    const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_8__.simulatePointsForSkillCombinationWithAME)(playerTeam, opponentTeam);\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createSkillPointsTable)(results));\n                }\n                catch (e) {\n                    const message = e instanceof Error ? e.message : e;\n                    popup.setContent(`Error: ${message}<br>1. Go to the market page<br>2. Try again`);\n                }\n            });\n        }\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\nlet fetchedWindow = null;\nasync function fetchLeaguesPreBattlePage(opponentId) {\n    fetchedWindow ??= (async () => {\n        const preBattlePage = await fetch(`leagues-pre-battle.html?id_opponent=${opponentId}`);\n        const html = await preBattlePage.text();\n        const hero_data = JSON.parse(html.match(/var\\s+hero_data\\s*=\\s*(\\{.*?\\});/s)[1]);\n        const opponent_fighter = Function('return ' + html.match(/var\\s+opponent_fighter\\s*=\\s*(\\{.*?\\});/s)[1])();\n        return { hero_data, opponent_fighter };\n    })();\n    return fetchedWindow;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/leagues-pre-battle.ts?");

/***/ }),

/***/ "./src/page/pantheon-pre-battle.ts":
/*!*****************************************!*\
  !*** ./src/page/pantheon-pre-battle.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PantheonPreBattlePage: () => (/* binding */ PantheonPreBattlePage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_booster_simulation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n/* harmony import */ var _dom_popup__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../dom/popup */ \"./src/dom/popup.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertPantheonPreBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_10__.assertGameWindow)(window);\n    const { hero_data, opponent_fighter } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function PantheonPreBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_9__.checkPage)('/pantheon-pre-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.beforeGameInited)();\n    assertPantheonPreBattleWindow(window);\n    const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_12__.getConfig)();\n    updateMythicBooster(window);\n    saveOpponentTeam(window);\n    if (config.doSimulatePantheon) {\n        addChance(window);\n        if (config.addBoosterSimulator)\n            addBoosterSimulator(window);\n        if (config.addSkillSimulator)\n            addSkillSimulator(window);\n    }\n}\nfunction updateMythicBooster(window) {\n    const { hero_data, opponent_fighter } = window;\n    const multiplier = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_4__.calcMythicBoosterMultiplierFromFighters)(hero_data, opponent_fighter.player);\n    const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.loadMythicBoosterBonus)();\n    mythicBoosterData.pantheon = multiplier;\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.saveMythicBoosterBonus)(mythicBoosterData);\n}\nasync function saveOpponentTeam(window) {\n    const { opponent_fighter, localStorageSetItem } = window;\n    const opponentId = (0,_utils_page__WEBPACK_IMPORTED_MODULE_9__.getOpponentIdFromUrl)();\n    const opponentTeam = opponent_fighter.player.team;\n    const update = () => {\n        localStorageSetItem('battle_type', 'pantheon');\n        localStorageSetItem('pantheon_id', opponentId);\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_7__.saveOpponentTeamData)({\n            battleType: 'pantheon',\n            opponentId,\n            team: opponentTeam,\n        });\n    };\n    update();\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nasync function addChance(window) {\n    const { hero_data, opponent_fighter } = window;\n    const { player, opponent } = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_5__.calcBattlersFromFighters)(hero_data, opponent_fighter.player);\n    const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_3__.simulateFromBattlers)('Chance', player, opponent);\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_1__.ChanceView();\n    chanceView.updateAsync(resultPromise);\n    chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n    $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n}\nasync function addBoosterSimulator(window) {\n    const { hero_data, opponent_fighter } = window;\n    const playerTeam = hero_data.team;\n    const opponentTeam = opponent_fighter.player.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_11__.Popup('Booster simulator');\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-headband\"></div></div>')\n        .addClass('sim-right')\n        .attr('tooltip', 'Booster simulator');\n    let inited = false;\n    iconButton.on('click', () => {\n        if (!inited) {\n            inited = true;\n            popup.setContent('Now loading...');\n            queueMicrotask(async () => {\n                try {\n                    const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_4__.simulateChanceForBoosterCombinationWithHeadband)(playerTeam, opponentTeam);\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_2__.createBoosterChanceTable)(results));\n                }\n                catch (e) {\n                    const message = e instanceof Error ? e.message : e;\n                    popup.setContent(`Error: ${message}<br>1. Go to the market page<br>2. Try again`);\n                }\n            });\n        }\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\nasync function addSkillSimulator(window) {\n    const { hero_data, opponent_fighter } = window;\n    const playerTeam = hero_data.team;\n    const opponentTeam = opponent_fighter.player.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_11__.Popup('Skill simulator');\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-girl-skills\"></div></div>')\n        .addClass('sim-left')\n        .attr('tooltip', 'Skill simulator');\n    let inited = false;\n    iconButton.on('click', () => {\n        if (!inited) {\n            inited = true;\n            popup.setContent('Now loading...');\n            queueMicrotask(async () => {\n                try {\n                    const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_4__.simulateChanceForSkillCombinationWithHeadband)(playerTeam, opponentTeam);\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_2__.createSkillChanceTable)(results));\n                }\n                catch (e) {\n                    const message = e instanceof Error ? e.message : e;\n                    popup.setContent(`Error: ${message}<br>1. Go to the market page<br>2. Try again`);\n                }\n            });\n        }\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/pantheon-pre-battle.ts?");

/***/ }),

/***/ "./src/page/season-arena.ts":
/*!**********************************!*\
  !*** ./src/page/season-arena.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SeasonArenaPage: () => (/* binding */ SeasonArenaPage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_mojo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/mojo */ \"./src/dom/mojo.ts\");\n/* harmony import */ var _dom_popup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom/popup */ \"./src/dom/popup.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertSeasonArenaWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_14__.assertGameWindow)(window);\n    const { hero_data, caracs_per_opponent, opponents } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (caracs_per_opponent == null)\n        throw new Error('caracs_per_opponent is not found.');\n    if (opponents == null)\n        throw new Error('opponents is not found.');\n}\nasync function SeasonArenaPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_13__.checkPage)('/season-arena.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.beforeGameInited)();\n    assertSeasonArenaWindow(window);\n    const { hero_data, caracs_per_opponent, opponents } = window;\n    updateMythicBooster();\n    saveOpponentTeam(window);\n    const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_5__.getConfig)();\n    if (config.doSimulateSeason) {\n        addSimulation();\n        if (config.addBoosterSimulator)\n            addBoosterSimulator(window);\n        if (config.addSkillSimulator)\n            addSkillSimulator(window);\n    }\n    async function addSimulation() {\n        opponents.forEach(async (opponent_fighter) => {\n            const opponentFighter = opponent_fighter.player;\n            const opponentId = opponentFighter.id_fighter;\n            const playerFighter = { ...hero_data, ...caracs_per_opponent[opponentId] };\n            const player = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_8__.calcBattlerFromFighters)(playerFighter, opponentFighter);\n            const opponent = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_8__.calcBattlerFromFighters)(opponentFighter, playerFighter);\n            const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_6__.simulateFromBattlers)('Chance', player, opponent);\n            const mojo = +opponent_fighter.rewards.rewards.find(e => e.type === 'victory_points').value;\n            await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n            const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_2__.ChanceView();\n            chanceView.updateAsync(resultPromise);\n            chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n            const mojoView = new _dom_mojo__WEBPACK_IMPORTED_MODULE_3__.MojoView(mojo);\n            mojoView.updateAsync(resultPromise);\n            $(`[data-opponent=\"${opponentId}\"] .icon-area`)\n                .before(chanceView.getElement().addClass('sim-left'))\n                .before(mojoView.getElement().addClass('sim-right'));\n        });\n    }\n    function updateMythicBooster() {\n        const opponent = opponents[0].player;\n        const playerCaracs = caracs_per_opponent[opponent.id_fighter];\n        const counterBonus = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_9__.calcCounterBonus)(hero_data.team, opponent.team);\n        const percentage = Math.round((100 * playerCaracs.damage) / hero_data.team.caracs.damage / counterBonus);\n        const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_10__.loadMythicBoosterBonus)();\n        mythicBoosterData.seasons = percentage / 100;\n        (0,_store_booster__WEBPACK_IMPORTED_MODULE_10__.saveMythicBoosterBonus)(mythicBoosterData);\n    }\n}\nasync function saveOpponentTeam(window) {\n    const { opponents, localStorageSetItem } = window;\n    const update = () => {\n        localStorageSetItem('battle_type', 'seasons');\n        const opponentId = $('.selected_opponent').attr('data-opponent');\n        if (opponentId == null)\n            return;\n        const opponent = opponents.find(e => +e.player.id_fighter === +opponentId);\n        if (opponent == null)\n            return;\n        const opponentTeam = opponent.player.team;\n        const mojo = opponent.rewards.rewards.find(e => e.type === 'victory_points')?.value;\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_11__.saveOpponentTeamData)({\n            battleType: 'seasons',\n            opponentId,\n            team: opponentTeam,\n            mojo: +(mojo ?? 0),\n        });\n    };\n    update();\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nfunction getOpponent(window) {\n    const { opponents } = window;\n    const opponentId = $('.selected_opponent').attr('data-opponent');\n    if (opponentId == null)\n        return;\n    const opponent = opponents.find(e => +e.player.id_fighter === +opponentId);\n    if (opponent == null)\n        return;\n    return opponent;\n}\nasync function addBoosterSimulator(window) {\n    const { hero_data } = window;\n    const playerTeam = hero_data.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-headband\"></div></div>')\n        .addClass('sim-right')\n        .attr('tooltip', 'Booster simulator');\n    const popupMap = {};\n    iconButton.on('click', () => {\n        const opponent = getOpponent(window);\n        if (opponent == null)\n            return;\n        let popup = popupMap[+opponent.player.id_fighter];\n        if (popup == null) {\n            popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_4__.Popup(`Booster simulator (${opponent.player.nickname})`);\n            popup.setContent('Now loading...');\n            popupMap[+opponent.player.id_fighter] = popup;\n            queueMicrotask(async () => {\n                try {\n                    const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_7__.simulateChanceForBoosterCombinationWithAME)(playerTeam, opponent.player.team);\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createBoosterChanceTableWithAME)(results));\n                }\n                catch (e) {\n                    const message = e instanceof Error ? e.message : e;\n                    popup.setContent(`Error: ${message}<br>1. Go to the market page<br>2. Try again`);\n                }\n            });\n        }\n        Object.values(popupMap)\n            .filter(e => e != popup)\n            .forEach(e => e.hide());\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\nasync function addSkillSimulator(window) {\n    const { hero_data } = window;\n    const playerTeam = hero_data.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_12__.afterGameInited)();\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-girl-skills\"></div></div>')\n        .addClass('sim-left')\n        .attr('tooltip', 'Skill simulator');\n    const popupMap = {};\n    iconButton.on('click', () => {\n        const opponent = getOpponent(window);\n        if (opponent == null)\n            return;\n        let popup = popupMap[+opponent.player.id_fighter];\n        if (popup == null) {\n            popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_4__.Popup(`Booster simulator (${opponent.player.nickname})`);\n            popup.setContent('Now loading...');\n            popupMap[+opponent.player.id_fighter] = popup;\n            queueMicrotask(async () => {\n                try {\n                    const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_7__.simulateChanceForSkillCombinationWithAME)(playerTeam, opponent.player.team);\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createSkillChanceTableWithAME)(results));\n                }\n                catch (e) {\n                    const message = e instanceof Error ? e.message : e;\n                    popup.setContent(`Error: ${message}<br>1. Go to the market page<br>2. Try again`);\n                }\n            });\n        }\n        Object.values(popupMap)\n            .filter(e => e != popup)\n            .forEach(e => e.hide());\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/season-arena.ts?");

/***/ }),

/***/ "./src/page/shop.ts":
/*!**************************!*\
  !*** ./src/page/shop.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShopPage: () => (/* binding */ ShopPage)\n/* harmony export */ });\n/* harmony import */ var _data_booster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/booster */ \"./src/data/booster.ts\");\n/* harmony import */ var _data_fighter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/fighter */ \"./src/data/fighter.ts\");\n/* harmony import */ var _data_hero__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/hero */ \"./src/data/hero.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_hero__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/hero */ \"./src/store/hero.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\nfunction assertShopWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_8__.assertGameWindow)(window);\n    const { equipped_armor, equipped_booster } = window;\n    if (equipped_armor == null)\n        throw new Error('equipped_armor is not found.');\n    if (equipped_booster == null)\n        throw new Error('equipped_booster is not found.');\n}\nasync function ShopPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_7__.checkPage)('/shop.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_6__.beforeGameInited)();\n    assertShopWindow(window);\n    updateHeroData(window);\n}\nfunction updateHeroData(window) {\n    updateGinsengCaracs(window);\n    updateHeroClassBonus(window);\n    updateBoosterBonus(window);\n    // I want to observe the use of boosters and the replacement of hero armor.\n    // Changing the game code is a bad idea, but I don't know of any other good solution.\n    const Hero = window.Hero;\n    const Hero_updates = Hero.updates;\n    if (typeof Hero_updates === 'function') {\n        Hero.updates = function updates(...args) {\n            const ret = Hero_updates(...args);\n            try {\n                updateGinsengCaracs(window);\n                updateHeroClassBonus(window);\n                updateBoosterBonus(window);\n            }\n            catch (e) {\n                console.error(e);\n            }\n            return ret;\n        };\n    }\n}\nfunction updateGinsengCaracs(window) {\n    const { equipped_armor } = window;\n    const ginsengCaracs = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_3__.simulateGinsengCaracs)(window.Hero, getArmorCaracs(equipped_armor));\n    (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.saveGinsengCaracs)(ginsengCaracs);\n}\nfunction getArmorCaracs(equipped_armor) {\n    return Object.values(equipped_armor)\n        .map(e => (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)(e.caracs))\n        .reduce((p, c) => (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.addHeroCaracs)(p, c), (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)({}));\n}\nfunction updateHeroClassBonus(window) {\n    const { equipped_armor, Hero } = window;\n    const heroClass = Hero.infos.class;\n    const classBonus = Object.values(equipped_armor)\n        .map(e => e.resonance_bonuses?.class)\n        .filter((e) => e != null)\n        .filter(e => +e.identifier === heroClass)\n        .reduce((p, c) => {\n        p[c.resonance] += c.bonus;\n        return p;\n    }, { damage: 0, ego: 0 });\n    (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.saveClassBonus)(new _data_fighter__WEBPACK_IMPORTED_MODULE_1__.FighterCaracsCalculator(classBonus).divide(100).add(1).result());\n}\nfunction updateBoosterBonus(window) {\n    const { equipped_booster } = window;\n    const boosters = Array(0).concat(equipped_booster.normal, equipped_booster.mythic);\n    const boosterData = (0,_data_booster__WEBPACK_IMPORTED_MODULE_0__.getBoosterData)(boosters);\n    boosterData.mythic = {\n        leagues: 1,\n        seasons: 1,\n        trolls: 1,\n        pantheon: 1,\n        ...boosterData.mythic,\n    };\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_4__.saveBoosterData)(boosterData);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/shop.ts?");

/***/ }),

/***/ "./src/page/teams.ts":
/*!***************************!*\
  !*** ./src/page/teams.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TeamsPage: () => (/* binding */ TeamsPage),\n/* harmony export */   fetchPlayerLeaguesTeamFromTeams: () => (/* binding */ fetchPlayerLeaguesTeamFromTeams)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_mojo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/mojo */ \"./src/dom/mojo.ts\");\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertTeamsWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_11__.assertGameWindow)(window);\n    const { teams_data } = window;\n    if (teams_data == null)\n        throw new Error('teams_data is not found.');\n}\nasync function TeamsPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_10__.checkPage)('/teams.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_9__.beforeGameInited)();\n    assertTeamsWindow(window);\n    const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_5__.getConfig)();\n    if (config.doSimulateTeams)\n        addSimulation(window);\n    updateLeagueTeam(window);\n}\nasync function addSimulation(window) {\n    const { teams_data, localStorageGetItem } = window;\n    const opponentTeam = (0,_base_common__WEBPACK_IMPORTED_MODULE_11__.loadOpponentTeam)(window);\n    if (opponentTeam == null)\n        return;\n    const mojo = (0,_store_team__WEBPACK_IMPORTED_MODULE_8__.loadOpponentTeamData)()?.mojo;\n    const battleType = localStorageGetItem('battle_type');\n    const mythicBoosterMultiplier = (0,_base_common__WEBPACK_IMPORTED_MODULE_11__.loadMythicBoosterMultiplier)(battleType);\n    if (mythicBoosterMultiplier == null)\n        return;\n    const teamMap = Object.fromEntries(Object.values(teams_data)\n        .filter((e) => e.id_team != null && !e.locked)\n        .map((playerTeam) => {\n        const player = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_7__.calcBattlerFromTeams)(playerTeam, opponentTeam, mythicBoosterMultiplier);\n        const opponent = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_7__.calcBattlerFromTeams)(opponentTeam, playerTeam);\n        const { calculateLeaguePointsTable } = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_5__.getConfig)();\n        const simType = battleType !== 'leagues' ? 'Chance' : calculateLeaguePointsTable ? 'Full' : 'Standard';\n        const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_6__.simulateFromBattlers)(simType, player, opponent);\n        return [playerTeam.id_team, { resultPromise, player, opponent }];\n    }));\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_9__.afterGameInited)();\n    update();\n    const observer = new MutationObserver(update);\n    const teamSelector = document.querySelector('.teams-grid-container');\n    if (teamSelector != null) {\n        observer.observe(teamSelector, {\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['class'],\n        });\n    }\n    function update() {\n        const id = $('.selected-team').data('idTeam');\n        const team = teamMap[id];\n        if (team == null)\n            return;\n        const { resultPromise, player, opponent } = team;\n        const $iconArea = $('.team-right-part-container .icon-area');\n        const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_1__.ChanceView();\n        chanceView.updateAsync(resultPromise);\n        chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n        $iconArea.before(chanceView.getElement().addClass('sim-left'));\n        if (battleType === 'leagues') {\n            const pointsView = new _dom_points__WEBPACK_IMPORTED_MODULE_3__.PointsView();\n            pointsView.updateAsync(resultPromise);\n            resultPromise.then(result => {\n                pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_4__.createPointsTable)(result));\n            });\n            $iconArea.before(pointsView.getElement().addClass('sim-right'));\n        }\n        if (battleType === 'seasons' && mojo != null) {\n            const mojoView = new _dom_mojo__WEBPACK_IMPORTED_MODULE_2__.MojoView(mojo);\n            mojoView.updateAsync(resultPromise);\n            $iconArea.before(mojoView.getElement().addClass('sim-right'));\n        }\n    }\n}\nfunction updateLeagueTeam(window) {\n    const { teams_data, localStorageGetItem } = window;\n    const leaguesTeam = Object.values(teams_data).find(team => team.selected_for_battle_type.includes('leagues'));\n    if (leaguesTeam != null && leaguesTeam.id_team != null && leaguesTeam.theme != null) {\n        // Avoid a bug\n        if (+leaguesTeam.slot_index === 1) {\n            const team = leaguesTeam;\n            (0,_store_team__WEBPACK_IMPORTED_MODULE_8__.savePlayerLeagueTeam)(team);\n        }\n    }\n    const selectButton = document.getElementById('btn-select-team');\n    selectButton?.addEventListener('click', () => {\n        if (localStorageGetItem('battle_type') === 'leagues') {\n            const selectedTeamElement = document.querySelector('.selected-team');\n            const selectedIndex = selectedTeamElement.dataset.teamIndex;\n            // Avoid a bug\n            if (+selectedIndex !== 1)\n                return;\n            const selectedTeam = teams_data[selectedIndex];\n            if (selectedTeam != null && selectedTeam.id_team != null && selectedTeam.theme != null) {\n                const team = selectedTeam;\n                (0,_store_team__WEBPACK_IMPORTED_MODULE_8__.savePlayerLeagueTeam)(team);\n            }\n        }\n    }, true);\n}\nlet fetchedWindow = null;\nasync function fetchTeamsPage() {\n    fetchedWindow ??= (async () => {\n        const teamsPage = await fetch('teams.html');\n        const teamsHtml = await teamsPage.text();\n        const teams_data = JSON.parse(teamsHtml.match(/var\\s+teams_data\\s*=\\s*(\\{.*?\\});/)?.[1]);\n        return { teams_data };\n    })();\n    return fetchedWindow;\n}\nlet playerLeagueTeam = null;\nasync function fetchPlayerLeaguesTeamFromTeams() {\n    playerLeagueTeam ??= (async () => {\n        const { referrer } = document;\n        if (['teams.html', 'leagues-pre-battle.html', 'league-battle.html'].some(e => referrer.includes(e))) {\n            const lastLeagueTeam = (0,_store_team__WEBPACK_IMPORTED_MODULE_8__.loadPlayerLeagueTeam)();\n            if (lastLeagueTeam != null)\n                return lastLeagueTeam;\n        }\n        try {\n            const teamsPageData = await fetchTeamsPage();\n            const teams_data = teamsPageData.teams_data;\n            const leaguesTeam = Object.values(teams_data).find((team) => team.selected_for_battle_type?.includes('leagues'));\n            if (leaguesTeam != null) {\n                (0,_store_team__WEBPACK_IMPORTED_MODULE_8__.savePlayerLeagueTeam)(leaguesTeam);\n                return leaguesTeam;\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return (0,_store_team__WEBPACK_IMPORTED_MODULE_8__.loadPlayerLeagueTeam)();\n    })();\n    return playerLeagueTeam;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/teams.ts?");

/***/ }),

/***/ "./src/page/tower-of-fame.ts":
/*!***********************************!*\
  !*** ./src/page/tower-of-fame.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TowerOfFamePage: () => (/* binding */ TowerOfFamePage),\n/* harmony export */   assertTowerOfFameWindow: () => (/* binding */ assertTowerOfFameWindow),\n/* harmony export */   fetchPlayerLeagueData: () => (/* binding */ fetchPlayerLeagueData)\n/* harmony export */ });\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _data_booster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/booster */ \"./src/data/booster.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n/* harmony import */ var _interop_hh_plus_plus__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../interop/hh-plus-plus */ \"./src/interop/hh-plus-plus.ts\");\n/* harmony import */ var _interop_hh_plus_plus_league__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../interop/hh-plus-plus-league */ \"./src/interop/hh-plus-plus-league.ts\");\n/* harmony import */ var _dom_booster_simulator_popup__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../dom/booster-simulator-popup */ \"./src/dom/booster-simulator-popup.ts\");\n/* harmony import */ var _leagues_pre_battle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./leagues-pre-battle */ \"./src/page/leagues-pre-battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _teams__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./teams */ \"./src/page/teams.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertTowerOfFameWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_9__.assertGameWindow)(window);\n    const { opponents_list } = window;\n    if (opponents_list == null)\n        throw new Error('opponents_list is not found.');\n}\nasync function TowerOfFamePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_7__.checkPage)('/tower-of-fame.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.beforeGameInited)();\n    assertTowerOfFameWindow(window);\n    const { opponents_list, Hero } = window;\n    updateBoosters(window);\n    changePowerSortToSimSort(window);\n    updateOpponentTeam();\n    async function changePowerSortToSimSort(window) {\n        const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n        if (!config.doSimulateLeagueTable)\n            return;\n        const playerId = Hero.infos.id;\n        const player = opponents_list.find((e) => +e.player.id_fighter === playerId);\n        if (player == null)\n            return;\n        const playerLeagueData = await fetchPlayerLeagueData(window);\n        const mythicBoosterMultiplier = playerLeagueData.leagueMultiplier;\n        const playerTeam = playerLeagueData.team;\n        if (mythicBoosterMultiplier == null || playerTeam == null)\n            return;\n        const opponents = opponents_list.filter((opponent) => +opponent.player.id_fighter !== playerId);\n        const unfoughtOpponents = opponents.filter(opponent => Object.values(opponent.match_history)[0].filter(e => e != null).length < 3);\n        const resultPromises = (config.doSimulateFoughtOpponents ? opponents : unfoughtOpponents).map(opponent => (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_2__.simulateFromTeams)('Points', playerTeam, opponent.player.team, mythicBoosterMultiplier).then(result => [opponent.player.id_fighter, result]));\n        const results = await Promise.all(resultPromises);\n        const resultMap = Object.fromEntries(results);\n        const replacePowerDataWithSimResult = () => {\n            opponents_list.forEach(opponent => {\n                opponent.power = resultMap[opponent.player.id_fighter]?.avgPoints ?? 0;\n            });\n            if (config.replaceHHLeaguesPlusPlus) {\n                opponents_list.forEach(opponent => {\n                    opponent.sim = {\n                        ...opponent.sim,\n                        forSim: {\n                            ...opponent.sim?.forSim,\n                            playerTeam,\n                            opponentTeam: opponent.player.team,\n                            mythicBoosterMultiplier,\n                        },\n                    };\n                });\n            }\n        };\n        replacePowerDataWithSimResult();\n        const expectedPoints = opponents_list.reduce((p, c) => {\n            const matchHistory = Object.values(c.match_history)[0];\n            if (!Array.isArray(matchHistory))\n                return p;\n            const matchResults = matchHistory.filter((e) => e != null);\n            const knownPoints = matchResults.reduce((p, c) => p + parseInt(c.match_points), 0);\n            const remainingChallenges = 3 - matchResults.length;\n            return p + knownPoints + c.power * remainingChallenges;\n        }, 0);\n        const numOpponents = opponents_list.length - 1;\n        const expectedAverage = expectedPoints / numOpponents / 3;\n        const sumPoints = results.reduce((p, c) => p + c[1].avgPoints, 0) * 3;\n        const averagePoints = sumPoints / results.length / 3;\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n        const $challengesHeader = $('.league_table .head-column[column=\"match_history_sorting\"] > span');\n        $challengesHeader.attr('tooltip', `Score expected: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.truncateSoftly)(expectedPoints, 1)}</em><br>Average: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.toLeaguePointsPerFight)(expectedAverage)}</em>`);\n        const $powerHeader = $('.league_table .head-column[column=\"power\"] > span');\n        $powerHeader.html($powerHeader.html().replace('Power', 'Sim'));\n        $powerHeader.attr('tooltip', `Sum: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.truncateSoftly)(sumPoints, 1)}</em><br>Average: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.toLeaguePointsPerFight)(averagePoints)}</em>`);\n        const leagueOpponents = opponents.map(e => {\n            return {\n                id: e.player.id_fighter,\n                team: e.player.team,\n                numChallenges: 3 - Object.values(e.match_history)[0].filter(e => e != null).length,\n                isBoosted: e.boosters.filter(e => +e.lifetime > window.server_now_ts).length > 0,\n                boosters: e.boosters,\n            };\n        });\n        const currentScore = +player.player_league_points;\n        const foughtCounts = leagueOpponents.reduce((p, c) => p + (3 - c.numChallenges), 0);\n        const popup = new _dom_booster_simulator_popup__WEBPACK_IMPORTED_MODULE_12__.BoosterSimulatorPopup(playerTeam, leagueOpponents, currentScore, foughtCounts);\n        const replacePowerViewWithSimResult = () => {\n            const powerColumnMap = {};\n            document.querySelectorAll('.data-row.body-row').forEach(row => {\n                const id = row.querySelector('[id-member]')?.getAttribute('id-member');\n                const column = row.querySelector('.data-column[column=power]');\n                if (id == null || column == null)\n                    return;\n                powerColumnMap[id] ??= [];\n                powerColumnMap[id].push(column);\n            });\n            opponents_list.forEach(opponent => {\n                const $columnContent = $('<div></div>').addClass('sim-column');\n                const opponentId = opponent.player.id_fighter;\n                const result = resultMap[opponentId];\n                if (result != null) {\n                    let mark = '';\n                    if (result.minPoints >= 25)\n                        mark = '<div class=\"vCheck_mix_icn sim-mark\"></div>';\n                    $columnContent\n                        .html(`${mark}${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.truncateSoftly)(result.avgPoints, 2)}`)\n                        .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_6__.getPointsColor)(result.avgPoints));\n                }\n                else {\n                    if (+opponentId === playerId &&\n                        config.addBoosterSimulator &&\n                        config.addBoosterSimulatorToLeagueTable) {\n                        const iconButton = $('<div class=\"sim-icon-button sim-icon-ame\"></div>').attr('tooltip', 'Booster simulator');\n                        iconButton.on('click', () => {\n                            popup.toggle();\n                        });\n                        $columnContent.append(iconButton);\n                    }\n                    else {\n                        $columnContent.text('-');\n                    }\n                }\n                $(powerColumnMap[opponentId]).empty().append($columnContent);\n            });\n        };\n        replacePowerViewWithSimResult();\n        function replaceHHLaguesPlusPlus() {\n            (0,_interop_hh_plus_plus__WEBPACK_IMPORTED_MODULE_10__.getHHPlusPlus)().then(HHPlusPlus => {\n                if (HHPlusPlus == null)\n                    return;\n                const opponent_fighter = window.opponent_fighter;\n                if (opponent_fighter?.sim != null) {\n                    new HHPlusPlus.League().display(opponent_fighter.sim);\n                }\n            });\n        }\n        if (config.replaceHHLeaguesPlusPlus)\n            replaceHHLaguesPlusPlus();\n        const header = $powerHeader[0];\n        if (header != null) {\n            const observer = new MutationObserver(() => {\n                replacePowerDataWithSimResult();\n                replacePowerViewWithSimResult();\n                if (config.replaceHHLeaguesPlusPlus)\n                    replaceHHLaguesPlusPlus();\n            });\n            observer.observe(header, { childList: true, subtree: true });\n        }\n        const table = document.querySelector('.league_table .data-list');\n        if (table != null) {\n            const observer = new MutationObserver(() => {\n                replacePowerDataWithSimResult();\n                replacePowerViewWithSimResult();\n            });\n            observer.observe(table, { childList: true });\n        }\n    }\n}\nfunction updateBoosters(window) {\n    const { Hero, opponents_list, server_now_ts } = window;\n    const playerId = Hero.infos.id;\n    const player = opponents_list.find(e => +e.player.id_fighter === playerId);\n    if (player == null)\n        return;\n    const activeBoosters = player.boosters.filter(e => +e.lifetime > server_now_ts || +e.usages_remaining > 0);\n    const oldBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.loadBoosterData)();\n    const newBoosterData = (0,_data_booster__WEBPACK_IMPORTED_MODULE_1__.getBoosterData)(activeBoosters);\n    newBoosterData.mythic = {\n        ...oldBoosterData.mythic,\n        // leagues: 1, // BUGFIX\n        ...newBoosterData.mythic,\n    };\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.saveBoosterData)(newBoosterData);\n}\nasync function updateOpponentTeam() {\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        const update = () => {\n            const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n            if (config.replaceHHLeaguesPlusPlus) {\n                const opponentTeam = (0,_interop_hh_plus_plus_league__WEBPACK_IMPORTED_MODULE_11__.getLeaguesPlusPlusOpponentTeam)();\n                if (opponentTeam != null) {\n                    (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.saveOpponentTeamData)({\n                        battleType: 'leagues',\n                        opponentId: '',\n                        team: opponentTeam,\n                    });\n                    return;\n                }\n            }\n            (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.saveOpponentTeamData)(null);\n        };\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nlet battleData = null;\nasync function fetchBattleData(window) {\n    battleData ??= (async () => {\n        try {\n            const { opponents_list } = window;\n            const id = opponents_list.filter(e => {\n                const history = Object.values(e.match_history)[0];\n                return Array.isArray(history) && history.some(e => e === null);\n            })[0]?.player.id_fighter;\n            if (id != null) {\n                const { hero_data, opponent_fighter } = await (0,_leagues_pre_battle__WEBPACK_IMPORTED_MODULE_13__.fetchLeaguesPreBattlePage)(id);\n                const leaguesTeam = hero_data.team;\n                if (leaguesTeam != null) {\n                    (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.savePlayerLeagueTeam)(leaguesTeam);\n                    return { player: hero_data, opponent: opponent_fighter.player };\n                }\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return null;\n    })();\n    return battleData;\n}\nlet playerLeagueData = null;\nasync function fetchPlayerLeagueData(window) {\n    playerLeagueData ??= (async () => {\n        let team = undefined;\n        let leagueMultiplier = undefined;\n        const { referrer } = document;\n        // Avoid a bug\n        // if (['teams.html', 'leagues-pre-battle.html', 'league-battle.html'].some(e => referrer.includes(e))) {\n        if (['leagues-pre-battle.html', 'league-battle.html'].some(e => referrer.includes(e))) {\n            team = (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.loadPlayerLeagueTeam)();\n            leagueMultiplier = (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.loadMythicBoosterBonus)().leagues ?? null;\n            if (team != null && leagueMultiplier != null) {\n                return { team, leagueMultiplier };\n            }\n        }\n        try {\n            const battleData = await fetchBattleData(window);\n            if (battleData != null) {\n                const { player, opponent } = battleData;\n                const { team } = player;\n                (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.savePlayerLeagueTeam)(team);\n                const leagueMultiplier = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_14__.calcMythicBoosterMultiplierFromFighters)(player, opponent);\n                const oldMythicBoosters = (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.loadMythicBoosterBonus)();\n                const newMythicBoosters = {\n                    ...oldMythicBoosters,\n                    leagues: leagueMultiplier,\n                };\n                (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.saveMythicBoosterBonus)(newMythicBoosters);\n                return { team, leagueMultiplier };\n            }\n            else {\n                team = (await (0,_teams__WEBPACK_IMPORTED_MODULE_15__.fetchPlayerLeaguesTeamFromTeams)()) ?? team;\n                if (team != null)\n                    (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.savePlayerLeagueTeam)(team);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        {\n            if (team === undefined)\n                team = (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.loadPlayerLeagueTeam)();\n            if (leagueMultiplier === undefined)\n                leagueMultiplier = (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.loadMythicBoosterBonus)().leagues ?? null;\n            return { team, leagueMultiplier };\n        }\n    })();\n    return playerLeagueData;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/tower-of-fame.ts?");

/***/ }),

/***/ "./src/page/troll-pre-battle.ts":
/*!**************************************!*\
  !*** ./src/page/troll-pre-battle.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TrollPreBattlePage: () => (/* binding */ TrollPreBattlePage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\n\nfunction assertTrollPreBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_10__.assertGameWindow)(window);\n    const { hero_data, opponent_fighter } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function TrollPreBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_9__.checkPage)('/troll-pre-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.beforeGameInited)();\n    assertTrollPreBattleWindow(window);\n    const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_2__.getConfig)();\n    updateMythicBooster(window);\n    saveOpponentTeam(window);\n    if (config.doSimulateTroll)\n        addChance(window);\n}\nfunction updateMythicBooster(window) {\n    const { hero_data, opponent_fighter } = window;\n    const multiplier = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_4__.calcMythicBoosterMultiplierFromFighters)(hero_data, opponent_fighter.player);\n    const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.loadMythicBoosterBonus)();\n    mythicBoosterData.trolls = multiplier;\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.saveMythicBoosterBonus)(mythicBoosterData);\n}\nasync function saveOpponentTeam(window) {\n    const { opponent_fighter, localStorageSetItem } = window;\n    const opponentId = (0,_utils_page__WEBPACK_IMPORTED_MODULE_9__.getOpponentIdFromUrl)();\n    const opponentTeam = opponent_fighter.player.team;\n    const update = () => {\n        localStorageSetItem('battle_type', 'trolls');\n        localStorageSetItem('troll_id', opponentId);\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_7__.saveOpponentTeamData)({\n            battleType: 'trolls',\n            opponentId,\n            team: opponentTeam,\n        });\n    };\n    update();\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nasync function addChance(window) {\n    const { hero_data, opponent_fighter } = window;\n    const { player, opponent } = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_5__.calcBattlersFromFighters)(hero_data, opponent_fighter.player);\n    const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_3__.simulateFromBattlers)('Chance', player, opponent);\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_1__.ChanceView();\n    chanceView.updateAsync(resultPromise);\n    chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n    $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/troll-pre-battle.ts?");

/***/ }),

/***/ "./src/simulator/battle.ts":
/*!*********************************!*\
  !*** ./src/simulator/battle.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simulateFromBattlers: () => (/* binding */ simulateFromBattlers),\n/* harmony export */   simulateFromFighters: () => (/* binding */ simulateFromFighters),\n/* harmony export */   simulateFromTeams: () => (/* binding */ simulateFromTeams)\n/* harmony export */ });\n/* harmony import */ var _fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _team__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./team */ \"./src/simulator/team.ts\");\n\n\nconst workerScript = (() => {\n    const simulatorMap = {\n        FastChance: simulateFastChance,\n        FastPoints: simulateFastPoints,\n        Chance: simulateChance,\n        Points: simulatePoints,\n        Standard: simulateStandard,\n        Full: simulateFull,\n    };\n    self.addEventListener('message', e => {\n        const { id, type, args } = e.data;\n        try {\n            const f = simulatorMap[type];\n            const ret = f(args[0], args[1]);\n            self.postMessage({ id, ret });\n        }\n        catch (error) {\n            self.postMessage({ id, error });\n        }\n    });\n    function simulateFastChance(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        return Math.max(0, Math.min(1, result));\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            return 1;\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            return 0;\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return xResult * xChance + yResult * yChance;\n        }\n    }\n    function simulateFastPoints(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        return Math.max(3, Math.min(25, result));\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            return Math.ceil((10 * playerEgo) / playerMaxEgo) + 15;\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            return Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo) + 3;\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return xResult * xChance + yResult * yChance;\n        }\n    }\n    function simulateChance(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        result.chance = Math.max(0, Math.min(1, result.chance));\n        return result;\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            return {\n                chance: 1,\n                alwaysWin: true,\n                neverWin: false,\n            };\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            return {\n                chance: 0,\n                alwaysWin: false,\n                neverWin: true,\n            };\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return {\n                chance: xResult.chance * xChance + yResult.chance * yChance,\n                alwaysWin: xResult.alwaysWin && yResult.alwaysWin,\n                neverWin: xResult.neverWin && yResult.neverWin,\n            };\n        }\n    }\n    function simulatePoints(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        result.avgPoints = Math.max(result.minPoints, Math.min(25, result.avgPoints));\n        return result;\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            const points = Math.ceil((10 * playerEgo) / playerMaxEgo) + 15;\n            return createResult(points);\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            const points = Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo) + 3;\n            return createResult(points);\n        }\n        function createResult(points) {\n            return {\n                avgPoints: points,\n                minPoints: points,\n            };\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return {\n                avgPoints: xResult.avgPoints * xChance + yResult.avgPoints * yChance,\n                minPoints: Math.min(xResult.minPoints, yResult.minPoints),\n            };\n        }\n    }\n    function simulateStandard(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        result.chance = Math.max(0, Math.min(1, result.chance));\n        result.avgPoints = Math.max(result.minPoints, Math.min(result.maxPoints, result.avgPoints));\n        return result;\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            const points = Math.ceil((10 * playerEgo) / playerMaxEgo) + 15;\n            return createResult(1, true, false, points);\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            const points = Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo) + 3;\n            return createResult(0, false, true, points);\n        }\n        function createResult(chance, alwaysWin, neverWin, points) {\n            return {\n                chance,\n                alwaysWin,\n                neverWin,\n                avgPoints: points,\n                minPoints: points,\n                maxPoints: points,\n            };\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return {\n                chance: xResult.chance * xChance + yResult.chance * yChance,\n                alwaysWin: xResult.alwaysWin && yResult.alwaysWin,\n                neverWin: xResult.neverWin && yResult.neverWin,\n                avgPoints: xResult.avgPoints * xChance + yResult.avgPoints * yChance,\n                minPoints: Math.min(xResult.minPoints, yResult.minPoints),\n                maxPoints: Math.max(xResult.maxPoints, yResult.maxPoints),\n            };\n        }\n    }\n    function simulateFull(player, opponent) {\n        const compressedResult = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        const sumProbability = compressedResult.pointsTable.reduce((p, c) => p + c);\n        const pointsTable = [0, 0, 0, ...compressedResult.pointsTable.map(p => p / sumProbability)];\n        const [loss, win] = [\n            [3, 14],\n            [15, 26],\n        ].map(args => pointsTable.slice(...args).reduce((p, c) => p + c));\n        const minPoints = compressedResult.minPoints + 3;\n        const maxPoints = compressedResult.maxPoints + 3;\n        const alwaysWin = minPoints >= 15;\n        const neverWin = maxPoints < 15;\n        const avgPoints = pointsTable.reduce((p, c, i) => p + c * i, 0);\n        return {\n            chance: win / (win + loss),\n            alwaysWin,\n            neverWin,\n            avgPoints,\n            minPoints,\n            maxPoints,\n            pointsTable,\n        };\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            const points = Math.ceil((10 * playerEgo) / playerMaxEgo) + 12; // (-3): [15, 25] => [12, 22]\n            return createResult(points);\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            const points = Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo); // (-3): [3, 13] => [0, 10]\n            return createResult(points);\n        }\n        function createResult(points) {\n            const pointsTable = Array(23).fill(0);\n            pointsTable[points] = 1;\n            return {\n                minPoints: points,\n                maxPoints: points,\n                pointsTable,\n            };\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            const minPoints = Math.min(xResult.minPoints, yResult.minPoints);\n            const maxPoints = Math.max(xResult.maxPoints, yResult.maxPoints);\n            const xPointsTable = xResult.pointsTable;\n            const yPointsTable = yResult.pointsTable;\n            const pointsTable = Array(23).fill(0);\n            for (let i = minPoints; i <= maxPoints; i++) {\n                pointsTable[i] = xPointsTable[i] * xChance + yPointsTable[i] * yChance;\n            }\n            return {\n                minPoints,\n                maxPoints,\n                pointsTable,\n            };\n        }\n    }\n    function simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult) {\n        const playerData = { ...player, win: createPlayerWinResult };\n        const opponentData = { ...opponent, win: createOpponentWinResult };\n        const result = attack(playerData, player.ego, player.attack, player.defense, 0, opponentData, opponent.ego, opponent.attack, opponent.defense, 0);\n        return result;\n        function attack(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill) {\n            attackerAttack *= attacker.attackMultiplier;\n            defenderDefense *= attacker.defenseMultiplier;\n            const baseDamage = Math.max(0, Math.floor(attackerAttack - defenderDefense));\n            const baseResult = hit(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, baseDamage);\n            const critDamage = baseDamage * attacker.critMultiplier;\n            const critResult = hit(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, critDamage);\n            return mergeResult(baseResult, attacker.baseHitChance, critResult, attacker.critHitChance);\n        }\n        function hit(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, damage) {\n            const roundedDamage = Math.ceil(damage);\n            // Check defender shield\n            let shieldDamage = 0;\n            if (defender.shield && 1 <= defenderSkill && defenderSkill <= defender.shieldEndurance) {\n                const remainingShieald = defender.shieldEndurance - (defenderSkill - 1);\n                shieldDamage = Math.min(roundedDamage, remainingShieald);\n                defenderSkill += shieldDamage;\n            }\n            // Damage defender ego\n            const egoDamage = roundedDamage - shieldDamage;\n            defenderEgo -= Math.ceil(egoDamage);\n            // Heal attacker ego\n            attackerEgo += Math.ceil(egoDamage * attacker.healing);\n            attackerEgo = Math.min(attackerEgo, attacker.ego);\n            // Check attacker execution\n            // Shield will have no effect on execution.\n            if (attacker.execute && defenderEgo <= defender.deathThreshold) {\n                defenderEgo = 0;\n            }\n            // Attacker win\n            if (defenderEgo <= 0)\n                return attacker.win(attackerEgo, attacker.ego);\n            // Check defender reflection\n            if (defender.reflect && 1 <= defenderSkill && defenderSkill <= 2) {\n                // Skip reflection while stunned\n                const isDefenderStunned = attacker.stun && attackerSkill == 1;\n                if (!isDefenderStunned) {\n                    defenderSkill++;\n                    // Defender does not have shield and reflect at the same time, so shieldDamage is not required.\n                    // Reflected damage daes not include execution damage now.\n                    const reflectedDamage = Math.ceil(egoDamage * defender.reflect);\n                    // Check attacker shield\n                    let reflectedDamageToShield = 0;\n                    if (attacker.shield && 1 <= attackerSkill && attackerSkill <= attacker.shieldEndurance) {\n                        const remainingAttackerShieald = attacker.shieldEndurance - (attackerSkill - 1);\n                        reflectedDamageToShield = Math.min(reflectedDamage, remainingAttackerShieald);\n                        attackerSkill += reflectedDamageToShield;\n                    }\n                    // Damage attacker ego from reflection\n                    const reflectedDamageToEgo = reflectedDamage - reflectedDamageToShield;\n                    attackerEgo -= reflectedDamageToEgo;\n                    if (attackerEgo <= 0) {\n                        // TODO: I suspect the game do nothing.\n                    }\n                }\n            }\n            // Check if attacker stun triggerd (defender is stunned)\n            if (attacker.stun && attackerSkill === 1) {\n                attackerSkill++;\n                // Skip defender attack\n                return attack(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill);\n            }\n            // Trigger attacker reflect\n            if (attacker.reflect && attackerSkill === 0)\n                attackerSkill = 1;\n            // Trigger attacker shield\n            if (attacker.shield && attackerSkill === 0)\n                attackerSkill = 1;\n            // Next turn (defender's attack)\n            const result = attack(defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill);\n            // Check attacker stun\n            if (attacker.stun && attackerSkill === 0) {\n                attackerSkill = 1;\n                const stunningResult = attack(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill);\n                return mergeResult(stunningResult, attacker.stun, result, 1 - attacker.stun);\n            }\n            return result;\n        }\n    }\n})\n    .toString()\n    .match(/{.+}/s)[0];\nconst workerBlob = new Blob([workerScript], { type: 'text/javascript' });\nconst workerURL = URL.createObjectURL(workerBlob);\nconst maxWorkers = navigator?.hardwareConcurrency ?? 1;\nconst workerList = [];\nconst waiterMap = new Map();\nlet workerIndex = 0;\nlet workerTaskIndex = 0;\nfunction getWorker() {\n    let worker = workerList[workerIndex];\n    if (worker == null) {\n        worker = new Worker(workerURL);\n        const onMessage = ({ data }) => {\n            const { id, ret, error } = data;\n            if (ret != null) {\n                waiterMap.get(id).resolve(ret);\n            }\n            else {\n                waiterMap.get(id).reject(error);\n            }\n            waiterMap.delete(id);\n        };\n        const onError = (error) => {\n            throw error;\n        };\n        worker.addEventListener('message', onMessage);\n        worker.addEventListener('messageerror', onError);\n        worker.addEventListener('error', onError);\n        workerList[workerIndex] = worker;\n    }\n    workerIndex = (workerIndex + 1) % maxWorkers;\n    return worker;\n}\nasync function workerRun(type, args) {\n    const id = workerTaskIndex++;\n    const message = { id, type, args };\n    getWorker().postMessage(message);\n    return new Promise((resolve, reject) => {\n        waiterMap.set(id, { resolve, reject });\n    });\n}\nasync function simulateFromBattlers(type, player, opponent) {\n    return await workerRun(type, [player, opponent]);\n}\nasync function simulateFromFighters(type, playerFighter, opponentFighter) {\n    const player = (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.calcBattlerFromFighters)(playerFighter, opponentFighter);\n    const opponent = (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.calcBattlerFromFighters)(opponentFighter, playerFighter);\n    return await simulateFromBattlers(type, player, opponent);\n}\nasync function simulateFromTeams(type, playerTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n    const player = (0,_team__WEBPACK_IMPORTED_MODULE_1__.calcBattlerFromTeams)(playerTeam, opponentTeam, mythicBoosterMultiplier);\n    const opponent = (0,_team__WEBPACK_IMPORTED_MODULE_1__.calcBattlerFromTeams)(opponentTeam, playerTeam);\n    return await simulateFromBattlers(type, player, opponent);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/battle.ts?");

/***/ }),

/***/ "./src/simulator/booster.ts":
/*!**********************************!*\
  !*** ./src/simulator/booster.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoosterKeys: () => (/* binding */ BoosterKeys),\n/* harmony export */   calcMythicBoosterMultiplierFromFighters: () => (/* binding */ calcMythicBoosterMultiplierFromFighters),\n/* harmony export */   simulateChanceForBoosterCombinationWithAME: () => (/* binding */ simulateChanceForBoosterCombinationWithAME),\n/* harmony export */   simulateChanceForBoosterCombinationWithHeadband: () => (/* binding */ simulateChanceForBoosterCombinationWithHeadband),\n/* harmony export */   simulateChanceForSkillCombinationWithAME: () => (/* binding */ simulateChanceForSkillCombinationWithAME),\n/* harmony export */   simulateChanceForSkillCombinationWithHeadband: () => (/* binding */ simulateChanceForSkillCombinationWithHeadband),\n/* harmony export */   simulateGinsengCaracs: () => (/* binding */ simulateGinsengCaracs),\n/* harmony export */   simulateLeagueTable: () => (/* binding */ simulateLeagueTable),\n/* harmony export */   simulatePointsForBoosterCombinationWithAME: () => (/* binding */ simulatePointsForBoosterCombinationWithAME),\n/* harmony export */   simulatePointsForSkillCombinationWithAME: () => (/* binding */ simulatePointsForSkillCombinationWithAME)\n/* harmony export */ });\n/* harmony import */ var _data_booster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/booster */ \"./src/data/booster.ts\");\n/* harmony import */ var _data_fighter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/fighter */ \"./src/data/fighter.ts\");\n/* harmony import */ var _data_hero__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/hero */ \"./src/data/hero.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _page_edit_team__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../page/edit-team */ \"./src/page/edit-team.ts\");\n/* harmony import */ var _store_hero__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/hero */ \"./src/store/hero.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _battle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _team__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./team */ \"./src/simulator/team.ts\");\n\n\n\n\n\n\n\n\n\n\nfunction calcMythicBoosterMultiplierFromFighters(playerFighter, opponentFighter) {\n    const counterBonus = (0,_team__WEBPACK_IMPORTED_MODULE_9__.calcCounterBonus)(playerFighter.team, opponentFighter.team);\n    const percentage = Math.round((100 * playerFighter.damage) / playerFighter.team.caracs.damage / counterBonus);\n    return percentage / 100;\n}\nfunction simulateGinsengCaracs(hero, armorCaracs) {\n    const heroClass = hero.infos.class;\n    const haremEndurance = hero.infos.harem_endurance;\n    const primaryKey = _data_hero__WEBPACK_IMPORTED_MODULE_2__.HeroCaracsKeys[(heroClass + 2) % 3];\n    const secondaryKey = _data_hero__WEBPACK_IMPORTED_MODULE_2__.HeroCaracsKeys[(heroClass + 1) % 3];\n    const tertialyKey = _data_hero__WEBPACK_IMPORTED_MODULE_2__.HeroCaracsKeys[(heroClass + 0) % 3];\n    const getPrimary = (caracs) => caracs[primaryKey];\n    const getSecondarySum = (caracs) => caracs[secondaryKey] + caracs[tertialyKey];\n    const clubBonus = getClubBonus(hero);\n    const levelCaracs = getLevelBasedCaracs(hero);\n    const marketCaracs = getMarketBoughtCaracs(hero);\n    const baseCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.addHeroCaracs)(levelCaracs, marketCaracs);\n    const sumCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.addHeroCaracs)(baseCaracs, armorCaracs);\n    const xClubBonus = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.addHeroCaracs)(clubBonus, 1);\n    const bonusedBaseCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.multiplyHeroCaracs)(baseCaracs, xClubBonus);\n    const bonusedArmorCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.multiplyHeroCaracs)(armorCaracs, xClubBonus);\n    return [...Array(5)].map((_, ginseng) => {\n        const ginsengBonus = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)(Array(3).fill(0.06 * ginseng));\n        const caracsFromGinseng = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.multiplyHeroCaracs)(sumCaracs, (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.multiplyHeroCaracs)(xClubBonus, ginsengBonus));\n        let endurance = armorCaracs.endurance;\n        endurance += getPrimary(bonusedBaseCaracs) * 4;\n        endurance *= xClubBonus.endurance;\n        endurance += getPrimary(bonusedArmorCaracs) * 4;\n        endurance *= xClubBonus.endurance;\n        endurance += getPrimary(caracsFromGinseng) * 4;\n        endurance += haremEndurance * xClubBonus.endurance * (1 + clubBonus.endurance * xClubBonus.endurance);\n        let harmony = armorCaracs.chance;\n        harmony += getSecondarySum(bonusedBaseCaracs) / 2;\n        harmony *= xClubBonus.chance;\n        harmony += getSecondarySum(bonusedArmorCaracs) / 2;\n        harmony *= xClubBonus.chance;\n        harmony += getSecondarySum(caracsFromGinseng) / 2;\n        const totalCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.multiplyHeroCaracs)(sumCaracs, (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.addHeroCaracs)(xClubBonus, ginsengBonus));\n        totalCaracs.endurance = endurance;\n        totalCaracs.chance = harmony;\n        const finalCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.truncateHeroCaracs)(totalCaracs);\n        return {\n            damage: getPrimary(finalCaracs),\n            defense: getSecondarySum(finalCaracs) * 0.25,\n            ego: finalCaracs.endurance,\n            chance: finalCaracs.chance,\n        };\n    });\n}\nfunction getLevelBasedCaracs(hero) {\n    const infos = hero.infos;\n    const level = infos.level;\n    const heroClass = infos.class;\n    const perLevel = [5, 7, 9, 5, 7];\n    return (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)([\n        level * perLevel[3 - heroClass], // Hardcore\n        level * perLevel[4 - heroClass], // Charm\n        level * perLevel[5 - heroClass], // Know-how\n    ]);\n}\nfunction getMarketBoughtCaracs(hero) {\n    return (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)(hero.infos);\n}\nfunction getClubBonus(hero) {\n    const clubUpgrades = hero.club?.upgrades_data;\n    if (clubUpgrades == null)\n        return (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)({});\n    return (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)(_data_hero__WEBPACK_IMPORTED_MODULE_2__.ClubUpgradesKeys.map(key => clubUpgrades[key].level / 200));\n}\nasync function getTeamParams(team) {\n    if (team.id_team == null)\n        return;\n    const teamId = team.id_team;\n    const teamParamsList = (0,_store_team__WEBPACK_IMPORTED_MODULE_6__.loadTeamParams)();\n    const teamParams = teamParamsList.find(e => e.teamId === +teamId);\n    if (teamParams?.caracs != null && (0,_data_fighter__WEBPACK_IMPORTED_MODULE_1__.equalsFighterCaracs)(teamParams.caracs, team.caracs)) {\n        return teamParams;\n    }\n    if (window.Hero == null)\n        return;\n    return await (0,_page_edit_team__WEBPACK_IMPORTED_MODULE_4__.fetchTeamParams)(+teamId, window.Hero, window.server_now_ts);\n}\nconst BoosterKeys = ['ginseng', 'jujubes', 'chlorella', 'cordyceps', 'mythic'];\nfunction calcBoostedTeam(baseTeam, teamParams, ginsengCaracs, boosterCounts) {\n    const { ginseng, jujubes, chlorella, cordyceps } = boosterCounts;\n    const heroCaracs = ginsengCaracs[ginseng];\n    const caracs = new _data_fighter__WEBPACK_IMPORTED_MODULE_1__.FighterCaracsCalculator(heroCaracs)\n        .multiply(teamParams.multiplier)\n        .add(teamParams.addend)\n        .multiply((0,_data_fighter__WEBPACK_IMPORTED_MODULE_1__.toFighterCaracsBonus)({\n        damage: 1 + 0.1 * cordyceps,\n        ego: 1 + 0.1 * chlorella,\n        chance: 1 + 0.2 * jujubes,\n    }))\n        .round()\n        .result();\n    return {\n        ...baseTeam,\n        caracs,\n    };\n}\nfunction calcSkilledTeam(baseTeam, skill) {\n    const skills = { ...baseTeam.girls[0].skills };\n    [11, 12, 13, 14].forEach(e => {\n        delete skills[e];\n    });\n    skills[skill.skill.id_skill] = skill;\n    const girls = [...baseTeam.girls];\n    girls[0] = { ...baseTeam.girls[0], skills };\n    return { ...baseTeam, girls };\n}\nlet boosterCombinations = null;\nfunction getBoosterCombinations() {\n    if (boosterCombinations == null) {\n        const { simulateGinseng, simulateJujubes, simulateChlorella, simulateCordyceps } = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_3__.getConfig)();\n        boosterCombinations = [...Array(2)].flatMap((_, mythic) => [...Array(simulateCordyceps ? 5 : 1)].flatMap((_, cordyceps) => [...Array(simulateChlorella ? 5 - cordyceps : 1)].flatMap((_, chlorella) => [...Array(simulateJujubes ? 5 - cordyceps - chlorella : 1)].flatMap((_, jujubes) => {\n            const ginseng = 4 - cordyceps - chlorella - jujubes;\n            if (!simulateGinseng && ginseng > 0)\n                return [];\n            const counts = { ginseng, jujubes, chlorella, cordyceps, mythic };\n            const key = `${ginseng}${jujubes}${chlorella}${cordyceps}${mythic}`;\n            return { key, counts };\n        }))));\n    }\n    return boosterCombinations;\n}\nasync function simulateBoosterCombination(f) {\n    const boosterCombinations = getBoosterCombinations();\n    return Promise.all(boosterCombinations.map(async ({ counts }) => {\n        const result = await f(counts);\n        return { boosterCounts: counts, result };\n    }));\n}\nasync function simulateChanceForBoosterCombinationWithHeadband(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        throw new Error('Market data not found');\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        throw new Error('Team data not found');\n    return simulateBoosterCombination(async (boosterCounts) => {\n        const calculatedTeam = calcBoostedTeam(playerTeam, teamParams, ginsengCaracs, boosterCounts);\n        const mythicBoosterMultiplier = 1 + 0.25 * boosterCounts.mythic; // Headband\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_8__.simulateFromTeams)('FastChance', calculatedTeam, opponentTeam, mythicBoosterMultiplier);\n    });\n}\nasync function simulateChanceForBoosterCombinationWithAME(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        throw new Error('Market data not found');\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        throw new Error('Team data not found');\n    return simulateBoosterCombination(async (boosterCounts) => {\n        const calculatedTeam = calcBoostedTeam(playerTeam, teamParams, ginsengCaracs, boosterCounts);\n        const mythicBoosterMultiplier = 1 + 0.15 * boosterCounts.mythic; // AME\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_8__.simulateFromTeams)('FastChance', calculatedTeam, opponentTeam, mythicBoosterMultiplier);\n    });\n}\nasync function simulatePointsForBoosterCombinationWithAME(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        throw new Error('Market data not found');\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        throw new Error('Team data not found');\n    return simulateBoosterCombination(async (boosterCounts) => {\n        const calculatedTeam = calcBoostedTeam(playerTeam, teamParams, ginsengCaracs, boosterCounts);\n        const mythicBoosterMultiplier = 1 + 0.15 * boosterCounts.mythic; // AME\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_8__.simulateFromTeams)('FastPoints', calculatedTeam, opponentTeam, mythicBoosterMultiplier);\n    });\n}\nasync function simulateLeagueTable(playerTeam, opponents, cache, usePrediction) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        throw new Error('Market data not found');\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        throw new Error('Team data not found');\n    const boosterCombinations = getBoosterCombinations();\n    return await Promise.all(boosterCombinations.flatMap(booster => {\n        const calculatedTeam = calcBoostedTeam(playerTeam, teamParams, ginsengCaracs, booster.counts);\n        const mythicBoosterMultiplier = 1 + 0.15 * booster.counts.mythic; // AME\n        return opponents.map(async (e) => {\n            const key = [e.id, booster.key, usePrediction ? 'prediction' : 'original'].join('-');\n            let value = cache.get(key);\n            if (value == null) {\n                const predictedCaracs = { ...e.team.caracs };\n                if (usePrediction) {\n                    const bonus = (0,_data_booster__WEBPACK_IMPORTED_MODULE_0__.getBoosterData)(e.boosters)\n                        .normals.map(e => e.multiplier)\n                        .filter((e) => e != null)\n                        .reduce((p, c) => (0,_data_fighter__WEBPACK_IMPORTED_MODULE_1__.addFighterCaracs)(p, c), (0,_data_fighter__WEBPACK_IMPORTED_MODULE_1__.toFighterCaracs)({}));\n                    predictedCaracs.damage /= 1 + bonus.damage / 100;\n                    predictedCaracs.ego /= 1 + bonus.ego / 100;\n                    predictedCaracs.chance /= 1 + bonus.chance / 100;\n                }\n                const predictedTeam = {\n                    ...e.team,\n                    caracs: predictedCaracs,\n                };\n                value = {\n                    boosterKey: booster.key,\n                    boosterCounts: booster.counts,\n                    opponentId: e.id,\n                    challenges: e.numChallenges,\n                    result: (0,_battle__WEBPACK_IMPORTED_MODULE_8__.simulateFromTeams)('FastPoints', calculatedTeam, predictedTeam, mythicBoosterMultiplier),\n                };\n                cache.set(key, value);\n            }\n            const result = await value.result;\n            return { ...value, result };\n        });\n    }));\n}\nasync function simulateSkillCombination(f) {\n    const skillMap = {\n        11: { skillType: 'stun', levelPercentage: 7 },\n        12: { skillType: 'shield', levelPercentage: 8 },\n        13: { skillType: 'reflect', levelPercentage: 20 },\n        14: { skillType: 'execute', levelPercentage: 6 },\n    };\n    const create5thSkill = (id, level) => {\n        const { skillType, levelPercentage } = skillMap[id];\n        const percentage = level * levelPercentage;\n        return {\n            id_skill: id.toString(),\n            level: level.toString(),\n            skill: {\n                id_skill: id,\n                level,\n                percentage_value: percentage,\n                display_value_text: `${percentage}%`,\n                skill_type: skillType,\n            },\n        };\n    };\n    const skillLevelsToBeSimulated = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_3__.getConfig)().skillLevelsToBeSimulated;\n    if (skillLevelsToBeSimulated.length === 0)\n        return [];\n    return Promise.all([11, 12, 13, 14].map(async (skillId) => {\n        const results = await Promise.all(skillLevelsToBeSimulated.map(async (level) => {\n            const skill = create5thSkill(skillId, level);\n            const results = await simulateBoosterCombination(async (boosterCounts) => {\n                return f(boosterCounts, skill);\n            });\n            return { level, results };\n        }));\n        const skillName = (0,_utils_string__WEBPACK_IMPORTED_MODULE_7__.capitalize)(skillMap[skillId].skillType);\n        return { skillName, results };\n    }));\n}\nasync function simulateChanceForSkillCombinationWithHeadband(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        throw new Error('Market data not found');\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        throw new Error('Team data not found');\n    return simulateSkillCombination(async (boosterCounts, skill) => {\n        const boostedTeam = calcBoostedTeam(playerTeam, teamParams, ginsengCaracs, boosterCounts);\n        const skilledTeam = calcSkilledTeam(boostedTeam, skill);\n        const mythicBoosterMultiplier = 1 + 0.25 * boosterCounts.mythic; // Headband\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_8__.simulateFromTeams)('FastChance', skilledTeam, opponentTeam, mythicBoosterMultiplier);\n    });\n}\nasync function simulateChanceForSkillCombinationWithAME(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        throw new Error('Market data not found');\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        throw new Error('Team data not found');\n    return simulateSkillCombination(async (boosterCounts, skill) => {\n        const boostedTeam = calcBoostedTeam(playerTeam, teamParams, ginsengCaracs, boosterCounts);\n        const skilledTeam = calcSkilledTeam(boostedTeam, skill);\n        const mythicBoosterMultiplier = 1 + 0.15 * boosterCounts.mythic; // AME\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_8__.simulateFromTeams)('FastChance', skilledTeam, opponentTeam, mythicBoosterMultiplier);\n    });\n}\nasync function simulatePointsForSkillCombinationWithAME(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        throw new Error('Market data not found');\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        throw new Error('Team data not found');\n    return simulateSkillCombination(async (boosterCounts, skill) => {\n        const boostedTeam = calcBoostedTeam(playerTeam, teamParams, ginsengCaracs, boosterCounts);\n        const skilledTeam = calcSkilledTeam(boostedTeam, skill);\n        const mythicBoosterMultiplier = 1 + 0.15 * boosterCounts.mythic; // AME\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_8__.simulateFromTeams)('FastPoints', skilledTeam, opponentTeam, mythicBoosterMultiplier);\n    });\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/booster.ts?");

/***/ }),

/***/ "./src/simulator/fighter.ts":
/*!**********************************!*\
  !*** ./src/simulator/fighter.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcBattlerFromFighters: () => (/* binding */ calcBattlerFromFighters),\n/* harmony export */   calcBattlersFromFighters: () => (/* binding */ calcBattlersFromFighters)\n/* harmony export */ });\nfunction calcBattlerFromFighters(fighter, opponent) {\n    const { team } = fighter;\n    const { girls } = team;\n    const synergyBonuses = Object.fromEntries(team.synergies.map(e => [e.element.type, e.bonus_multiplier]));\n    let chance = (0.3 * fighter.chance) / (fighter.chance + opponent.chance);\n    chance += synergyBonuses.stone;\n    const chanceDominations = ['darkness', 'light', 'psychic'];\n    const opponentTeamTheme = opponent.team.theme;\n    team.theme_elements.forEach(e => {\n        if (chanceDominations.includes(e.type) && opponentTeamTheme.includes(e.domination)) {\n            chance += 0.2;\n        }\n    });\n    const getSkillPercentage = (id) => girls.map(e => e.skills[id]?.skill.percentage_value ?? 0).reduce((p, c) => p + c, 0) / 100;\n    const centerGirlSkills = girls[0]?.skills;\n    const get5thSkillPercentageFromGirl = (skills, id) => {\n        const skill = skills?.[id]?.skill;\n        return skill == null ? 0 : (skill.percentage_value ?? parseFloat(skill.display_value_text ?? 0)) / 100;\n    };\n    const get5thSkillPercentage = (id) => get5thSkillPercentageFromGirl(centerGirlSkills, id);\n    const ego = Math.ceil(fighter.remaining_ego);\n    const stun = get5thSkillPercentage(11);\n    const shield = get5thSkillPercentage(12);\n    const reflect = get5thSkillPercentage(13);\n    const execute = get5thSkillPercentage(14);\n    const opponentExecute = get5thSkillPercentageFromGirl(opponent.team.girls[0]?.skills, 14);\n    return {\n        attack: fighter.damage,\n        defense: fighter.defense,\n        ego,\n        baseHitChance: 1 - chance,\n        critHitChance: chance,\n        critMultiplier: 2 + synergyBonuses.fire,\n        healing: synergyBonuses.water,\n        attackMultiplier: 1 + getSkillPercentage(9),\n        defenseMultiplier: 1 + getSkillPercentage(10),\n        stun,\n        shield,\n        reflect,\n        execute,\n        shieldEndurance: Math.ceil(ego * shield),\n        deathThreshold: ego * opponentExecute,\n    };\n}\nfunction calcBattlersFromFighters(player, opponent) {\n    return {\n        player: calcBattlerFromFighters(player, opponent),\n        opponent: calcBattlerFromFighters(opponent, player),\n    };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/fighter.ts?");

/***/ }),

/***/ "./src/simulator/team.ts":
/*!*******************************!*\
  !*** ./src/simulator/team.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcBattlerFromTeams: () => (/* binding */ calcBattlerFromTeams),\n/* harmony export */   calcBattlersFromTeams: () => (/* binding */ calcBattlersFromTeams),\n/* harmony export */   calcCounterBonus: () => (/* binding */ calcCounterBonus)\n/* harmony export */ });\n/* harmony import */ var _fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fighter */ \"./src/simulator/fighter.ts\");\n\nfunction calcCounterBonus(fighterTeam, opponentTeam) {\n    const checklist = ['fire', 'nature', 'stone', 'sun', 'water'];\n    let multiplier = 1;\n    fighterTeam.theme_elements.forEach(e => {\n        if (opponentTeam.theme.includes(e.domination) && checklist.includes(e.domination)) {\n            multiplier += 0.1;\n        }\n    });\n    return multiplier;\n}\nfunction calcBattlerFromTeams(fighterTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n    const counterBonus = calcCounterBonus(fighterTeam, opponentTeam);\n    const damageMultiplier = counterBonus * mythicBoosterMultiplier;\n    const egoMultiplier = counterBonus;\n    const opponentSynergyBonuses = Object.fromEntries(opponentTeam.synergies.map(e => [e.element.type, e.bonus_multiplier]));\n    const defenseDecreasing = opponentSynergyBonuses.sun;\n    const caracs = fighterTeam.caracs;\n    return (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.calcBattlerFromFighters)({\n        damage: Math.ceil(caracs.damage * damageMultiplier),\n        defense: caracs.defense - Math.ceil(caracs.defense * defenseDecreasing),\n        remaining_ego: Math.ceil(caracs.ego * egoMultiplier),\n        chance: caracs.chance,\n        team: fighterTeam,\n    }, {\n        chance: opponentTeam.caracs.chance,\n        team: opponentTeam,\n    });\n}\nfunction calcBattlersFromTeams(playerTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n    return {\n        player: calcBattlerFromTeams(playerTeam, opponentTeam, mythicBoosterMultiplier),\n        opponent: calcBattlerFromTeams(opponentTeam, playerTeam),\n    };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/team.ts?");

/***/ }),

/***/ "./src/store/booster.ts":
/*!******************************!*\
  !*** ./src/store/booster.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadBoosterBonus: () => (/* binding */ loadBoosterBonus),\n/* harmony export */   loadBoosterData: () => (/* binding */ loadBoosterData),\n/* harmony export */   loadMythicBoosterBonus: () => (/* binding */ loadMythicBoosterBonus),\n/* harmony export */   saveBoosterData: () => (/* binding */ saveBoosterData),\n/* harmony export */   saveMythicBoosterBonus: () => (/* binding */ saveMythicBoosterBonus)\n/* harmony export */ });\n/* harmony import */ var _data_fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/fighter */ \"./src/data/fighter.ts\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/storage */ \"./src/utils/storage.ts\");\n\n\nfunction saveBoosterData(boosterData) {\n    (0,_utils_storage__WEBPACK_IMPORTED_MODULE_1__.setIntoLocalStorage)('HHBattleSimulator.BoosterData', {\n        normals: boosterData.normals,\n        mythic: boosterData.mythic,\n    });\n}\nfunction loadBoosterData() {\n    return (0,_utils_storage__WEBPACK_IMPORTED_MODULE_1__.getFromLocalStorage)('HHBattleSimulator.BoosterData', {});\n}\nfunction saveMythicBoosterBonus(mythic) {\n    const boosterData = loadBoosterData();\n    boosterData.mythic = mythic;\n    saveBoosterData(boosterData);\n}\nfunction loadMythicBoosterBonus() {\n    return loadBoosterData().mythic ?? {};\n}\nfunction loadBoosterBonus(server_now_ts) {\n    const { normals } = loadBoosterData();\n    if (normals == null)\n        return null;\n    const multiplier = new _data_fighter__WEBPACK_IMPORTED_MODULE_0__.FighterCaracsCalculator();\n    const addend = new _data_fighter__WEBPACK_IMPORTED_MODULE_0__.FighterCaracsCalculator();\n    normals.forEach(e => {\n        if (e.lifetime < server_now_ts)\n            return;\n        if (e.multiplier != null)\n            multiplier.add(e.multiplier);\n        if (e.addend != null)\n            addend.add(e.addend);\n    });\n    return {\n        multiplier: multiplier.divide(100).add(1).result(),\n        addend: addend.result(),\n    };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/booster.ts?");

/***/ }),

/***/ "./src/store/hero.ts":
/*!***************************!*\
  !*** ./src/store/hero.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadClassBonus: () => (/* binding */ loadClassBonus),\n/* harmony export */   loadGinsengCaracs: () => (/* binding */ loadGinsengCaracs),\n/* harmony export */   saveClassBonus: () => (/* binding */ saveClassBonus),\n/* harmony export */   saveGinsengCaracs: () => (/* binding */ saveGinsengCaracs)\n/* harmony export */ });\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/storage */ \"./src/utils/storage.ts\");\n\nconst GinsengCaracsVersion = 1;\nfunction saveHeroData(boosterData) {\n    (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.setIntoLocalStorage)('HHBattleSimulator.HeroData', {\n        classBonus: boosterData.classBonus,\n        ginsengCaracs: boosterData.ginsengCaracs,\n    });\n}\nfunction loadHeroData() {\n    return (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.getFromLocalStorage)('HHBattleSimulator.HeroData', {});\n}\nfunction saveClassBonus(classBonus) {\n    const heroData = loadHeroData();\n    heroData.classBonus = classBonus;\n    saveHeroData(heroData);\n}\nfunction loadClassBonus() {\n    return loadHeroData().classBonus ?? null;\n}\nfunction saveGinsengCaracs(ginsengCaracs) {\n    const heroData = loadHeroData();\n    heroData.ginsengCaracs = {\n        data: ginsengCaracs,\n        version: GinsengCaracsVersion,\n    };\n    saveHeroData(heroData);\n}\nfunction loadGinsengCaracs() {\n    const cache = loadHeroData().ginsengCaracs;\n    return cache?.version === GinsengCaracsVersion ? cache.data : null;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/hero.ts?");

/***/ }),

/***/ "./src/store/team.ts":
/*!***************************!*\
  !*** ./src/store/team.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadOpponentTeamData: () => (/* binding */ loadOpponentTeamData),\n/* harmony export */   loadPlayerLeagueTeam: () => (/* binding */ loadPlayerLeagueTeam),\n/* harmony export */   loadTeamParams: () => (/* binding */ loadTeamParams),\n/* harmony export */   saveOpponentTeamData: () => (/* binding */ saveOpponentTeamData),\n/* harmony export */   savePlayerLeagueTeam: () => (/* binding */ savePlayerLeagueTeam),\n/* harmony export */   saveTeamParams: () => (/* binding */ saveTeamParams)\n/* harmony export */ });\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/storage */ \"./src/utils/storage.ts\");\n\nconst TeamParamsVersion = 1;\nfunction saveTeamData(teamData) {\n    (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.setIntoLocalStorage)('HHBattleSimulator.TeamData', {\n        opponent: teamData.opponent,\n        league: teamData.league,\n        params: teamData.params,\n    });\n}\nfunction loadTeamData() {\n    return (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.getFromLocalStorage)('HHBattleSimulator.TeamData', {});\n}\nfunction saveOpponentTeamData(opponentTeamData) {\n    const teamData = loadTeamData();\n    teamData.opponent = opponentTeamData;\n    saveTeamData(teamData);\n}\nfunction loadOpponentTeamData() {\n    return loadTeamData().opponent ?? null;\n}\nfunction savePlayerLeagueTeam(team) {\n    const teamData = loadTeamData();\n    teamData.league = team ?? undefined;\n    saveTeamData(teamData);\n}\nfunction loadPlayerLeagueTeam() {\n    return loadTeamData().league ?? null;\n}\nfunction saveTeamParams(teamParams) {\n    const teamData = loadTeamData();\n    teamData.params ??= [];\n    teamData.params = [\n        { ...teamParams, version: TeamParamsVersion },\n        ...teamData.params.filter(e => e.version === TeamParamsVersion).filter(e => e.teamId !== teamParams.teamId),\n    ];\n    saveTeamData(teamData);\n}\nfunction loadTeamParams() {\n    return (loadTeamData().params ?? []).filter(e => e.version === TeamParamsVersion);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/team.ts?");

/***/ }),

/***/ "./src/store/unused.ts":
/*!*****************************!*\
  !*** ./src/store/unused.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeUnusedData: () => (/* binding */ removeUnusedData)\n/* harmony export */ });\nfunction removeUnusedData() {\n    // v3\n    localStorage.removeItem('HHBattleSimulatorLastOpponentId');\n    localStorage.removeItem('HHBattleSimulatorLastOpponentTeam');\n    localStorage.removeItem('HHBattleSimulatorPlayerLeaguesTeam');\n    localStorage.removeItem('HHBattleSimulatorPlayerBoosterBonus');\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/unused.ts?");

/***/ }),

/***/ "./src/utils/async.ts":
/*!****************************!*\
  !*** ./src/utils/async.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   afterGameInited: () => (/* binding */ afterGameInited),\n/* harmony export */   beforeGameInited: () => (/* binding */ beforeGameInited),\n/* harmony export */   beforeScriptStart: () => (/* binding */ beforeScriptStart)\n/* harmony export */ });\nconst beforeScriptStartPromise = new Promise(resolve => {\n    const ready = () => {\n        if (window.$ != null)\n            resolve();\n    };\n    if (document.readyState === 'loading') {\n        window.addEventListener('DOMContentLoaded', ready, true);\n    }\n    else {\n        ready();\n    }\n});\nconst beforeGameInitedPromise = new Promise(resolve => {\n    beforeScriptStartPromise.then(() => {\n        queueMicrotask(resolve);\n    });\n});\nconst afterGameInitedPromise = new Promise(resolve => {\n    beforeGameInitedPromise.then(() => {\n        $(resolve);\n    });\n});\nfunction beforeScriptStart() {\n    return beforeScriptStartPromise;\n}\nfunction beforeGameInited() {\n    return beforeGameInitedPromise;\n}\nfunction afterGameInited() {\n    return afterGameInitedPromise;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/async.ts?");

/***/ }),

/***/ "./src/utils/color.ts":
/*!****************************!*\
  !*** ./src/utils/color.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChanceColor: () => (/* binding */ getChanceColor),\n/* harmony export */   getMojoColor: () => (/* binding */ getMojoColor),\n/* harmony export */   getPointsColor: () => (/* binding */ getPointsColor)\n/* harmony export */ });\nfunction clamp(value, min, max) {\n    return value <= min ? min : value >= max ? max : value;\n}\nfunction getGammaCorrectedValue(value) {\n    return Math.round(255 * Math.sqrt(clamp(value, 0, 1)));\n}\nfunction getRatingColor(rate) {\n    const red = getGammaCorrectedValue(2 - 2 * rate);\n    const green = getGammaCorrectedValue(2 * rate);\n    return `rgb(${red}, ${green}, 0)`;\n}\nfunction getChanceColor(chance) {\n    const rate = clamp(chance, 0, 1) ** 3;\n    return getRatingColor(rate);\n}\nfunction getMojoColor(mojo) {\n    let rate = clamp(mojo + 10, 0, 40) / 40;\n    rate = 0.5 - 0.5 * Math.cos(rate ** 2 * Math.PI);\n    return getRatingColor(rate);\n}\nfunction getPointsColor(points) {\n    const rate = ((clamp(points, 3, 25) - 3) / 22) ** 3;\n    return getRatingColor(rate);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/color.ts?");

/***/ }),

/***/ "./src/utils/page.ts":
/*!***************************!*\
  !*** ./src/utils/page.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkPage: () => (/* binding */ checkPage),\n/* harmony export */   getOpponentIdFromUrl: () => (/* binding */ getOpponentIdFromUrl)\n/* harmony export */ });\nfunction checkPage(...args) {\n    const { pathname } = window.location;\n    return args.some(e => pathname.includes(e));\n}\nfunction getOpponentIdFromUrl() {\n    const id = location.search.match(/id_opponent=(\\d+)/)?.[1];\n    if (id == null)\n        throw new Error('id_opponent is not found from url.');\n    return id;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/page.ts?");

/***/ }),

/***/ "./src/utils/storage.ts":
/*!******************************!*\
  !*** ./src/utils/storage.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFromLocalStorage: () => (/* binding */ getFromLocalStorage),\n/* harmony export */   setIntoLocalStorage: () => (/* binding */ setIntoLocalStorage)\n/* harmony export */ });\nfunction getFromLocalStorage(key, defaultValue) {\n    const value = localStorage.getItem(key);\n    if (value == null)\n        return defaultValue;\n    try {\n        const data = JSON.parse(value);\n        if (data != null) {\n            if (Array.isArray(data)) {\n                return data;\n            }\n            if (defaultValue != null && typeof data === 'object' && typeof defaultValue === 'object') {\n                return { ...defaultValue, ...data };\n            }\n        }\n        return data;\n    }\n    catch (e) {\n        return value;\n    }\n}\nfunction setIntoLocalStorage(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/storage.ts?");

/***/ }),

/***/ "./src/utils/string.ts":
/*!*****************************!*\
  !*** ./src/utils/string.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   toLeaguePointsPerFight: () => (/* binding */ toLeaguePointsPerFight),\n/* harmony export */   toPercentage: () => (/* binding */ toPercentage),\n/* harmony export */   toPreciseLeaguePointsPerFight: () => (/* binding */ toPreciseLeaguePointsPerFight),\n/* harmony export */   toPrecisePercentage: () => (/* binding */ toPrecisePercentage),\n/* harmony export */   toRoundedNumber: () => (/* binding */ toRoundedNumber),\n/* harmony export */   truncateSoftly: () => (/* binding */ truncateSoftly)\n/* harmony export */ });\nfunction truncateSoftly(value, digit = 0) {\n    return (Math.floor(Math.round(value * 10 ** (digit + 1)) / 10) / 10 ** digit).toLocaleString();\n}\nfunction toRoundedNumber(value, digit = 0) {\n    return (Math.round(value * 10 ** digit) / 10 ** digit).toLocaleString();\n}\nfunction toPercentage(value) {\n    const percentage = value * 100;\n    if (percentage >= 100)\n        return '100%';\n    if (percentage >= 10)\n        return `${truncateSoftly(percentage, 1)}%`; // 10%-99.9%\n    if (percentage >= 0.01)\n        return `${truncateSoftly(percentage, 2)}%`; // 0.01%-9.99%\n    if (percentage >= 0)\n        return `${truncateSoftly(percentage, 3)}%`; // 0% or 0.001%-0.009%\n    return '0%';\n}\nfunction toPrecisePercentage(value) {\n    const percentage = value * 100;\n    if (percentage >= 100)\n        return '100%';\n    if (percentage >= 0.01)\n        return `${truncateSoftly(percentage, 2)}%`; // 0.01%-99.99%\n    if (percentage >= 0)\n        return `${truncateSoftly(percentage, 3)}%`; // 0% or 0.001%-0.009%\n    return '0%';\n}\nfunction toLeaguePointsPerFight(value) {\n    if (value >= 25)\n        return '25';\n    if (value > 24.9)\n        return truncateSoftly(value, 3);\n    return truncateSoftly(value, 2);\n}\nfunction toPreciseLeaguePointsPerFight(value) {\n    if (value >= 25)\n        return '25';\n    if (value > 24.9)\n        return (25 - parseFloat((25 - value).toPrecision(2))).toLocaleString();\n    return truncateSoftly(value, 2);\n}\nfunction capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/string.ts?");

/***/ }),

/***/ "./src/utils/style.ts":
/*!****************************!*\
  !*** ./src/utils/style.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addStyle: () => (/* binding */ addStyle)\n/* harmony export */ });\n/* harmony import */ var _async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async */ \"./src/utils/async.ts\");\n\nasync function addStyle(css) {\n    await (0,_async__WEBPACK_IMPORTED_MODULE_0__.beforeGameInited)();\n    const { IMAGES_URL, SITE_ROOT } = window;\n    if (typeof IMAGES_URL === 'string') {\n        css = css.replaceAll('${IMAGES_URL}', IMAGES_URL);\n    }\n    if (typeof SITE_ROOT === 'string') {\n        css = css.replaceAll('${SITE_ROOT}', SITE_ROOT);\n    }\n    $(document.head).append(`<style>${css}</style>`);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/style.ts?");

/***/ }),

/***/ "./src/utils/table.ts":
/*!****************************!*\
  !*** ./src/utils/table.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   column: () => (/* binding */ column),\n/* harmony export */   columns: () => (/* binding */ columns),\n/* harmony export */   row: () => (/* binding */ row)\n/* harmony export */ });\nfunction column(span, content) {\n    return span >= 2 ? `<td colspan=\"${span}\">${content}</td>` : `<td>${content}</td>`;\n}\nfunction columns(span, contents) {\n    return contents.map(e => column(span, e)).join('');\n}\nfunction row(...args) {\n    return ['<tr>', ...args, '</tr>'].join('');\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/table.ts?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _utils_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/style */ \"./src/utils/style.ts\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./main */ \"./src/main.ts\");\n\n\n\n\n(() => {\n    (0,_utils_style__WEBPACK_IMPORTED_MODULE_1__.addStyle)(_style_css__WEBPACK_IMPORTED_MODULE_0__);\n    (0,_main__WEBPACK_IMPORTED_MODULE_2__.main)();\n})();\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/index.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((module) => {

eval("module.exports = \".sim-result{width:max-content;height:0;position:relative;bottom:1.25rem;line-height:1.25rem;text-align:center;text-shadow:-1px -1px 0 #000,-1px 1px 0 #000,1px -1px 0 #000,1px 1px 0 #000;z-index:1}.sim-result .sim-label{font-size:.75rem}.sim-result.sim-left{margin-right:60%}.sim-result.sim-right{margin-left:60%}.opponent .sim-result.sim-top{bottom:12rem}#season-arena .opponent .sim-result.sim-top{bottom:11.5rem;line-height:1rem}.sim-result.sim-pending{color:#999}.sim-mark{display:inline-block;width:1em;height:1em;margin:-.125em .25em .125em -1.25em;background-size:1em;vertical-align:bottom}table.sim-table{border-collapse:collapse;color:#fff;background-color:#000;font-size:.75rem;line-height:1rem}table.sim-table td{padding:.25rem;border:1px solid #999}table.sim-points-table{border-collapse:collapse;color:#fff;background-color:#000;font-size:.75rem;line-height:1.25rem;text-shadow:-1px -1px 0 #000,-1px 1px 0 #000,1px -1px 0 #000,1px 1px 0 #000}table.sim-points-table td{padding:1px .25rem}.sim-points-table .sim-bar-container{width:5rem}.sim-points-table .sim-bar{height:1.25rem;margin-bottom:-1.25rem;background-color:#ccf9}.sim-column{text-align:center;text-wrap:nowrap}.sim-column .sim-mark{margin:.25em 0}.player_team_block{min-width:15rem}.sim-popup{position:absolute;left:0;right:0;top:5rem;z-index:36;margin:auto;width:min-content;height:min-content;color:#fff;background-color:#000;border:.75rem solid #000;border-radius:.5rem;text-align:left}.sim-popup .close-button{position:absolute;right:-.25rem;top:-.25rem;cursor:pointer}.sim-popup .caption{font-size:1rem;line-height:1.5rem;width:max-content;margin:0 3rem .75rem 0}.sim-popup .content{font-size:.75rem;line-height:1.5rem;width:max-content;max-height:27rem;overflow-y:auto}table.sim-booster-table{border-collapse:separate;font-size:.75rem;line-height:1.5rem;width:max-content}table.sim-booster-table td span.sim-chance{margin:0 .5rem}table.sim-booster-table .sim-booster-slot{width:1.5rem;height:1.5rem;border:1px solid #fff}table.sim-booster-table .sim-booster-icon{width:100%;height:100%;background-size:contain}.sim-icon-button{display:block;width:2.5rem;height:2.5rem;background-size:contain;cursor:pointer}.sim-icon-ginseng{background-image:url('${IMAGES_URL}/pictures/items/B1.png')}.sim-icon-jujubes{background-image:url('${IMAGES_URL}/pictures/items/B2.png')}.sim-icon-chlorella{background-image:url('${IMAGES_URL}/pictures/items/B3.png')}.sim-icon-cordyceps{background-image:url('${IMAGES_URL}/pictures/items/B4.png')}.sim-icon-ame{background-image:url('${IMAGES_URL}/pictures/items/MB2.png')}.sim-icon-headband{background-image:url('${IMAGES_URL}/pictures/items/MB3.png')}.sim-icon-girl-skills{background-image:url('${IMAGES_URL}/pictures/design/girl_skills/active_skills_icon.png')}.sim-column .sim-icon-button{margin:-1rem auto}.sim-selectors.form-wrapper{display:flex;margin:-.5rem 3rem 0 0;gap:.5rem;width:min-content}.sim-selectors.form-wrapper>.form-control{width:9rem}.sim-selectors.form-wrapper>.form-control>.select-group .selectric-items{height:auto}.sim-selectors.form-wrapper>.form-control>.select-group .selectric-items li:first-of-type{padding-left:5px}.sim-traits{margin:.5rem .5rem 0 .5rem}.sim-trait-icon{display:inline-block;width:1.75rem;height:1.75rem;background-size:contain;background-position:center}\";\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/style.css?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;