// ==UserScript==
// @name         Hentai Heroes Battle Simulator v4
// @namespace    https://github.com/rena-jp/hh-battle-simulator-v4
// @version      4.3.0
// @description  Add a battle simulator to Hentai Heroes and related games
// @author       rena
// @match        https://*.hentaiheroes.com/*
// @match        https://nutaku.haremheroes.com/*
// @match        https://*.gayharem.com/*
// @match        https://*.comixharem.com/*
// @match        https://*.hornyheroes.com/*
// @match        https://*.pornstarharem.com/*
// @match        https://*.transpornstarharem.com/*
// @grant        none
// @run-at       document-body
// @updateURL    https://github.com/rena-jp/hh-battle-simulator-v4/raw/main/dist/hh-battle-simulator-v4.meta.js
// @downloadURL  https://github.com/rena-jp/hh-battle-simulator-v4/raw/main/dist/hh-battle-simulator-v4.user.js
// ==/UserScript==

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/data/booster.ts":
/*!*****************************!*\
  !*** ./src/data/booster.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBoosterData: () => (/* binding */ getBoosterData)\n/* harmony export */ });\n/* harmony import */ var _fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fighter */ \"./src/data/fighter.ts\");\n\nconst MythicBoosterMap = {\n    MB2: {\n        // AME\n        leagues: 1.15,\n        seasons: 1.15,\n    },\n    MB3: {\n        // Headband\n        trolls: 1.25,\n        pantheon: 1.25,\n    },\n    MB8: {\n        // LME\n        leagues: 1.15,\n        seasons: 1,\n    },\n    MB9: {\n        // SME\n        leagues: 1,\n        seasons: 1.15,\n    },\n};\nfunction getBoosterData(boosters) {\n    const multiplier = new _fighter__WEBPACK_IMPORTED_MODULE_0__.FighterCaracsCalculator();\n    const addend = new _fighter__WEBPACK_IMPORTED_MODULE_0__.FighterCaracsCalculator();\n    let mythic = {};\n    boosters\n        .map(e => e.item)\n        .forEach(e => {\n        switch (e.rarity) {\n            case 'common':\n            case 'rare':\n            case 'epic':\n                addend.add((0,_fighter__WEBPACK_IMPORTED_MODULE_0__.toFighterCaracs)(e));\n                break;\n            case 'legendary':\n                multiplier.add((0,_fighter__WEBPACK_IMPORTED_MODULE_0__.toFighterCaracs)(e));\n                break;\n            case 'mythic':\n                const mythicBonus = MythicBoosterMap[e.identifier];\n                if (mythicBonus != null) {\n                    mythic = { ...mythic, ...mythicBonus };\n                }\n                break;\n        }\n    });\n    const normal = {\n        multiplier: multiplier.divide(100).add(1).result(),\n        addend: addend.result(),\n    };\n    return { normal, mythic };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/booster.ts?");

/***/ }),

/***/ "./src/data/caracs.ts":
/*!****************************!*\
  !*** ./src/data/caracs.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaracsCalculator: () => (/* binding */ CaracsCalculator),\n/* harmony export */   addCaracs: () => (/* binding */ addCaracs),\n/* harmony export */   divideCaracs: () => (/* binding */ divideCaracs),\n/* harmony export */   equalsCaracs: () => (/* binding */ equalsCaracs),\n/* harmony export */   multiplyCaracs: () => (/* binding */ multiplyCaracs),\n/* harmony export */   roundCaracs: () => (/* binding */ roundCaracs),\n/* harmony export */   subtractCaracs: () => (/* binding */ subtractCaracs),\n/* harmony export */   toCaracs: () => (/* binding */ toCaracs),\n/* harmony export */   truncateCaracs: () => (/* binding */ truncateCaracs)\n/* harmony export */ });\nfunction toNumber(value, defaultValue) {\n    return value != null ? +value : defaultValue;\n}\nfunction toCaracs(keys, caracs, defaultValue) {\n    if (Array.isArray(caracs)) {\n        return keys.reduce((newCaracs, key, i) => {\n            newCaracs[key] = toNumber(caracs[i], defaultValue);\n            return newCaracs;\n        }, {});\n    }\n    else {\n        return keys.reduce((newCaracs, key) => {\n            newCaracs[key] = toNumber(caracs[key], defaultValue);\n            return newCaracs;\n        }, {});\n    }\n}\nfunction calcCaracs(keys, x, y, f) {\n    if (typeof y === 'number') {\n        return keys.reduce((newCaracs, key) => {\n            newCaracs[key] = f(x[key], y);\n            return newCaracs;\n        }, {});\n    }\n    else {\n        return keys.reduce((newCaracs, key) => {\n            newCaracs[key] = f(x[key], y[key]);\n            return newCaracs;\n        }, {});\n    }\n}\nfunction addCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x + y);\n}\nfunction subtractCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x - y);\n}\nfunction multiplyCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x * y);\n}\nfunction divideCaracs(keys, x, y) {\n    return calcCaracs(keys, x, y, (x, y) => x / y);\n}\nfunction truncateCaracs(keys, caracs) {\n    return keys.reduce((newCaracs, key) => {\n        newCaracs[key] = Math.floor(caracs[key]);\n        return newCaracs;\n    }, {});\n}\nfunction roundCaracs(keys, caracs) {\n    return keys.reduce((newCaracs, key) => {\n        newCaracs[key] = Math.round(caracs[key]);\n        return newCaracs;\n    }, {});\n}\nfunction equalsCaracs(keys, x, y) {\n    return keys.every((key) => +x[key] === +y[key]);\n}\nclass CaracsCalculator {\n    keys;\n    value;\n    constructor(keys, initialValue = {}) {\n        this.keys = keys;\n        this.value = toCaracs(keys, initialValue, 0);\n    }\n    add(addend) {\n        this.value = addCaracs(this.keys, this.value, addend);\n        return this;\n    }\n    subtract(subtrahend) {\n        this.value = subtractCaracs(this.keys, this.value, subtrahend);\n        return this;\n    }\n    multiply(multiplier) {\n        this.value = multiplyCaracs(this.keys, this.value, multiplier);\n        return this;\n    }\n    divide(denominator) {\n        this.value = divideCaracs(this.keys, this.value, denominator);\n        return this;\n    }\n    truncate() {\n        this.value = truncateCaracs(this.keys, this.value);\n        return this;\n    }\n    round() {\n        this.value = roundCaracs(this.keys, this.value);\n        return this;\n    }\n    result() {\n        return this.value;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/caracs.ts?");

/***/ }),

/***/ "./src/data/fighter.ts":
/*!*****************************!*\
  !*** ./src/data/fighter.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FighterCaracsCalculator: () => (/* binding */ FighterCaracsCalculator),\n/* harmony export */   FighterCaracsKeys: () => (/* binding */ FighterCaracsKeys),\n/* harmony export */   addFighterCaracs: () => (/* binding */ addFighterCaracs),\n/* harmony export */   divideFighterCaracs: () => (/* binding */ divideFighterCaracs),\n/* harmony export */   equalsFighterCaracs: () => (/* binding */ equalsFighterCaracs),\n/* harmony export */   getFighterCaracsFromHero: () => (/* binding */ getFighterCaracsFromHero),\n/* harmony export */   getFighterCaracsFromTeamPower: () => (/* binding */ getFighterCaracsFromTeamPower),\n/* harmony export */   multiplyFighterCaracs: () => (/* binding */ multiplyFighterCaracs),\n/* harmony export */   roundFighterCaracs: () => (/* binding */ roundFighterCaracs),\n/* harmony export */   subtractFighterCaracs: () => (/* binding */ subtractFighterCaracs),\n/* harmony export */   toFighterCaracs: () => (/* binding */ toFighterCaracs),\n/* harmony export */   toFighterCaracsBonus: () => (/* binding */ toFighterCaracsBonus),\n/* harmony export */   truncateFighterCaracs: () => (/* binding */ truncateFighterCaracs)\n/* harmony export */ });\n/* harmony import */ var _caracs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./caracs */ \"./src/data/caracs.ts\");\n\nconst FighterCaracsKeys = ['damage', 'defense', 'ego', 'chance'];\nclass FighterCaracsCalculator extends _caracs__WEBPACK_IMPORTED_MODULE_0__.CaracsCalculator {\n    constructor(initialValue = {}) {\n        super(FighterCaracsKeys, initialValue);\n    }\n}\nfunction toFighterCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(FighterCaracsKeys, caracs, 0);\n}\nfunction toFighterCaracsBonus(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(FighterCaracsKeys, caracs, 1);\n}\nfunction getFighterCaracsFromHero(hero) {\n    const { caracs } = hero.infos;\n    return {\n        damage: caracs.primary_carac_amount,\n        defense: caracs.secondary_caracs_sum * 0.25,\n        ego: caracs.endurance,\n        chance: caracs.chance,\n    };\n}\nfunction getFighterCaracsFromTeamPower(teamPower) {\n    return {\n        damage: teamPower * 0.25,\n        defense: teamPower * 0.12,\n        ego: teamPower * 2,\n        chance: 0,\n    };\n}\nfunction addFighterCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.addCaracs)(FighterCaracsKeys, x, y);\n}\nfunction subtractFighterCaracs(minuend, subtrahend) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.subtractCaracs)(FighterCaracsKeys, minuend, subtrahend);\n}\nfunction multiplyFighterCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.multiplyCaracs)(FighterCaracsKeys, x, y);\n}\nfunction divideFighterCaracs(numerator, denominator) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.divideCaracs)(FighterCaracsKeys, numerator, denominator);\n}\nfunction truncateFighterCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.truncateCaracs)(FighterCaracsKeys, caracs);\n}\nfunction roundFighterCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.roundCaracs)(FighterCaracsKeys, caracs);\n}\nfunction equalsFighterCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.equalsCaracs)(FighterCaracsKeys, x, y);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/fighter.ts?");

/***/ }),

/***/ "./src/data/hero.ts":
/*!**************************!*\
  !*** ./src/data/hero.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClubUpgradesKeys: () => (/* binding */ ClubUpgradesKeys),\n/* harmony export */   HeroCaracsCalculator: () => (/* binding */ HeroCaracsCalculator),\n/* harmony export */   HeroCaracsKeys: () => (/* binding */ HeroCaracsKeys),\n/* harmony export */   addHeroCaracs: () => (/* binding */ addHeroCaracs),\n/* harmony export */   divideHeroCaracs: () => (/* binding */ divideHeroCaracs),\n/* harmony export */   multiplyHeroCaracs: () => (/* binding */ multiplyHeroCaracs),\n/* harmony export */   roundHeroCaracs: () => (/* binding */ roundHeroCaracs),\n/* harmony export */   subtractHeroCaracs: () => (/* binding */ subtractHeroCaracs),\n/* harmony export */   toHeroCaracs: () => (/* binding */ toHeroCaracs),\n/* harmony export */   toHeroCaracsBonus: () => (/* binding */ toHeroCaracsBonus),\n/* harmony export */   truncateHeroCaracs: () => (/* binding */ truncateHeroCaracs)\n/* harmony export */ });\n/* harmony import */ var _caracs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./caracs */ \"./src/data/caracs.ts\");\n\nconst ClubUpgradesKeys = [\n    'hardcore_stats',\n    'charm_stats',\n    'know_how_stats',\n    'endurance_stats',\n    'harmony_stats',\n];\nconst HeroCaracsKeys = ['carac1', 'carac2', 'carac3', 'endurance', 'chance'];\nfunction toHeroCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(HeroCaracsKeys, caracs, 0);\n}\nfunction toHeroCaracsBonus(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.toCaracs)(HeroCaracsKeys, caracs, 1);\n}\nfunction addHeroCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.addCaracs)(HeroCaracsKeys, x, y);\n}\nfunction subtractHeroCaracs(minuend, subtrahend) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.subtractCaracs)(HeroCaracsKeys, minuend, subtrahend);\n}\nfunction multiplyHeroCaracs(x, y) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.multiplyCaracs)(HeroCaracsKeys, x, y);\n}\nfunction divideHeroCaracs(numerator, denominator) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.divideCaracs)(HeroCaracsKeys, numerator, denominator);\n}\nfunction truncateHeroCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.truncateCaracs)(HeroCaracsKeys, caracs);\n}\nfunction roundHeroCaracs(caracs) {\n    return (0,_caracs__WEBPACK_IMPORTED_MODULE_0__.roundCaracs)(HeroCaracsKeys, caracs);\n}\nclass HeroCaracsCalculator extends _caracs__WEBPACK_IMPORTED_MODULE_0__.CaracsCalculator {\n    constructor(initialValue = {}) {\n        super(HeroCaracsKeys, initialValue);\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/data/hero.ts?");

/***/ }),

/***/ "./src/dom/battle-table.ts":
/*!*********************************!*\
  !*** ./src/dom/battle-table.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBattleTable: () => (/* binding */ createBattleTable)\n/* harmony export */ });\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\nfunction createBattleTable(player, opponent) {\n    const createTable = (attacker, defender) => {\n        let attackerAttack = attacker.attack;\n        let defenderDefense = defender.defense;\n        const rows = [];\n        for (let i = 0; i < 10; i++) {\n            const baseDamage = Math.max(0, Math.floor(attackerAttack - defenderDefense));\n            const columns = [];\n            columns.push(baseDamage);\n            columns.push(Math.ceil(baseDamage * attacker.healing));\n            columns.push(Math.ceil(baseDamage * attacker.critMultiplier));\n            columns.push(Math.ceil(baseDamage * attacker.critMultiplier * attacker.healing));\n            rows.push(columns);\n            attackerAttack *= attacker.attackMultiplier;\n            defenderDefense *= attacker.defenseMultiplier;\n        }\n        return rows;\n    };\n    const playerTable = createTable(player, opponent);\n    const opponentTable = createTable(opponent, player);\n    const chanceRow = [player, opponent].flatMap(e => [e.baseHitChance, e.critHitChance]);\n    return $('<table class=\"sim-table\"></table>')\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(4, ['Player', 'Opponent'])))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(2, ['Normal', 'Critical']).repeat(2)))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, '%'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(2, chanceRow.map(e => (0,_utils_string__WEBPACK_IMPORTED_MODULE_0__.toPercentage)(e)))))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(1, ['Damage', 'Healing']).repeat(4)))\n        .append([...Array(9)]\n        .map((_, i) => i + 1)\n        .map(i => (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(1, i), ...[playerTable, opponentTable].map(table => (0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(1, table[i].map(e => e.toLocaleString())))))\n        .join(''))\n        .prop('outerHTML');\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/battle-table.ts?");

/***/ }),

/***/ "./src/dom/booster-simulation.ts":
/*!***************************************!*\
  !*** ./src/dom/booster-simulation.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBoosterChanceTable: () => (/* binding */ createBoosterChanceTable),\n/* harmony export */   createBoosterPointsTable: () => (/* binding */ createBoosterPointsTable)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\n\nfunction sortBoosterSimulationResults(results) {\n    results.sort((x, y) => {\n        const compareHelper = (x, y) => (x == y ? null : x - y);\n        const compare = (f) => compareHelper(f(y), f(x));\n        return (compare(e => e.result) ??\n            compare(e => e.boosterCounts.mythic) ??\n            compare(e => e.boosterCounts.cordyceps) ??\n            compare(e => e.boosterCounts.chlorella) ??\n            compare(e => e.boosterCounts.ginseng) ??\n            0);\n    });\n}\nfunction getBoosterIcon(rarity, booster) {\n    return `<div class=\"sim-booster-slot slot ${rarity}\"><div class=\"sim-booster-icon sim-icon-${booster}\"></div></div>`;\n}\nconst BoosterKeys = ['ginseng', 'chlorella', 'cordyceps', 'mythic'];\nconst BoosterIconMap = {\n    ginseng: getBoosterIcon('legendary', 'ginseng'),\n    chlorella: getBoosterIcon('legendary', 'chlorella'),\n    cordyceps: getBoosterIcon('legendary', 'cordyceps'),\n    headband: getBoosterIcon('mythic', 'headband'),\n    ame: getBoosterIcon('mythic', 'ame'),\n};\nfunction getBoosterIcons(boosterCounts, mythic) {\n    return BoosterKeys.map(key => BoosterIconMap[key === 'mythic' ? mythic : key].repeat(boosterCounts[key])).join('');\n}\nfunction createBoosterChanceTable(results) {\n    sortBoosterSimulationResults(results);\n    const withoutHB = results.filter(e => e.boosterCounts.mythic <= 0);\n    const withHB = results.filter(e => e.boosterCounts.mythic > 0);\n    return createTable();\n    function createTable() {\n        const test = withoutHB.map((e, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, [\n            getBoosterIcons(e.boosterCounts, 'headband'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getChanceColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPercentage)(e.result)}</span>`,\n            getBoosterIcons(withHB[i].boosterCounts, 'headband'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getChanceColor)(withHB[i].result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPercentage)(withHB[i].result)}</span>`,\n        ])));\n        return $('<table class=\"sim-booster-table\"></table>').append(test.join('')).prop('outerHTML');\n    }\n}\nfunction createBoosterPointsTable(results) {\n    sortBoosterSimulationResults(results);\n    const withoutAME = results.filter(e => e.boosterCounts.mythic <= 0);\n    const withAME = results.filter(e => e.boosterCounts.mythic > 0);\n    return createTable();\n    function createTable() {\n        const test = withoutAME.map((e, i) => (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, [\n            getBoosterIcons(e.boosterCounts, 'ame'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getPointsColor)(e.result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toLeaguePointsPerFight)(e.result)}</span>`,\n            getBoosterIcons(withAME[i].boosterCounts, 'ame'),\n            `<span class=\"sim-chance\" style=\"color: ${(0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getPointsColor)(withAME[i].result)}\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toLeaguePointsPerFight)(withAME[i].result)}</span>`,\n        ])));\n        return $('<table class=\"sim-booster-table\"></table>').append(test.join('')).prop('outerHTML');\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/booster-simulation.ts?");

/***/ }),

/***/ "./src/dom/chance.ts":
/*!***************************!*\
  !*** ./src/dom/chance.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChanceView: () => (/* binding */ ChanceView)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n\n\nclass ChanceView {\n    element;\n    last;\n    constructor() {\n        this.element = $('<div class=\"sim-result\"></div>');\n    }\n    updateAsync(resultPromise) {\n        this.reset();\n        this.last = resultPromise;\n        queueMicrotask(async () => {\n            const result = await resultPromise;\n            if (this.last !== resultPromise)\n                return;\n            const question = result.hasAssumptions ? '?' : '';\n            let mark = '';\n            if (result.alwaysWin)\n                mark = '<div class=\"vCheck_mix_icn sim-mark\"></div>';\n            if (result.neverWin)\n                mark = '<div class=\"xUncheck_mix_icn sim-mark\"></div>';\n            this.element\n                .removeClass('sim-pending')\n                .html(`<div class=\"sim-label\">P[W]:</div>${mark}<span class=\"sim-chance\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPercentage)(result.chance)}${question}</span>`)\n                .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getChanceColor)(result.chance));\n        });\n        return this.element;\n    }\n    reset() {\n        this.element.addClass('sim-pending').html('<div class=\"sim-label\">P[W]:</div>-').css('color', '');\n    }\n    setTooltip(html) {\n        this.element.attr('tooltip', html);\n    }\n    getElement() {\n        return this.element;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/chance.ts?");

/***/ }),

/***/ "./src/dom/mojo.ts":
/*!*************************!*\
  !*** ./src/dom/mojo.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMojoElement$: () => (/* binding */ createMojoElement$)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\n\nfunction createMojoElement$(resultPromise, winMojo) {\n    const $element = $('<div class=\"sim-result\"></div>')\n        .addClass('sim-pending')\n        .html('<div class=\"sim-label\">E[M]:</div>-');\n    queueMicrotask(update);\n    return $element;\n    async function update() {\n        const result = await resultPromise;\n        const question = result.hasAssumptions ? '?' : '';\n        const winChance = result.chance;\n        const lossChance = 1 - winChance;\n        const lossMojo = winMojo - 40;\n        const odds = winMojo * winChance + lossMojo * lossChance;\n        $element\n            .removeClass('sim-pending')\n            .html(`<div class=\"sim-label\">E[M]:</div><span class=\"sim-mojo\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toRoundedNumber)(odds, 2)}${question}</span>`)\n            .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getMojoColor)(odds))\n            .attr('tooltip', createMojoTable());\n        function createMojoTable() {\n            return $('<table class=\"sim-table\"></table>')\n                .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, ''), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, ['Win', 'Loss'])))\n                .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, 'Mojo'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, [winMojo, lossMojo].map(e => (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toRoundedNumber)(e, 2)))))\n                .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, '%'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.columns)(1, [winChance, lossChance].map(e => (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toPercentage)(e)))))\n                .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(1, 'E[M]'), (0,_utils_table__WEBPACK_IMPORTED_MODULE_2__.column)(2, (0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toRoundedNumber)(odds, 2))))\n                .prop('outerHTML');\n        }\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/mojo.ts?");

/***/ }),

/***/ "./src/dom/points-table.ts":
/*!*********************************!*\
  !*** ./src/dom/points-table.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPointsTable: () => (/* binding */ createPointsTable)\n/* harmony export */ });\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _utils_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/table */ \"./src/utils/table.ts\");\n\n\nfunction createPointsTable(result) {\n    return $('<table class=\"sim-table\"></table>')\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.column)(2, 'Points')))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(1, ['Max', result.maxPoints.toFixed()])))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(1, ['Avg', (0,_utils_string__WEBPACK_IMPORTED_MODULE_0__.toPreciseLeaguePointsPerFight)(result.avgPoints)])))\n        .append((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.row)((0,_utils_table__WEBPACK_IMPORTED_MODULE_1__.columns)(1, ['Min', result.minPoints.toFixed()])))\n        .prop('outerHTML');\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/points-table.ts?");

/***/ }),

/***/ "./src/dom/points.ts":
/*!***************************!*\
  !*** ./src/dom/points.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointsView: () => (/* binding */ PointsView)\n/* harmony export */ });\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n\n\nclass PointsView {\n    element;\n    last;\n    constructor() {\n        this.element = $('<div class=\"sim-result\"></div>');\n    }\n    updateAsync(resultPromise) {\n        this.reset();\n        this.last = resultPromise;\n        queueMicrotask(async () => {\n            const result = await resultPromise;\n            if (this.last !== resultPromise)\n                return;\n            const question = result.hasAssumptions ? '?' : '';\n            let mark = '';\n            if (result.minPoints >= 25)\n                mark = '<div class=\"vCheck_mix_icn sim-mark\"></div>';\n            this.element\n                .removeClass('sim-pending')\n                .html(`<div class=\"sim-label\">E[P]:</div>${mark}<span class=\"sim-points\">${(0,_utils_string__WEBPACK_IMPORTED_MODULE_1__.toLeaguePointsPerFight)(result.avgPoints)}${question}</span>`)\n                .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_0__.getPointsColor)(result.avgPoints));\n        });\n        return this.element;\n    }\n    reset() {\n        this.element.addClass('sim-pending').html('<div class=\"sim-label\">E[P]:</div>-').css('color', '');\n    }\n    setTooltip(html) {\n        this.element.attr('tooltip', html);\n    }\n    getElement() {\n        return this.element;\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/points.ts?");

/***/ }),

/***/ "./src/dom/popup.ts":
/*!**************************!*\
  !*** ./src/dom/popup.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Popup: () => (/* binding */ Popup)\n/* harmony export */ });\nclass Popup {\n    element;\n    content;\n    constructor(caption) {\n        this.element = $('<div class=\"sim-popup\"></div>');\n        const closeButton = $('<div class=\"close-button xUncheck_mix_icn\"></div>');\n        closeButton.on('click', () => {\n            this.hide();\n        });\n        this.element.append(closeButton);\n        this.element.append($('<h1 class=\"caption\"></h1>').text(caption));\n        const content = $('<div class=\"content\"></div>');\n        this.content = content;\n        this.element.append(content);\n    }\n    show() {\n        this.element.appendTo('#contains_all');\n    }\n    hide() {\n        this.element.detach();\n    }\n    toggle() {\n        if (this.element.parent().length === 0) {\n            this.element.appendTo('#contains_all');\n        }\n        else {\n            this.element.detach();\n        }\n    }\n    setContent(html) {\n        this.content.html(html);\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/dom/popup.ts?");

/***/ }),

/***/ "./src/global.ts":
/*!***********************!*\
  !*** ./src/global.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simulator/battle */ \"./src/simulator/battle.ts\");\n\nwindow.HHBattleSimulator = {\n    /**\n     * @param {any} playerFighter - hero_data\n     * @param {any} opponentFighter - opponent_fighter.player\n     * @returns {Promise<{ chance: number, alwaysWin: boolean, neverWin: boolean, avgPoints: number, minPoints: number, maxPoints: number }>} - Player's winning chance and league points\n     */\n    async simulateFromFighters(playerFighter, opponentFighter) {\n        return await (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_0__.simulateFromFighters)('Standard', playerFighter, opponentFighter);\n    },\n    /**\n     * @param {any} playerTeam - hero_data.team\n     * @param {any} opponentTeam - opponent_fighter.player.team\n     * @param {number} mythicBoosterMultiplier - Default: 1, AME/LME/SME: 1.15, Headband: 1.25\n     * @returns {Promise<{ chance: number, alwaysWin: boolean, neverWin: boolean, avgPoints: number, minPoints: number, maxPoints: number }>} - Player's winning chance and league points\n     */\n    async simulateFromTeams(playerTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n        return await (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_0__.simulateFromTeams)('Standard', playerTeam, opponentTeam, mythicBoosterMultiplier);\n    },\n};\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/global.ts?");

/***/ }),

/***/ "./src/interop/hh-plus-plus-config.ts":
/*!********************************************!*\
  !*** ./src/interop/hh-plus-plus-config.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConfig: () => (/* binding */ getConfig),\n/* harmony export */   registerConfig: () => (/* binding */ registerConfig)\n/* harmony export */ });\n/* harmony import */ var _hh_plus_plus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hh-plus-plus */ \"./src/interop/hh-plus-plus.ts\");\n\nconst config = {\n    doSimulateLeagueTable: true,\n    doSimulateFoughtOpponents: true,\n    replaceHHLeaguesPlusPlus: true,\n};\nasync function registerConfig() {\n    const hhPlusPlusConfig = await (0,_hh_plus_plus__WEBPACK_IMPORTED_MODULE_0__.getHHPlusPlusConfig)();\n    if (hhPlusPlusConfig == null)\n        return;\n    hhPlusPlusConfig.registerGroup({ key: 'sim-v4', name: 'Sim v4' });\n    config.doSimulateLeagueTable = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'DoSimulateLeagueTable',\n            label: 'Run simulations in the league table (maybe slow)',\n            default: true,\n            subSettings: [{ key: 'skip', default: false, label: 'Skip fought opponents' }],\n        },\n        run(subSettings) {\n            config.doSimulateLeagueTable = true;\n            config.doSimulateFoughtOpponents = !subSettings.skip;\n        },\n    });\n    config.replaceHHLeaguesPlusPlus = false;\n    hhPlusPlusConfig.registerModule({\n        group: 'sim-v4',\n        configSchema: {\n            baseKey: 'ReplaceHHLeaguesPlusPlus',\n            label: 'Replace HH Leagues++ sim',\n            default: true,\n        },\n        run() {\n            config.replaceHHLeaguesPlusPlus = true;\n        },\n    });\n    hhPlusPlusConfig.loadConfig();\n    hhPlusPlusConfig.runModules();\n}\nfunction getConfig() {\n    return config;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/hh-plus-plus-config.ts?");

/***/ }),

/***/ "./src/interop/hh-plus-plus-league.ts":
/*!********************************************!*\
  !*** ./src/interop/hh-plus-plus-league.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   replaceHHPlusPlusLeague: () => (/* binding */ replaceHHPlusPlusLeague)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _dom_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom/popup */ \"./src/dom/popup.ts\");\n/* harmony import */ var _page_teams__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../page/teams */ \"./src/page/teams.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _hh_plus_plus__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hh-plus-plus */ \"./src/interop/hh-plus-plus.ts\");\n/* harmony import */ var _hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function replaceHHPlusPlusLeague() {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_11__.checkPage)('/tower-of-fame.html'))\n        return;\n    const HHPlusPlus = await (0,_hh_plus_plus__WEBPACK_IMPORTED_MODULE_12__.getHHPlusPlus)();\n    if (HHPlusPlus == null)\n        return;\n    await (0,_hh_plus_plus__WEBPACK_IMPORTED_MODULE_12__.getHHPlusPlusConfig)(); // FIXME\n    const config = (0,_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_13__.getConfig)();\n    if (!config.replaceHHLeaguesPlusPlus)\n        return;\n    let inited = config.doSimulateLeagueTable;\n    let playerLeagueTeam;\n    let leagueBoosterMultiplier;\n    let lastDisplay;\n    const originalLeague = HHPlusPlus.League;\n    HHPlusPlus.League = class League {\n        original;\n        constructor(...args) {\n            this.original = new originalLeague(...args);\n        }\n        extract() {\n            return this.original.extract();\n        }\n        display(result) {\n            lastDisplay = result;\n            let { forSim } = result;\n            if (forSim == null) {\n                if (!inited) {\n                    inited = true;\n                    (async () => {\n                        playerLeagueTeam = await (0,_page_teams__WEBPACK_IMPORTED_MODULE_6__.fetchPlayerLeaguesTeam)();\n                        leagueBoosterMultiplier = (0,_store_booster__WEBPACK_IMPORTED_MODULE_10__.loadBoosterData)().mythic?.leagues;\n                        const forSim = lastDisplay?.forSim;\n                        if (forSim != null && forSim.hasAssumptions === true) {\n                            forSim.playerTeam = playerLeagueTeam;\n                            forSim.mythicBoosterMultiplier = leagueBoosterMultiplier;\n                            this.display(lastDisplay);\n                        }\n                    })();\n                }\n                const hero_data = window.hero_data;\n                const opponent_fighter = window.opponent_fighter;\n                if (hero_data != null && opponent_fighter != null) {\n                    const playerTeam = playerLeagueTeam ?? hero_data.team;\n                    const opponentTeam = opponent_fighter.player.team;\n                    const mythicBoosterMultiplier = leagueBoosterMultiplier ?? 1;\n                    const hasAssumptions = playerTeam.id_team == null;\n                    forSim = { playerTeam, opponentTeam, mythicBoosterMultiplier, hasAssumptions };\n                    result.forSim = forSim;\n                }\n            }\n            if (forSim != null) {\n                let playerTeam = forSim.playerTeam;\n                const opponentTeam = forSim.opponentTeam;\n                if (forSim.result == null || (forSim.hasAssumptions && playerTeam.id_team != null)) {\n                    playerTeam = playerLeagueTeam ?? playerTeam;\n                    const mythicBoosterMultiplier = leagueBoosterMultiplier ?? forSim.mythicBoosterMultiplier;\n                    const { player, opponent } = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_9__.calcBattlersFromTeams)(playerTeam, opponentTeam, mythicBoosterMultiplier);\n                    forSim.battleTable = (0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent);\n                    const hasAssumptions = playerTeam.id_team == null;\n                    forSim.hasAssumptions = hasAssumptions;\n                    forSim.result = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_7__.simulateFromBattlers)('Standard', player, opponent).then(result => ({\n                        ...result,\n                        hasAssumptions,\n                    }));\n                }\n                const resultPromise = forSim.result;\n                $('.opponent .icon-area').parent().find('.sim-result').remove();\n                const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_2__.ChanceView();\n                chanceView.updateAsync(resultPromise);\n                chanceView.setTooltip(forSim.battleTable);\n                $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n                const pointsView = new _dom_points__WEBPACK_IMPORTED_MODULE_3__.PointsView();\n                pointsView.updateAsync(resultPromise);\n                resultPromise.then((result) => {\n                    pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_4__.createPointsTable)(result));\n                });\n                $('.opponent .icon-area').before(pointsView.getElement().addClass('sim-right'));\n                const popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_5__.Popup('Booster simulator');\n                const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-ame\"></div></div>')\n                    .addClass('sim-left')\n                    .addClass('sim-top')\n                    .attr('tooltip', 'Booster simulator');\n                iconButton.on('click', () => {\n                    if (result.boosterTable == null) {\n                        popup.setContent('Now loading...');\n                        queueMicrotask(async () => {\n                            const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_8__.simulateBoosterCombinationWithAME)(playerTeam, opponentTeam);\n                            if (results == null || results.length === 0) {\n                                popup.setContent('Error<br>1. Go to the market page<br>2. Go to every team editing page (not team selecting page)<br>3. Try again');\n                            }\n                            else {\n                                result.boosterTable = (0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createBoosterPointsTable)(results);\n                                popup.setContent(result.boosterTable);\n                            }\n                        });\n                    }\n                    else {\n                        popup.setContent(result.boosterTable);\n                    }\n                    popup.toggle();\n                });\n                if (playerTeam.id_team != null)\n                    $('.opponent .icon-area').before(iconButton);\n                return;\n            }\n            return this.original.display(result);\n        }\n    };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/hh-plus-plus-league.ts?");

/***/ }),

/***/ "./src/interop/hh-plus-plus.ts":
/*!*************************************!*\
  !*** ./src/interop/hh-plus-plus.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHHPlusPlus: () => (/* binding */ getHHPlusPlus),\n/* harmony export */   getHHPlusPlusConfig: () => (/* binding */ getHHPlusPlusConfig)\n/* harmony export */ });\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n\nconst hhPlusPlusPromise = (async () => {\n    if (window.HHPlusPlus != null)\n        return window.HHPlusPlus;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.beforeGameInited)();\n    if (window.HHPlusPlus != null)\n        return window.HHPlusPlus;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.afterGameInited)();\n    if (window.HHPlusPlus != null)\n        return window.HHPlusPlus;\n    await new Promise($);\n    return window.HHPlusPlus;\n})();\nconst hhPlusPlusConfigPromise = (async () => {\n    if (window.hhPlusPlusConfig != null)\n        return window.hhPlusPlusConfig;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.beforeGameInited)();\n    if (window.hhPlusPlusConfig != null)\n        return window.hhPlusPlusConfig;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.afterGameInited)();\n    if (window.hhPlusPlusConfig != null)\n        return window.hhPlusPlusConfig;\n    await new Promise($);\n    return window.hhPlusPlusConfig;\n})();\nfunction getHHPlusPlus() {\n    return hhPlusPlusPromise;\n}\nfunction getHHPlusPlusConfig() {\n    return hhPlusPlusConfigPromise;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/hh-plus-plus.ts?");

/***/ }),

/***/ "./src/interop/match-rating.ts":
/*!*************************************!*\
  !*** ./src/interop/match-rating.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   avoidOverlappingMatchRating: () => (/* binding */ avoidOverlappingMatchRating)\n/* harmony export */ });\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n\nasync function avoidOverlappingMatchRating() {\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_0__.afterGameInited)();\n    const update = () => {\n        if ($('.matchRating').length > 0) {\n            $('.sim-result').addClass('sim-top');\n        }\n    };\n    update();\n    const observer = new MutationObserver(update);\n    document.querySelectorAll('.player_team_block.opponent, .season_arena_opponent_container').forEach(e => {\n        observer.observe(e, { childList: true, subtree: true });\n    });\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/interop/match-rating.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   main: () => (/* binding */ main)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global */ \"./src/global.ts\");\n/* harmony import */ var _page_troll_pre_battle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./page/troll-pre-battle */ \"./src/page/troll-pre-battle.ts\");\n/* harmony import */ var _page_edit_team__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./page/edit-team */ \"./src/page/edit-team.ts\");\n/* harmony import */ var _page_league_battle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page/league-battle */ \"./src/page/league-battle.ts\");\n/* harmony import */ var _page_league_pre_battle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./page/league-pre-battle */ \"./src/page/league-pre-battle.ts\");\n/* harmony import */ var _page_pantheon_pre_battle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./page/pantheon-pre-battle */ \"./src/page/pantheon-pre-battle.ts\");\n/* harmony import */ var _page_season_arena__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./page/season-arena */ \"./src/page/season-arena.ts\");\n/* harmony import */ var _page_shop__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./page/shop */ \"./src/page/shop.ts\");\n/* harmony import */ var _page_teams__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./page/teams */ \"./src/page/teams.ts\");\n/* harmony import */ var _page_tower_of_fame__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./page/tower-of-fame */ \"./src/page/tower-of-fame.ts\");\n/* harmony import */ var _store_unused__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./store/unused */ \"./src/store/unused.ts\");\n/* harmony import */ var _interop_match_rating__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interop/match-rating */ \"./src/interop/match-rating.ts\");\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _interop_hh_plus_plus_league__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./interop/hh-plus-plus-league */ \"./src/interop/hh-plus-plus-league.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function main() {\n    (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_12__.registerConfig)();\n    (0,_interop_hh_plus_plus_league__WEBPACK_IMPORTED_MODULE_13__.replaceHHPlusPlusLeague)();\n    [\n        _page_edit_team__WEBPACK_IMPORTED_MODULE_2__.EditTeamPage,\n        _page_league_battle__WEBPACK_IMPORTED_MODULE_3__.LeagueBattlePage,\n        _page_league_pre_battle__WEBPACK_IMPORTED_MODULE_4__.LeaguePreBattlePage,\n        _page_pantheon_pre_battle__WEBPACK_IMPORTED_MODULE_5__.PantheonPreBattlePage,\n        _page_season_arena__WEBPACK_IMPORTED_MODULE_6__.SeasonArenaPage,\n        _page_shop__WEBPACK_IMPORTED_MODULE_7__.ShopPage,\n        _page_teams__WEBPACK_IMPORTED_MODULE_8__.TeamsPage,\n        _page_tower_of_fame__WEBPACK_IMPORTED_MODULE_9__.TowerOfFamePage,\n        _page_troll_pre_battle__WEBPACK_IMPORTED_MODULE_1__.TrollPreBattlePage,\n    ].forEach(pageRun => {\n        queueMicrotask(() => {\n            pageRun(window);\n        });\n    });\n    (0,_interop_match_rating__WEBPACK_IMPORTED_MODULE_11__.avoidOverlappingMatchRating)();\n    (0,_store_unused__WEBPACK_IMPORTED_MODULE_10__.removeUnusedData)();\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/main.ts?");

/***/ }),

/***/ "./src/page/base/common.ts":
/*!*********************************!*\
  !*** ./src/page/base/common.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertGameWindow: () => (/* binding */ assertGameWindow),\n/* harmony export */   loadMythicBoosterMultiplier: () => (/* binding */ loadMythicBoosterMultiplier),\n/* harmony export */   loadOpponentTeam: () => (/* binding */ loadOpponentTeam)\n/* harmony export */ });\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/team */ \"./src/store/team.ts\");\n\n\nfunction assertGameWindow(window) {\n    // from jquery.js\n    const { $ } = window;\n    if ($ == null)\n        throw new Error('jQuery is not found.');\n    // from default.js\n    const { localStorageGetItem, localStorageSetItem, get_lang, get_dec_and_sep } = window;\n    if (localStorageGetItem == null)\n        throw new Error('localStorageGetItem is not found.');\n    if (localStorageSetItem == null)\n        throw new Error('localStorageSetItem is not found.');\n    if (get_lang == null)\n        throw new Error('get_lang is not found.');\n    if (get_dec_and_sep == null)\n        throw new Error('get_dec_and_sep is not found.');\n    // from head\n    const { SITE_ROOT, IMAGES_URL } = window;\n    if (SITE_ROOT == null)\n        throw new Error('SITE_ROOT is not found.');\n    if (IMAGES_URL == null)\n        throw new Error('IMAGES_URL is not found.');\n    // from body\n    const { Hero } = window;\n    if (Hero == null)\n        throw new Error('Hero is not found.');\n}\nfunction loadOpponentTeam(window) {\n    const { localStorageGetItem } = window;\n    const battleType = localStorageGetItem('battle_type');\n    const opponentTeamData = (0,_store_team__WEBPACK_IMPORTED_MODULE_1__.loadOpponentTeamData)();\n    if (opponentTeamData == null || opponentTeamData.battleType !== battleType)\n        return null;\n    const opponentIdMap = {\n        leagues: () => localStorageGetItem('leagues_id'),\n        trolls: () => localStorageGetItem('troll_id'),\n        pantheon: () => localStorageGetItem('pantheon_id'),\n    };\n    const opponentId = opponentIdMap[battleType]?.();\n    if (opponentId === opponentTeamData.opponentId)\n        return opponentTeamData.team;\n    return null;\n}\nfunction loadMythicBoosterMultiplier(battleType) {\n    return (0,_store_booster__WEBPACK_IMPORTED_MODULE_0__.loadBoosterData)().mythic?.[battleType] ?? null;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/base/common.ts?");

/***/ }),

/***/ "./src/page/edit-team.ts":
/*!*******************************!*\
  !*** ./src/page/edit-team.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditTeamPage: () => (/* binding */ EditTeamPage),\n/* harmony export */   fetchTeamParams: () => (/* binding */ fetchTeamParams)\n/* harmony export */ });\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _data_fighter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/fighter */ \"./src/data/fighter.ts\");\n/* harmony import */ var _store_hero__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/hero */ \"./src/store/hero.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertEditTeamWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_7__.assertGameWindow)(window);\n    const { hero_data, teamGirls, theme_resonance_bonuses, availableGirls } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (teamGirls == null)\n        throw new Error('teamGirls is not found.');\n    if (theme_resonance_bonuses == null)\n        throw new Error('theme_resonance_bonuses is not found.');\n    if (availableGirls == null)\n        throw new Error('availableGirls is not found.');\n}\nasync function EditTeamPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_6__.checkPage)('/edit-team.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.beforeGameInited)();\n    assertEditTeamWindow(window);\n    const { availableGirls } = window;\n    const girlMap = Object.fromEntries(availableGirls.map((e) => [e.id_girl, e]));\n    const { get_lang, get_dec_and_sep } = window;\n    const separator = get_dec_and_sep(get_lang()).sep;\n    const parseNumber = (str) => parseFloat(str.trim().replaceAll(separator, ''));\n    const getTeamPower = () => parseNumber($('.team-total-power').text());\n    const getCaracs = () => {\n        const getStat = (name) => parseNumber($(`#stats-${name}`).text());\n        return {\n            damage: getStat('damage'),\n            defense: getStat('defense'),\n            ego: getStat('ego'),\n            chance: getStat('chance'),\n        };\n    };\n    const getGirls = () => {\n        const girls = Array(7);\n        document.querySelectorAll('.team-hexagon [data-girl-id]').forEach(e => {\n            const index = e.dataset.teamMemberPosition;\n            const girlId = e.dataset.girlId;\n            if (index != null && girlId != null) {\n                girls[+index] = girlMap[girlId];\n            }\n        });\n        return girls.filter(e => e != null);\n    };\n    const getTeam = () => ({\n        caracs: getCaracs(),\n        total_power: getTeamPower(),\n        girls: getGirls(),\n        id_team: window.hero_data.team.id_team,\n    });\n    addSimulation(window);\n    saveTeamSimulationParams(window);\n    async function addSimulation(window) {\n        const { hero_data, teamGirls, theme_resonance_bonuses, availableGirls, localStorageGetItem } = window;\n        const opponentTeam = (0,_base_common__WEBPACK_IMPORTED_MODULE_7__.loadOpponentTeam)(window);\n        if (opponentTeam == null)\n            return;\n        const opponentTeam2 = opponentTeam;\n        const initialTeam = hero_data.team;\n        if (initialTeam == null)\n            return;\n        const girlsMap = new Map(Object.values(availableGirls).map((e) => [e.id_girl, e]));\n        const battleType = localStorageGetItem('battle_type');\n        const mythicBoosterMultiplier = (0,_base_common__WEBPACK_IMPORTED_MODULE_7__.loadMythicBoosterMultiplier)(battleType);\n        if (mythicBoosterMultiplier == null)\n            return;\n        const elements = Object.fromEntries(initialTeam.synergies.map((e) => [e.element.type, e.element]));\n        let currentTeam = { ...initialTeam };\n        let hasAssumptions = false;\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n        const $iconArea = $('.player_team_block.battle_hero .icon-area');\n        const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_9__.ChanceView();\n        $iconArea.before(chanceView.getElement().addClass('sim-left'));\n        const pointsView = battleType === 'leagues' ? new _dom_points__WEBPACK_IMPORTED_MODULE_0__.PointsView() : null;\n        if (pointsView != null) {\n            $iconArea.before(pointsView.getElement().addClass('sim-right'));\n        }\n        update();\n        const statsContainer = document.querySelector('.player_stats');\n        if (statsContainer != null) {\n            const observer = new MutationObserver(updateStats);\n            observer.observe(statsContainer, {\n                subtree: true,\n                childList: true,\n            });\n        }\n        const teamHexagon = document.querySelector('.team-hexagon');\n        if (teamHexagon != null) {\n            const observer = new MutationObserver(updateTeam);\n            observer.observe(teamHexagon, {\n                subtree: true,\n                attributes: true,\n                attributeFilter: ['src'],\n            });\n        }\n        function updateTeam() {\n            const oldTeamGirls = currentTeam.girls;\n            const oldTeamCenterGirlId = +oldTeamGirls[0]?.id_girl;\n            const oldTeamIdSet = new Set(oldTeamGirls.map(e => +e.id_girl));\n            const newTeamGirlIds = getTeam().girls.map(e => +e.id_girl);\n            const newTeamCenterGirlId = newTeamGirlIds[0];\n            if (newTeamGirlIds.length == oldTeamGirls.length) {\n                if (newTeamGirlIds.every(e => oldTeamIdSet.has(e))) {\n                    if (newTeamCenterGirlId === oldTeamCenterGirlId) {\n                        // skip sim\n                        return;\n                    }\n                    else {\n                        // update sim\n                        currentTeam.girls = newTeamGirlIds.map(e => oldTeamGirls.find(girl => +girl.id_girl === +e));\n                        update();\n                        return;\n                    }\n                }\n            }\n            // reset sim\n            chanceView.reset();\n            pointsView?.reset();\n        }\n        function updateStats() {\n            const caracs = getCaracs();\n            const teamMembers = Array.from(document.querySelectorAll('.team-member-container[data-girl-id]'))\n                .sort((x, y) => Number(x.dataset.teamMemberPosition) - Number(y.dataset.teamMemberPosition))\n                .map(e => girlsMap.get(e.dataset.girlId));\n            hasAssumptions = false;\n            currentTeam.girls = teamMembers.map(e => {\n                const id = e.id_girl;\n                const girlData = teamGirls.find((girl) => girl.id_girl == id);\n                if (girlData != null)\n                    return { ...e, skills: girlData.skills };\n                const skills = {};\n                const tier4 = e.skill_tiers_info[4]?.skill_points_used ?? 0;\n                if (tier4) {\n                    hasAssumptions = true;\n                    skills[9] = { skill: { percentage_value: 0.2 * tier4 } };\n                    skills[10] = { skill: { percentage_value: 0 } };\n                }\n                const tier5 = e.skill_tiers_info[5]?.skill_points_used ?? 0;\n                if (tier5 > 0) {\n                    const element = e.element;\n                    if (['darkness', 'sun'].includes(element))\n                        skills[11] = { skill: { percentage_value: 7 * tier5 } }; // stun\n                    if (['stone', 'light'].includes(element))\n                        skills[12] = { skill: { percentage_value: 8 * tier5 } }; // shield\n                    if (['nature', 'psychic'].includes(element))\n                        skills[13] = { skill: { percentage_value: 20 * tier5 } }; // reflect\n                    if (['fire', 'water'].includes(element))\n                        skills[14] = { skill: { percentage_value: 6 * tier5 } }; // execute\n                }\n                return { ...e, skills };\n            });\n            const elementCounts = Object.fromEntries(Object.keys(elements).map(e => [e, 0]));\n            teamMembers.forEach(e => {\n                elementCounts[e.element]++;\n            });\n            currentTeam.synergies = initialTeam.synergies.map(e => ({\n                ...e,\n                element: { type: e.element.type },\n                bonus_multiplier: e.harem_bonus_multiplier + e.team_bonus_per_girl * elementCounts[e.element.type],\n            }));\n            const theme = Object.entries(elementCounts)\n                .filter(([_, count]) => count >= 3)\n                .map(([type, _]) => type);\n            currentTeam.theme_elements = theme.map(e => elements[e]);\n            currentTeam.theme = theme.join(',');\n            if (theme.length > 0) {\n                const balancedBonus = theme_resonance_bonuses[''];\n                if (balancedBonus) {\n                    const { defense, chance } = balancedBonus;\n                    if (defense)\n                        caracs.defense /= Math.pow(1.02, defense / 2);\n                    if (chance)\n                        caracs.chance /= Math.pow(1.04, chance / 4);\n                }\n                theme.forEach(element => {\n                    const bonus = theme_resonance_bonuses[element];\n                    if (bonus) {\n                        const { defense, chance } = bonus;\n                        if (defense)\n                            caracs.defense *= Math.pow(1.02, defense / 2);\n                        if (chance)\n                            caracs.chance *= Math.pow(1.04, chance / 4);\n                    }\n                });\n            }\n            currentTeam.caracs = caracs;\n            update();\n        }\n        function update() {\n            const _hasAssumptions = hasAssumptions;\n            const player = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_12__.calcBattlerFromTeams)(currentTeam, opponentTeam2, mythicBoosterMultiplier ?? 1);\n            const opponent = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_12__.calcBattlerFromTeams)(opponentTeam2, currentTeam);\n            const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_1__.simulateFromBattlers)('Standard', player, opponent).then(result => {\n                return {\n                    ...result,\n                    hasAssumptions: _hasAssumptions,\n                };\n            });\n            chanceView.updateAsync(resultPromise);\n            chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_10__.createBattleTable)(player, opponent));\n            if (pointsView != null) {\n                pointsView.updateAsync(resultPromise);\n                resultPromise.then(result => {\n                    pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_11__.createPointsTable)(result));\n                });\n            }\n        }\n    }\n    async function saveTeamSimulationParams(window) {\n        const { Hero, hero_data } = window;\n        const initialTeam = hero_data.team;\n        const mergedInitialTeam = { ...initialTeam, girls: initialTeam.girls.map(e => girlMap[e.id_girl]) };\n        updateTeamParams(mergedInitialTeam, Hero);\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n        const validateButton = document.getElementById('validate-team');\n        if (validateButton != null) {\n            validateButton.parentNode?.addEventListener('click', () => {\n                updateTeamParams(getTeam(), Hero);\n            }, true);\n        }\n    }\n}\nlet fetchedWindow = null;\nasync function fetchEditTeamPage(id_team) {\n    if (fetchedWindow == null) {\n        fetchedWindow = (async () => {\n            const page = await fetch(`edit-team.html?id_team=${id_team}`);\n            const html = await page.text();\n            const teamGirls = JSON.parse(html.match(/var\\s+teamGirls\\s*=\\s*(\\[.*?\\]);/)?.[1]);\n            const theme_resonance_bonuses = JSON.parse(html.match(/var\\s+theme_resonance_bonuses\\s*=\\s*((?:\\{|\\[).*?(?:\\}|\\]));/)?.[1]);\n            const hero_data = eval('(' + html.match(/var\\s+hero_data\\s*=\\s*(\\{.*?\\});/s)?.[1] + ')');\n            const availableGirls = JSON.parse(html.match(/var\\s+availableGirls\\s*=\\s*(\\[.*?\\]);/)?.[1]);\n            return {\n                teamGirls,\n                theme_resonance_bonuses,\n                hero_data,\n                availableGirls,\n            };\n        })();\n    }\n    return fetchedWindow;\n}\nlet teamParams;\nasync function fetchTeamParams(teamId, hero) {\n    if (teamParams != null)\n        return teamParams;\n    const editTeamPage = await fetchEditTeamPage(teamId);\n    const girlMap = Object.fromEntries(editTeamPage.availableGirls.map(e => [e.id_girl, e]));\n    const team = {\n        ...editTeamPage.hero_data.team,\n        girls: editTeamPage.hero_data.team.girls.map(e => girlMap[e.id_girl]),\n    };\n    teamParams = updateTeamParams(team, hero);\n    return teamParams;\n}\nfunction updateTeamParams(team, hero) {\n    const classBonus = (0,_store_hero__WEBPACK_IMPORTED_MODULE_3__.loadClassBonus)();\n    if (classBonus == null)\n        return;\n    const boosterBonus = (0,_store_booster__WEBPACK_IMPORTED_MODULE_8__.loadBoosterBonus)();\n    if (boosterBonus == null)\n        return;\n    const heroCaracs = (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.multiplyFighterCaracs)((0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.getFighterCaracsFromHero)(hero), classBonus);\n    const girlArmorCaracs = team.girls\n        .flatMap(girl => girl.armor.map(armor => (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.toFighterCaracs)(armor.caracs)))\n        .reduce((p, c) => (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.addFighterCaracs)(p, c), (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.toFighterCaracs)({}));\n    const teamCaracs = new _data_fighter__WEBPACK_IMPORTED_MODULE_2__.FighterCaracsCalculator()\n        .add((0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.getFighterCaracsFromTeamPower)(team.total_power))\n        .multiply(classBonus)\n        .add(girlArmorCaracs)\n        .result();\n    const combinedBonus = new _data_fighter__WEBPACK_IMPORTED_MODULE_2__.FighterCaracsCalculator()\n        .add(team.caracs)\n        .divide(boosterBonus.multiplier)\n        .subtract(boosterBonus.addend)\n        .divide((0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.addFighterCaracs)(teamCaracs, heroCaracs))\n        .result();\n    const multiplier = (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.multiplyFighterCaracs)(classBonus, combinedBonus);\n    const addend = (0,_data_fighter__WEBPACK_IMPORTED_MODULE_2__.multiplyFighterCaracs)(teamCaracs, combinedBonus);\n    const teamId = +team.id_team;\n    const teamParams = { teamId, multiplier, addend, caracs: team.caracs };\n    (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.saveTeamParams)(teamParams);\n    return teamParams;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/edit-team.ts?");

/***/ }),

/***/ "./src/page/league-battle.ts":
/*!***********************************!*\
  !*** ./src/page/league-battle.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LeagueBattlePage: () => (/* binding */ LeagueBattlePage)\n/* harmony export */ });\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\nfunction assertLeagueBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_3__.assertGameWindow)(window);\n    const { hero_fighter, opponent_fighter } = window;\n    if (hero_fighter == null)\n        throw new Error('hero_fighter is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function LeagueBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_2__.checkPage)('/league-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_1__.beforeGameInited)();\n    assertLeagueBattleWindow(window);\n    updatePlayerLeagueTeam(window);\n}\nfunction updatePlayerLeagueTeam(window) {\n    const { hero_fighter } = window;\n    (0,_store_team__WEBPACK_IMPORTED_MODULE_0__.savePlayerLeagueTeam)(hero_fighter);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/league-battle.ts?");

/***/ }),

/***/ "./src/page/league-pre-battle.ts":
/*!***************************************!*\
  !*** ./src/page/league-pre-battle.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LeaguePreBattlePage: () => (/* binding */ LeaguePreBattlePage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _dom_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom/popup */ \"./src/dom/popup.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction asserLeaguetPreBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_13__.assertGameWindow)(window);\n    const { hero_data, opponent_fighter } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function LeaguePreBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_12__.checkPage)('/leagues-pre-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.beforeGameInited)();\n    asserLeaguetPreBattleWindow(window);\n    updatePlayerLeagueTeam(window);\n    updateMythicBooster(window);\n    saveOpponentTeam(window);\n    addChanceAndPoints(window);\n    addBoosterSimulation(window);\n}\nfunction updatePlayerLeagueTeam(window) {\n    const { hero_data } = window;\n    (0,_store_team__WEBPACK_IMPORTED_MODULE_10__.savePlayerLeagueTeam)(hero_data.team);\n}\nfunction updateMythicBooster(window) {\n    const { hero_data, opponent_fighter } = window;\n    const multiplier = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_7__.calcMythicBoosterMultiplierFromFighters)(hero_data, opponent_fighter.player);\n    const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_9__.loadMythicBoosterBonus)();\n    mythicBoosterData.leagues = multiplier;\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_9__.saveMythicBoosterBonus)(mythicBoosterData);\n}\nasync function saveOpponentTeam(window) {\n    const { opponent_fighter, localStorageSetItem } = window;\n    const opponentId = (0,_utils_page__WEBPACK_IMPORTED_MODULE_12__.getOpponentIdFromUrl)();\n    const opponentTeam = opponent_fighter.player.team;\n    const update = () => {\n        localStorageSetItem('battle_type', 'leagues');\n        localStorageSetItem('leagues_id', opponentId);\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_10__.saveOpponentTeamData)({\n            battleType: 'leagues',\n            opponentId,\n            team: opponentTeam,\n        });\n    };\n    update();\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nasync function addChanceAndPoints(window) {\n    const { hero_data, opponent_fighter } = window;\n    const { player, opponent } = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_8__.calcBattlersFromFighters)(hero_data, opponent_fighter.player);\n    const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_6__.simulateFromBattlers)('Standard', player, opponent);\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.afterGameInited)();\n    const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_2__.ChanceView();\n    chanceView.updateAsync(resultPromise);\n    chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n    $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n    const pointsView = new _dom_points__WEBPACK_IMPORTED_MODULE_3__.PointsView();\n    pointsView.updateAsync(resultPromise);\n    resultPromise.then(result => {\n        pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_4__.createPointsTable)(result));\n    });\n    $('.opponent .icon-area').before(pointsView.getElement().addClass('sim-right'));\n}\nasync function addBoosterSimulation(window) {\n    const { hero_data, opponent_fighter } = window;\n    const playerTeam = hero_data.team;\n    const opponentTeam = opponent_fighter.player.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.afterGameInited)();\n    const popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_5__.Popup('Booster simulator');\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-ame\"></div></div>')\n        .addClass('sim-right')\n        .attr('tooltip', 'Booster simulator');\n    let inited = false;\n    iconButton.on('click', () => {\n        if (!inited) {\n            inited = true;\n            popup.setContent('Now loading...');\n            queueMicrotask(async () => {\n                const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_7__.simulateBoosterCombinationWithAME)(playerTeam, opponentTeam);\n                if (results == null || results.length === 0) {\n                    popup.setContent('Error<br>1. Go to the market page<br>2. Go to every team editing page (not team selecting page)<br>3. Try again');\n                }\n                else {\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_1__.createBoosterPointsTable)(results));\n                }\n            });\n        }\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/league-pre-battle.ts?");

/***/ }),

/***/ "./src/page/pantheon-pre-battle.ts":
/*!*****************************************!*\
  !*** ./src/page/pantheon-pre-battle.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PantheonPreBattlePage: () => (/* binding */ PantheonPreBattlePage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_booster_simulation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/booster-simulation */ \"./src/dom/booster-simulation.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n/* harmony import */ var _dom_popup__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../dom/popup */ \"./src/dom/popup.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertPantheonPreBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_10__.assertGameWindow)(window);\n    const { hero_data, opponent_fighter } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function PantheonPreBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_9__.checkPage)('/pantheon-pre-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.beforeGameInited)();\n    assertPantheonPreBattleWindow(window);\n    updateMythicBooster(window);\n    saveOpponentTeam(window);\n    addChance(window);\n    addBoosterSimulator(window);\n}\nfunction updateMythicBooster(window) {\n    const { hero_data, opponent_fighter } = window;\n    const multiplier = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_4__.calcMythicBoosterMultiplierFromFighters)(hero_data, opponent_fighter.player);\n    const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.loadMythicBoosterBonus)();\n    mythicBoosterData.pantheon = multiplier;\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.saveMythicBoosterBonus)(mythicBoosterData);\n}\nasync function saveOpponentTeam(window) {\n    const { opponent_fighter, localStorageSetItem } = window;\n    const opponentId = (0,_utils_page__WEBPACK_IMPORTED_MODULE_9__.getOpponentIdFromUrl)();\n    const opponentTeam = opponent_fighter.player.team;\n    const update = () => {\n        localStorageSetItem('battle_type', 'pantheon');\n        localStorageSetItem('pantheon_id', opponentId);\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_7__.saveOpponentTeamData)({\n            battleType: 'pantheon',\n            opponentId,\n            team: opponentTeam,\n        });\n    };\n    update();\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nasync function addChance(window) {\n    const { hero_data, opponent_fighter } = window;\n    const { player, opponent } = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_5__.calcBattlersFromFighters)(hero_data, opponent_fighter.player);\n    const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_3__.simulateFromBattlers)('Chance', player, opponent);\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_1__.ChanceView();\n    chanceView.updateAsync(resultPromise);\n    chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n    $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n}\nasync function addBoosterSimulator(window) {\n    const { hero_data, opponent_fighter } = window;\n    const playerTeam = hero_data.team;\n    const opponentTeam = opponent_fighter.player.team;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_8__.afterGameInited)();\n    const popup = new _dom_popup__WEBPACK_IMPORTED_MODULE_11__.Popup('Booster simulator');\n    const iconButton = $('<div class=\"sim-result\"><div class=\"sim-icon-button sim-icon-headband\"></div></div>')\n        .addClass('sim-right')\n        .attr('tooltip', 'Booster simulator');\n    let inited = false;\n    iconButton.on('click', () => {\n        if (!inited) {\n            inited = true;\n            popup.setContent('Now loading...');\n            queueMicrotask(async () => {\n                const results = await (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_4__.simulateBoosterCombinationWithHeadband)(playerTeam, opponentTeam);\n                if (results == null || results.length === 0) {\n                    popup.setContent('Error<br>1. Go to the market page<br>2. Go to every team editing page (not team selecting page)<br>3. Try again');\n                }\n                else {\n                    popup.setContent((0,_dom_booster_simulation__WEBPACK_IMPORTED_MODULE_2__.createBoosterChanceTable)(results));\n                }\n            });\n        }\n        popup.toggle();\n    });\n    $('.battle_hero .icon-area').before(iconButton);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/pantheon-pre-battle.ts?");

/***/ }),

/***/ "./src/page/season-arena.ts":
/*!**********************************!*\
  !*** ./src/page/season-arena.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SeasonArenaPage: () => (/* binding */ SeasonArenaPage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_mojo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/mojo */ \"./src/dom/mojo.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\nfunction assertSeasonArenaWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_9__.assertGameWindow)(window);\n    const { hero_data, caracs_per_opponent, opponents } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (caracs_per_opponent == null)\n        throw new Error('caracs_per_opponent is not found.');\n    if (opponents == null)\n        throw new Error('opponents is not found.');\n}\nasync function SeasonArenaPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_8__.checkPage)('/season-arena.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_7__.beforeGameInited)();\n    assertSeasonArenaWindow(window);\n    const { hero_data, caracs_per_opponent, opponents } = window;\n    updateMythicBooster();\n    addSimulation();\n    async function addSimulation() {\n        opponents.forEach(async (opponent_fighter) => {\n            const opponentFighter = opponent_fighter.player;\n            const opponentId = opponentFighter.id_fighter;\n            const playerFighter = { ...hero_data, ...caracs_per_opponent[opponentId] };\n            const player = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_4__.calcBattlerFromFighters)(playerFighter, opponentFighter);\n            const opponent = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_4__.calcBattlerFromFighters)(opponentFighter, playerFighter);\n            const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_3__.simulateFromBattlers)('Chance', player, opponent);\n            const mojo = +opponent_fighter.rewards.rewards.find(e => e.type === 'victory_points').value;\n            await (0,_utils_async__WEBPACK_IMPORTED_MODULE_7__.afterGameInited)();\n            const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_1__.ChanceView();\n            chanceView.updateAsync(resultPromise);\n            chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n            const mojoView = (0,_dom_mojo__WEBPACK_IMPORTED_MODULE_2__.createMojoElement$)(resultPromise, mojo).addClass('sim-right');\n            $(`[data-opponent=\"${opponentId}\"] .icon-area`)\n                .before(chanceView.getElement().addClass('sim-left'))\n                .before(mojoView);\n        });\n    }\n    function updateMythicBooster() {\n        const opponent = opponents[0].player;\n        const playerCaracs = caracs_per_opponent[opponent.id_fighter];\n        const counterBonus = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_5__.calcCounterBonus)(hero_data.team, opponent.team);\n        const percentage = Math.round((100 * playerCaracs.damage) / hero_data.team.caracs.damage / counterBonus);\n        const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.loadMythicBoosterBonus)();\n        mythicBoosterData.seasons = percentage / 100;\n        (0,_store_booster__WEBPACK_IMPORTED_MODULE_6__.saveMythicBoosterBonus)(mythicBoosterData);\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/season-arena.ts?");

/***/ }),

/***/ "./src/page/shop.ts":
/*!**************************!*\
  !*** ./src/page/shop.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShopPage: () => (/* binding */ ShopPage)\n/* harmony export */ });\n/* harmony import */ var _data_booster__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/booster */ \"./src/data/booster.ts\");\n/* harmony import */ var _data_fighter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/fighter */ \"./src/data/fighter.ts\");\n/* harmony import */ var _data_hero__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/hero */ \"./src/data/hero.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_hero__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/hero */ \"./src/store/hero.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\nfunction assertShopWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_8__.assertGameWindow)(window);\n    const { equipped_armor, equipped_booster } = window;\n    if (equipped_armor == null)\n        throw new Error('equipped_armor is not found.');\n    if (equipped_booster == null)\n        throw new Error('equipped_booster is not found.');\n}\nasync function ShopPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_7__.checkPage)('/shop.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_6__.beforeGameInited)();\n    assertShopWindow(window);\n    updateBoosterBonus(window);\n    updateHeroData(window);\n}\nfunction updateHeroData(window) {\n    updateGinsengCaracs(window);\n    updateHeroClassBonus(window);\n    // I want to observe the use of boosters and the replacement of hero armor.\n    // Changing the game code is a bad idea, but I don't know of any other good solution.\n    const Hero = window.Hero;\n    const Hero_updates = Hero.updates;\n    if (typeof Hero_updates === 'function') {\n        Hero.updates = function updates(...args) {\n            const ret = Hero_updates(...args);\n            try {\n                updateGinsengCaracs(window);\n                updateHeroClassBonus(window);\n            }\n            catch (e) { }\n            return ret;\n        };\n    }\n}\nfunction updateGinsengCaracs(window) {\n    const { equipped_armor } = window;\n    const ginsengCaracs = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_3__.simulateGinsengCaracs)(window.Hero, getArmorCaracs(equipped_armor));\n    (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.saveGinsengCaracs)(ginsengCaracs);\n}\nfunction getArmorCaracs(equipped_armor) {\n    return Object.values(equipped_armor)\n        .map(e => (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)(e.caracs))\n        .reduce((p, c) => (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.addHeroCaracs)(p, c), (0,_data_hero__WEBPACK_IMPORTED_MODULE_2__.toHeroCaracs)({}));\n}\nfunction updateHeroClassBonus(window) {\n    const { equipped_armor, Hero } = window;\n    const heroClass = Hero.infos.class;\n    const classBonus = Object.values(equipped_armor)\n        .map(e => e.resonance_bonuses?.class)\n        .filter((e) => e != null)\n        .filter(e => +e.identifier === heroClass)\n        .reduce((p, c) => {\n        p[c.resonance] += c.bonus;\n        return p;\n    }, { damage: 0, ego: 0 });\n    (0,_store_hero__WEBPACK_IMPORTED_MODULE_5__.saveClassBonus)(new _data_fighter__WEBPACK_IMPORTED_MODULE_1__.FighterCaracsCalculator(classBonus).divide(100).add(1).result());\n}\nfunction updateBoosterBonus(window) {\n    const { equipped_booster } = window;\n    const boosters = equipped_booster.normal.concat(equipped_booster.mythic);\n    const boosterData = (0,_data_booster__WEBPACK_IMPORTED_MODULE_0__.getBoosterData)(boosters);\n    boosterData.mythic = {\n        leagues: 1,\n        seasons: 1,\n        trolls: 1,\n        pantheon: 1,\n        ...boosterData.mythic,\n    };\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_4__.saveBoosterData)(boosterData);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/shop.ts?");

/***/ }),

/***/ "./src/page/teams.ts":
/*!***************************!*\
  !*** ./src/page/teams.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TeamsPage: () => (/* binding */ TeamsPage),\n/* harmony export */   fetchPlayerLeaguesTeam: () => (/* binding */ fetchPlayerLeaguesTeam)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _dom_points__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/points */ \"./src/dom/points.ts\");\n/* harmony import */ var _dom_points_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/points-table */ \"./src/dom/points-table.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_team__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../simulator/team */ \"./src/simulator/team.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\nfunction assertTeamsWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_9__.assertGameWindow)(window);\n    const { teams_data } = window;\n    if (teams_data == null)\n        throw new Error('teams_data is not found.');\n}\nasync function TeamsPage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_8__.checkPage)('/teams.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_7__.beforeGameInited)();\n    assertTeamsWindow(window);\n    addSimulation(window);\n    updateLeagueTeam(window);\n}\nasync function addSimulation(window) {\n    const { teams_data, localStorageGetItem } = window;\n    const opponentTeam = (0,_base_common__WEBPACK_IMPORTED_MODULE_9__.loadOpponentTeam)(window);\n    if (opponentTeam == null)\n        return;\n    const battleType = localStorageGetItem('battle_type');\n    const mythicBoosterMultiplier = (0,_base_common__WEBPACK_IMPORTED_MODULE_9__.loadMythicBoosterMultiplier)(battleType);\n    if (mythicBoosterMultiplier == null)\n        return;\n    const teamMap = Object.fromEntries(Object.values(teams_data)\n        .filter((e) => e.id_team != null && !e.locked)\n        .map((playerTeam) => {\n        const player = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_5__.calcBattlerFromTeams)(playerTeam, opponentTeam, mythicBoosterMultiplier);\n        const opponent = (0,_simulator_team__WEBPACK_IMPORTED_MODULE_5__.calcBattlerFromTeams)(opponentTeam, playerTeam);\n        const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_4__.simulateFromBattlers)('Standard', player, opponent);\n        return [playerTeam.id_team, { resultPromise, player, opponent }];\n    }));\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_7__.afterGameInited)();\n    update();\n    const observer = new MutationObserver(update);\n    const teamSelector = document.querySelector('.teams-grid-container');\n    if (teamSelector != null) {\n        observer.observe(teamSelector, {\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['class'],\n        });\n    }\n    function update() {\n        const id = $('.selected-team').data('idTeam');\n        const team = teamMap[id];\n        if (team == null)\n            return;\n        const { resultPromise, player, opponent } = team;\n        const $iconArea = $('.team-right-part-container .icon-area');\n        const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_1__.ChanceView();\n        chanceView.updateAsync(resultPromise);\n        chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n        $iconArea.before(chanceView.getElement().addClass('sim-left'));\n        if (battleType === 'leagues') {\n            const pointsView = new _dom_points__WEBPACK_IMPORTED_MODULE_2__.PointsView();\n            pointsView.updateAsync(resultPromise);\n            resultPromise.then(result => {\n                pointsView.setTooltip((0,_dom_points_table__WEBPACK_IMPORTED_MODULE_3__.createPointsTable)(result));\n            });\n            $iconArea.before(pointsView.getElement().addClass('sim-right'));\n        }\n    }\n}\nfunction updateLeagueTeam(window) {\n    const { teams_data, localStorageGetItem } = window;\n    const leaguesTeam = Object.values(teams_data).find(team => team.selected_for_battle_type.includes('leagues'));\n    if (leaguesTeam != null && leaguesTeam.id_team != null && leaguesTeam.theme != null) {\n        const team = leaguesTeam;\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_6__.savePlayerLeagueTeam)(team);\n    }\n    const selectButton = document.getElementById('btn-select-team');\n    selectButton?.addEventListener('click', () => {\n        if (localStorageGetItem('battle_type') === 'leagues') {\n            const selectedTeamElement = document.querySelector('.selected-team');\n            const selectedIndex = selectedTeamElement.dataset.teamIndex;\n            const selectedTeam = teams_data[selectedIndex];\n            if (selectedTeam != null && selectedTeam.id_team != null && selectedTeam.theme != null) {\n                const team = selectedTeam;\n                (0,_store_team__WEBPACK_IMPORTED_MODULE_6__.savePlayerLeagueTeam)(team);\n            }\n        }\n    }, true);\n}\nlet fetchedWindow = null;\nasync function fetchTeamsPage() {\n    if (fetchedWindow == null) {\n        fetchedWindow = (async () => {\n            const teamsPage = await fetch('teams.html');\n            const teamsHtml = await teamsPage.text();\n            const teams_data = JSON.parse(teamsHtml.match(/var\\s+teams_data\\s*=\\s*(\\{.*?\\});/)?.[1]);\n            return { teams_data };\n        })();\n    }\n    return fetchedWindow;\n}\nlet playerLeagueTeam = null;\nasync function fetchPlayerLeaguesTeam() {\n    playerLeagueTeam = (async () => {\n        const { referrer } = document;\n        if (['teams.html', 'leagues-pre-battle.html', 'league-battle.html'].every(e => !referrer.includes(e))) {\n            try {\n                const teamsPageData = await fetchTeamsPage();\n                const teams_data = teamsPageData.teams_data;\n                const leaguesTeam = Object.values(teams_data).find((team) => team.selected_for_battle_type?.includes('leagues'));\n                if (leaguesTeam != null) {\n                    (0,_store_team__WEBPACK_IMPORTED_MODULE_6__.savePlayerLeagueTeam)(leaguesTeam);\n                    return leaguesTeam;\n                }\n            }\n            catch (e) { }\n        }\n        return (0,_store_team__WEBPACK_IMPORTED_MODULE_6__.loadPlayerLeagueTeam)();\n    })();\n    return playerLeagueTeam;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/teams.ts?");

/***/ }),

/***/ "./src/page/tower-of-fame.ts":
/*!***********************************!*\
  !*** ./src/page/tower-of-fame.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TowerOfFamePage: () => (/* binding */ TowerOfFamePage)\n/* harmony export */ });\n/* harmony import */ var _interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interop/hh-plus-plus-config */ \"./src/interop/hh-plus-plus-config.ts\");\n/* harmony import */ var _data_booster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/booster */ \"./src/data/booster.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/color */ \"./src/utils/color.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/string */ \"./src/utils/string.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n/* harmony import */ var _interop_hh_plus_plus__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../interop/hh-plus-plus */ \"./src/interop/hh-plus-plus.ts\");\n/* harmony import */ var _teams__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./teams */ \"./src/page/teams.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction assertTowerOfFameWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_9__.assertGameWindow)(window);\n    const { opponents_list } = window;\n    if (opponents_list == null)\n        throw new Error('opponents_list is not found.');\n}\nasync function TowerOfFamePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_7__.checkPage)('/tower-of-fame.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.beforeGameInited)();\n    assertTowerOfFameWindow(window);\n    const { opponents_list, Hero } = window;\n    const newBoosterData = updateBoosters(window);\n    changePowerSortToSimSort(window);\n    updateOpponentTeam();\n    async function changePowerSortToSimSort(window) {\n        const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n        if (!config.doSimulateLeagueTable)\n            return;\n        const playerId = Hero.infos.id;\n        const player = opponents_list.find(e => +e.player.id_fighter === playerId);\n        if (player == null)\n            return;\n        const mythicBoosterMultiplier = newBoosterData?.mythic.leagues;\n        if (mythicBoosterMultiplier == null)\n            return;\n        const playerTeam = await (0,_teams__WEBPACK_IMPORTED_MODULE_11__.fetchPlayerLeaguesTeam)();\n        if (playerTeam == null)\n            return;\n        let opponents = opponents_list.filter((opponent) => +opponent.player.id_fighter !== playerId);\n        if (!config.doSimulateFoughtOpponents) {\n            opponents = opponents.filter(opponent => Object.values(opponent.match_history)[0].filter(e => e != null).length < 3);\n        }\n        const resultPromises = opponents.map(opponent => (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_2__.simulateFromTeams)('Points', playerTeam, opponent.player.team, mythicBoosterMultiplier).then(result => [opponent.player.id_fighter, result]));\n        const results = await Promise.all(resultPromises);\n        const resultMap = Object.fromEntries(results);\n        const replacePowerDataWithSimResult = () => {\n            opponents_list.forEach(opponent => {\n                opponent.power = resultMap[opponent.player.id_fighter]?.avgPoints ?? 0;\n            });\n            if (config.replaceHHLeaguesPlusPlus) {\n                opponents_list.forEach(opponent => {\n                    opponent.sim = {\n                        ...opponent.sim,\n                        forSim: {\n                            ...opponent.sim?.forSim,\n                            playerTeam,\n                            opponentTeam: opponent.player.team,\n                            mythicBoosterMultiplier,\n                        },\n                    };\n                });\n            }\n        };\n        replacePowerDataWithSimResult();\n        const expectedPoints = opponents_list.reduce((p, c) => {\n            const matchHistory = Object.values(c.match_history)[0];\n            if (!Array.isArray(matchHistory))\n                return p;\n            const matchResults = matchHistory.filter((e) => e != null);\n            const knownPoints = matchResults.reduce((p, c) => p + parseInt(c.match_points), 0);\n            const remainingChallenges = 3 - matchResults.length;\n            return p + knownPoints + c.power * remainingChallenges;\n        }, 0);\n        const numOpponents = opponents_list.length - 1;\n        const expectedAverage = expectedPoints / numOpponents / 3;\n        const sumPoints = results.reduce((p, c) => p + c[1].avgPoints, 0) * 3;\n        const averagePoints = sumPoints / results.length / 3;\n        await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n        const $challengesHeader = $('.league_table .head-column[column=\"match_history_sorting\"] > span');\n        $challengesHeader.attr('tooltip', `Score expected: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.truncateSoftly)(expectedPoints, 1)}</em><br>Average: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.toLeaguePointsPerFight)(expectedAverage)}</em>`);\n        const $powerHeader = $('.league_table .head-column[column=\"power\"] > span');\n        $powerHeader.html($powerHeader.html().replace('Power', 'Sim'));\n        $powerHeader.attr('tooltip', `Sum: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.truncateSoftly)(sumPoints, 1)}</em><br>Average: <em>${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.toLeaguePointsPerFight)(averagePoints)}</em>`);\n        const replacePowerViewWithSimResult = () => {\n            const powerColumnMap = {};\n            document.querySelectorAll('.data-row.body-row').forEach(row => {\n                const id = row.querySelector('[id-member]')?.getAttribute('id-member');\n                const column = row.querySelector('.data-column[column=power]');\n                if (id == null || column == null)\n                    return;\n                powerColumnMap[id] ??= [];\n                powerColumnMap[id].push(column);\n            });\n            opponents_list.forEach(opponent => {\n                let $columnContent = $('<div></div>').addClass('sim-column');\n                const opponentId = opponent.player.id_fighter;\n                const result = resultMap[opponentId];\n                if (result != null) {\n                    let mark = '';\n                    if (result.minPoints >= 25)\n                        mark = '<div class=\"vCheck_mix_icn sim-mark\"></div>';\n                    $columnContent\n                        .html(`${mark}${(0,_utils_string__WEBPACK_IMPORTED_MODULE_8__.truncateSoftly)(result.avgPoints, 2)}`)\n                        .css('color', (0,_utils_color__WEBPACK_IMPORTED_MODULE_6__.getPointsColor)(result.avgPoints));\n                }\n                else {\n                    $columnContent.text('-');\n                }\n                $(powerColumnMap[opponentId]).empty().append($columnContent);\n            });\n        };\n        replacePowerViewWithSimResult();\n        function replaceHHLaguesPlusPlus() {\n            (0,_interop_hh_plus_plus__WEBPACK_IMPORTED_MODULE_10__.getHHPlusPlus)().then(HHPlusPlus => {\n                if (HHPlusPlus == null)\n                    return;\n                const opponent_fighter = window.opponent_fighter;\n                if (opponent_fighter?.sim != null) {\n                    new HHPlusPlus.League().display(opponent_fighter.sim);\n                }\n            });\n        }\n        if (config.replaceHHLeaguesPlusPlus)\n            replaceHHLaguesPlusPlus();\n        const header = $powerHeader[0];\n        if (header != null) {\n            const observer = new MutationObserver(() => {\n                replacePowerDataWithSimResult();\n                replacePowerViewWithSimResult();\n                if (config.replaceHHLeaguesPlusPlus)\n                    replaceHHLaguesPlusPlus();\n            });\n            observer.observe(header, { childList: true, subtree: true });\n        }\n        const table = document.querySelector('.league_table .data-list');\n        if (table != null) {\n            const observer = new MutationObserver(() => {\n                replacePowerDataWithSimResult();\n                replacePowerViewWithSimResult();\n            });\n            observer.observe(table, { childList: true });\n        }\n    }\n}\nfunction updateBoosters(window) {\n    const { Hero, opponents_list, server_now_ts } = window;\n    const playerId = Hero.infos.id;\n    const player = opponents_list.find(e => +e.player.id_fighter === playerId);\n    if (player == null)\n        return;\n    const activeBoosters = player.boosters.filter(e => +e.lifetime > server_now_ts || +e.usages_remaining > 0);\n    const oldBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.loadBoosterData)();\n    const newBoosterData = (0,_data_booster__WEBPACK_IMPORTED_MODULE_1__.getBoosterData)(activeBoosters);\n    newBoosterData.mythic = {\n        ...oldBoosterData.mythic,\n        leagues: 1,\n        ...newBoosterData.mythic,\n    };\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_3__.saveBoosterData)(newBoosterData);\n    return newBoosterData;\n}\nasync function updateOpponentTeam() {\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_5__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        const update = () => {\n            const config = (0,_interop_hh_plus_plus_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n            if (config.replaceHHLeaguesPlusPlus) {\n                const opponent_fighter = window.opponent_fighter;\n                if (opponent_fighter != null) {\n                    (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.saveOpponentTeamData)({\n                        battleType: 'leagues',\n                        opponentId: '',\n                        team: opponent_fighter.player.team,\n                    });\n                    return;\n                }\n            }\n            (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.saveOpponentTeamData)(null);\n        };\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/tower-of-fame.ts?");

/***/ }),

/***/ "./src/page/troll-pre-battle.ts":
/*!**************************************!*\
  !*** ./src/page/troll-pre-battle.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TrollPreBattlePage: () => (/* binding */ TrollPreBattlePage)\n/* harmony export */ });\n/* harmony import */ var _dom_battle_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom/battle-table */ \"./src/dom/battle-table.ts\");\n/* harmony import */ var _dom_chance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/chance */ \"./src/dom/chance.ts\");\n/* harmony import */ var _simulator_battle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../simulator/battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _simulator_booster__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../simulator/booster */ \"./src/simulator/booster.ts\");\n/* harmony import */ var _simulator_fighter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../simulator/fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _store_booster__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/booster */ \"./src/store/booster.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/async */ \"./src/utils/async.ts\");\n/* harmony import */ var _utils_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/page */ \"./src/utils/page.ts\");\n/* harmony import */ var _base_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./base/common */ \"./src/page/base/common.ts\");\n\n\n\n\n\n\n\n\n\n\nfunction assertTrollPreBattleWindow(window) {\n    (0,_base_common__WEBPACK_IMPORTED_MODULE_9__.assertGameWindow)(window);\n    const { hero_data, opponent_fighter } = window;\n    if (hero_data == null)\n        throw new Error('hero_data is not found.');\n    if (opponent_fighter == null)\n        throw new Error('opponent_fighter is not found.');\n}\nasync function TrollPreBattlePage(window) {\n    if (!(0,_utils_page__WEBPACK_IMPORTED_MODULE_8__.checkPage)('/troll-pre-battle.html'))\n        return;\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_7__.beforeGameInited)();\n    assertTrollPreBattleWindow(window);\n    updateMythicBooster(window);\n    saveOpponentTeam(window);\n    addChance(window);\n}\nfunction updateMythicBooster(window) {\n    const { hero_data, opponent_fighter } = window;\n    const multiplier = (0,_simulator_booster__WEBPACK_IMPORTED_MODULE_3__.calcMythicBoosterMultiplierFromFighters)(hero_data, opponent_fighter.player);\n    const mythicBoosterData = (0,_store_booster__WEBPACK_IMPORTED_MODULE_5__.loadMythicBoosterBonus)();\n    mythicBoosterData.trolls = multiplier;\n    (0,_store_booster__WEBPACK_IMPORTED_MODULE_5__.saveMythicBoosterBonus)(mythicBoosterData);\n}\nasync function saveOpponentTeam(window) {\n    const { opponent_fighter, localStorageSetItem } = window;\n    const opponentId = (0,_utils_page__WEBPACK_IMPORTED_MODULE_8__.getOpponentIdFromUrl)();\n    const opponentTeam = opponent_fighter.player.team;\n    const update = () => {\n        localStorageSetItem('battle_type', 'trolls');\n        localStorageSetItem('troll_id', opponentId);\n        (0,_store_team__WEBPACK_IMPORTED_MODULE_6__.saveOpponentTeamData)({\n            battleType: 'trolls',\n            opponentId,\n            team: opponentTeam,\n        });\n    };\n    update();\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_7__.afterGameInited)();\n    const button = document.getElementById('change_team');\n    if (button != null) {\n        button.addEventListener('click', update, true);\n        button.addEventListener('auxclick', update, true);\n    }\n}\nasync function addChance(window) {\n    const { hero_data, opponent_fighter } = window;\n    const { player, opponent } = (0,_simulator_fighter__WEBPACK_IMPORTED_MODULE_4__.calcBattlersFromFighters)(hero_data, opponent_fighter.player);\n    const resultPromise = (0,_simulator_battle__WEBPACK_IMPORTED_MODULE_2__.simulateFromBattlers)('Chance', player, opponent);\n    await (0,_utils_async__WEBPACK_IMPORTED_MODULE_7__.afterGameInited)();\n    const chanceView = new _dom_chance__WEBPACK_IMPORTED_MODULE_1__.ChanceView();\n    chanceView.updateAsync(resultPromise);\n    chanceView.setTooltip((0,_dom_battle_table__WEBPACK_IMPORTED_MODULE_0__.createBattleTable)(player, opponent));\n    $('.opponent .icon-area').before(chanceView.getElement().addClass('sim-left'));\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/page/troll-pre-battle.ts?");

/***/ }),

/***/ "./src/simulator/battle.ts":
/*!*********************************!*\
  !*** ./src/simulator/battle.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simulateFromBattlers: () => (/* binding */ simulateFromBattlers),\n/* harmony export */   simulateFromFighters: () => (/* binding */ simulateFromFighters),\n/* harmony export */   simulateFromTeams: () => (/* binding */ simulateFromTeams)\n/* harmony export */ });\n/* harmony import */ var _fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fighter */ \"./src/simulator/fighter.ts\");\n/* harmony import */ var _team__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./team */ \"./src/simulator/team.ts\");\n\n\nconst workerScript = (() => {\n    const simulatorMap = {\n        FastChance: simulateFastChance,\n        FastPoints: simulateFastPoints,\n        Chance: simulateChance,\n        Points: simulatePoints,\n        Standard: simulateStandard,\n        Full: simulateFull,\n    };\n    self.addEventListener('message', e => {\n        const { id, type, args } = e.data;\n        try {\n            const f = simulatorMap[type];\n            const ret = f(args[0], args[1]);\n            self.postMessage({ id, ret });\n        }\n        catch (error) {\n            self.postMessage({ id, error });\n        }\n    });\n    function simulateFastChance(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        return Math.max(0, Math.min(1, result));\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            return 1;\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            return 0;\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return xResult * xChance + yResult * yChance;\n        }\n    }\n    function simulateFastPoints(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        return Math.max(3, Math.min(25, result));\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            return Math.ceil((10 * playerEgo) / playerMaxEgo) + 15;\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            return Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo) + 3;\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return xResult * xChance + yResult * yChance;\n        }\n    }\n    function simulateChance(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        result.chance = Math.max(0, Math.min(1, result.chance));\n        return result;\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            return {\n                chance: 1,\n                alwaysWin: true,\n                neverWin: false,\n            };\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            return {\n                chance: 0,\n                alwaysWin: false,\n                neverWin: true,\n            };\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return {\n                chance: xResult.chance * xChance + yResult.chance * yChance,\n                alwaysWin: xResult.alwaysWin && yResult.alwaysWin,\n                neverWin: xResult.neverWin && yResult.neverWin,\n            };\n        }\n    }\n    function simulatePoints(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        result.avgPoints = Math.max(result.minPoints, Math.min(25, result.avgPoints));\n        return result;\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            const points = Math.ceil((10 * playerEgo) / playerMaxEgo) + 15;\n            return createResult(points);\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            const points = Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo) + 3;\n            return createResult(points);\n        }\n        function createResult(points) {\n            return {\n                avgPoints: points,\n                minPoints: points,\n            };\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return {\n                avgPoints: xResult.avgPoints * xChance + yResult.avgPoints * yChance,\n                minPoints: Math.min(xResult.minPoints, yResult.minPoints),\n            };\n        }\n    }\n    function simulateStandard(player, opponent) {\n        const result = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        result.chance = Math.max(0, Math.min(1, result.chance));\n        result.avgPoints = Math.max(result.minPoints, Math.min(result.maxPoints, result.avgPoints));\n        return result;\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            const points = Math.ceil((10 * playerEgo) / playerMaxEgo) + 15;\n            return createResult(1, true, false, points);\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            const points = Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo) + 3;\n            return createResult(0, false, true, points);\n        }\n        function createResult(chance, alwaysWin, neverWin, points) {\n            return {\n                chance,\n                alwaysWin,\n                neverWin,\n                avgPoints: points,\n                minPoints: points,\n                maxPoints: points,\n            };\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return {\n                chance: xResult.chance * xChance + yResult.chance * yChance,\n                alwaysWin: xResult.alwaysWin && yResult.alwaysWin,\n                neverWin: xResult.neverWin && yResult.neverWin,\n                avgPoints: xResult.avgPoints * xChance + yResult.avgPoints * yChance,\n                minPoints: Math.min(xResult.minPoints, yResult.minPoints),\n                maxPoints: Math.max(xResult.maxPoints, yResult.maxPoints),\n            };\n        }\n    }\n    function simulateFull(player, opponent) {\n        const compressedPointsTable = simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult);\n        const sumProbability = compressedPointsTable.reduce((p, c) => p + c);\n        const pointsTable = [0, 0, 0, ...compressedPointsTable.map(p => p / sumProbability)];\n        const [loss, win] = [\n            [3, 14],\n            [15, 26],\n        ].map(args => pointsTable.slice(...args).reduce((p, c) => p + c));\n        const alwaysWin = loss <= 0;\n        const neverWin = win <= 0;\n        const avgPoints = pointsTable.reduce((p, c, i) => p + c * i, 0);\n        const minPoints = pointsTable.findIndex(p => p > 0);\n        const maxPoints = pointsTable.findLastIndex(p => p > 0);\n        return {\n            chance: win / (win + loss),\n            alwaysWin,\n            neverWin,\n            avgPoints,\n            minPoints,\n            maxPoints,\n            pointsTable,\n        };\n        function createPlayerWinResult(playerEgo, playerMaxEgo) {\n            const points = Math.ceil((10 * playerEgo) / playerMaxEgo) + 12; // (-3): [15, 25] => [12, 22]\n            return createResult(points);\n        }\n        function createOpponentWinResult(opponentEgo, opponentMaxEgo) {\n            const points = Math.ceil((10 * (opponentMaxEgo - opponentEgo)) / opponentMaxEgo); // (-3): [3, 13] => [0, 10]\n            return createResult(points);\n        }\n        function createResult(points) {\n            const pointsTable = Array(23).fill(0);\n            pointsTable[points] = 1;\n            return pointsTable;\n        }\n        function mergeResult(xResult, xChance, yResult, yChance) {\n            return xResult.map((x, i) => x * xChance + yResult[i] * yChance);\n        }\n    }\n    function simulate(player, opponent, createPlayerWinResult, createOpponentWinResult, mergeResult) {\n        const playerData = { ...player, win: createPlayerWinResult };\n        const opponentData = { ...opponent, win: createOpponentWinResult };\n        const result = attack(playerData, player.ego, player.attack, player.defense, 0, opponentData, opponent.ego, opponent.attack, opponent.defense, 0);\n        return result;\n        function attack(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill) {\n            attackerAttack *= attacker.attackMultiplier;\n            defenderDefense *= attacker.defenseMultiplier;\n            const baseDamage = Math.max(0, Math.floor(attackerAttack - defenderDefense));\n            const baseResult = hit(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, baseDamage);\n            const critDamage = baseDamage * attacker.critMultiplier;\n            const critResult = hit(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, critDamage);\n            return mergeResult(baseResult, attacker.baseHitChance, critResult, attacker.critHitChance);\n        }\n        function hit(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, damage) {\n            const roundedDamage = Math.ceil(damage);\n            // Check defender shield\n            let shieldDamage = 0;\n            if (defender.shield && 1 <= defenderSkill && defenderSkill <= defender.shieldEndurance) {\n                const remainingShieald = defender.shieldEndurance - (defenderSkill - 1);\n                shieldDamage = Math.min(roundedDamage, remainingShieald);\n                defenderSkill += shieldDamage;\n            }\n            // Damage defender ego\n            const egoDamage = roundedDamage - shieldDamage;\n            defenderEgo -= Math.ceil(egoDamage);\n            // Heal attacker ego\n            attackerEgo += Math.ceil(egoDamage * attacker.healing);\n            attackerEgo = Math.min(attackerEgo, attacker.ego);\n            // Check attacker execution\n            // Shield will have no effect on execution.\n            if (attacker.execute && defenderEgo <= defender.deathThreshold) {\n                defenderEgo = 0;\n            }\n            // Check defender reflection\n            if (defender.reflect && 1 <= defenderSkill && defenderSkill <= 2) {\n                // Skip reflection while stunned\n                const isDefenderStunned = attacker.stun && attackerSkill == 1;\n                if (!isDefenderStunned) {\n                    defenderSkill++;\n                    // Defender does not have shield and reflect at the same time, so shieldDamage is not required.\n                    // Reflected damage daes not include execution damage now.\n                    const reflectedDamage = Math.ceil(egoDamage * defender.reflect);\n                    // Check attacker shield\n                    let reflectedDamageToShield = 0;\n                    if (attacker.shield && 1 <= attackerSkill && attackerSkill <= attacker.shieldEndurance) {\n                        const remainingAttackerShieald = attacker.shieldEndurance - (attackerSkill - 1);\n                        reflectedDamageToShield = Math.min(reflectedDamage, remainingAttackerShieald);\n                        attackerSkill += reflectedDamageToShield;\n                    }\n                    // Damage attacker ego from reflection\n                    const reflectedDamageToEgo = reflectedDamage - reflectedDamageToShield;\n                    attackerEgo -= reflectedDamageToEgo;\n                    if (attackerEgo <= 0) {\n                        // TODO: I suspect the game do nothing.\n                    }\n                }\n            }\n            // Attacker win\n            if (defenderEgo <= 0)\n                return attacker.win(attackerEgo, attacker.ego);\n            // Check if attacker stun triggerd (defender is stunned)\n            if (attacker.stun && attackerSkill === 1) {\n                attackerSkill++;\n                // Skip defender attack\n                return attack(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill);\n            }\n            // Trigger attacker reflect\n            if (attacker.reflect && attackerSkill === 0)\n                attackerSkill = 1;\n            // Trigger attacker shield\n            if (attacker.shield && attackerSkill === 0)\n                attackerSkill = 1;\n            // Next turn (defender's attack)\n            const result = attack(defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill, attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill);\n            // Check attacker stun\n            if (attacker.stun && attackerSkill === 0) {\n                attackerSkill = 1;\n                const stunningResult = attack(attacker, attackerEgo, attackerAttack, attackerDefense, attackerSkill, defender, defenderEgo, defenderAttack, defenderDefense, defenderSkill);\n                return mergeResult(stunningResult, attacker.stun, result, 1 - attacker.stun);\n            }\n            return result;\n        }\n    }\n})\n    .toString()\n    .match(/{.+}/s)[0];\nconst workerBlob = new Blob([workerScript], { type: 'text/javascript' });\nconst workerURL = URL.createObjectURL(workerBlob);\nconst maxWorkers = navigator?.hardwareConcurrency ?? 1;\nconst workerList = [];\nconst waiterMap = new Map();\nlet workerIndex = 0;\nlet workerTaskIndex = 0;\nfunction getWorker() {\n    let worker = workerList[workerIndex];\n    if (worker == null) {\n        worker = new Worker(workerURL);\n        const onMessage = ({ data }) => {\n            const { id, ret, error } = data;\n            if (ret != null) {\n                waiterMap.get(id).resolve(ret);\n            }\n            else {\n                waiterMap.get(id).reject(error);\n            }\n            waiterMap.delete(id);\n        };\n        const onError = (error) => {\n            throw error;\n        };\n        worker.addEventListener('message', onMessage);\n        worker.addEventListener('messageerror', onError);\n        worker.addEventListener('error', onError);\n        workerList[workerIndex] = worker;\n    }\n    workerIndex = (workerIndex + 1) % maxWorkers;\n    return worker;\n}\nasync function workerRun(type, args) {\n    const id = workerTaskIndex++;\n    const message = { id, type, args };\n    getWorker().postMessage(message);\n    return new Promise((resolve, reject) => {\n        waiterMap.set(id, { resolve, reject });\n    });\n}\nasync function simulateFromBattlers(type, player, opponent) {\n    return await workerRun(type, [player, opponent]);\n}\nasync function simulateFromFighters(type, playerFighter, opponentFighter) {\n    const player = (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.calcBattlerFromFighters)(playerFighter, opponentFighter);\n    const opponent = (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.calcBattlerFromFighters)(opponentFighter, playerFighter);\n    return await simulateFromBattlers(type, player, opponent);\n}\nasync function simulateFromTeams(type, playerTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n    const player = (0,_team__WEBPACK_IMPORTED_MODULE_1__.calcBattlerFromTeams)(playerTeam, opponentTeam, mythicBoosterMultiplier);\n    const opponent = (0,_team__WEBPACK_IMPORTED_MODULE_1__.calcBattlerFromTeams)(opponentTeam, playerTeam);\n    return await simulateFromBattlers(type, player, opponent);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/battle.ts?");

/***/ }),

/***/ "./src/simulator/booster.ts":
/*!**********************************!*\
  !*** ./src/simulator/booster.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcMythicBoosterMultiplierFromFighters: () => (/* binding */ calcMythicBoosterMultiplierFromFighters),\n/* harmony export */   simulateBoosterCombinationMinimized: () => (/* binding */ simulateBoosterCombinationMinimized),\n/* harmony export */   simulateBoosterCombinationWithAME: () => (/* binding */ simulateBoosterCombinationWithAME),\n/* harmony export */   simulateBoosterCombinationWithHeadband: () => (/* binding */ simulateBoosterCombinationWithHeadband),\n/* harmony export */   simulateGinsengCaracs: () => (/* binding */ simulateGinsengCaracs)\n/* harmony export */ });\n/* harmony import */ var _data_fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/fighter */ \"./src/data/fighter.ts\");\n/* harmony import */ var _data_hero__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/hero */ \"./src/data/hero.ts\");\n/* harmony import */ var _page_edit_team__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../page/edit-team */ \"./src/page/edit-team.ts\");\n/* harmony import */ var _store_hero__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/hero */ \"./src/store/hero.ts\");\n/* harmony import */ var _store_team__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/team */ \"./src/store/team.ts\");\n/* harmony import */ var _battle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./battle */ \"./src/simulator/battle.ts\");\n/* harmony import */ var _team__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./team */ \"./src/simulator/team.ts\");\n\n\n\n\n\n\n\nfunction calcMythicBoosterMultiplierFromFighters(playerFighter, opponentFighter) {\n    const counterBonus = (0,_team__WEBPACK_IMPORTED_MODULE_6__.calcCounterBonus)(playerFighter.team, opponentFighter.team);\n    const percentage = Math.round((100 * playerFighter.damage) / playerFighter.team.caracs.damage / counterBonus);\n    return percentage / 100;\n}\nfunction simulateGinsengCaracs(hero, armorCaracs) {\n    const heroClass = hero.infos.class;\n    const haremEndurance = hero.infos.harem_endurance;\n    const primaryKey = _data_hero__WEBPACK_IMPORTED_MODULE_1__.HeroCaracsKeys[(heroClass + 2) % 3];\n    const secondaryKey = _data_hero__WEBPACK_IMPORTED_MODULE_1__.HeroCaracsKeys[(heroClass + 1) % 3];\n    const tertialyKey = _data_hero__WEBPACK_IMPORTED_MODULE_1__.HeroCaracsKeys[(heroClass + 0) % 3];\n    const getPrimary = (caracs) => caracs[primaryKey];\n    const getSecondarySum = (caracs) => caracs[secondaryKey] + caracs[tertialyKey];\n    return [...Array(5)].map((_, ginseng) => {\n        const clubBonus = getClubBonus(hero);\n        const ginsengBonus = (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.toHeroCaracs)(Array(3).fill(0.06 * ginseng));\n        const bonus = (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.addHeroCaracs)(clubBonus, ginsengBonus);\n        const levelCaracs = getLevelBasedCaracs(hero);\n        const marketCaracs = getMarketBoughtCaracs(hero);\n        const baseCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.addHeroCaracs)(levelCaracs, marketCaracs);\n        const sumCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.addHeroCaracs)(baseCaracs, armorCaracs);\n        const bonusCaracs = new _data_hero__WEBPACK_IMPORTED_MODULE_1__.HeroCaracsCalculator(sumCaracs).multiply(bonus).truncate().result();\n        const adjustedCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.addHeroCaracs)(armorCaracs, bonusCaracs);\n        let endurance = (getPrimary(baseCaracs) * 4 + armorCaracs.endurance + haremEndurance) * (1 + bonus.endurance);\n        endurance += getPrimary(adjustedCaracs) * 4;\n        endurance = Math.floor(endurance);\n        let harmony = (getSecondarySum(baseCaracs) / 2 + armorCaracs.chance) * (1 + bonus.chance);\n        harmony += getSecondarySum(adjustedCaracs) / 2;\n        harmony = Math.round(harmony);\n        const totalCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.addHeroCaracs)(sumCaracs, bonusCaracs);\n        totalCaracs.endurance = endurance;\n        totalCaracs.chance = harmony;\n        const finalCaracs = (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.truncateHeroCaracs)(totalCaracs);\n        return {\n            damage: getPrimary(finalCaracs),\n            defense: getSecondarySum(finalCaracs) * 0.25,\n            ego: finalCaracs.endurance,\n            chance: finalCaracs.chance,\n        };\n    });\n}\nfunction getLevelBasedCaracs(hero) {\n    const infos = hero.infos;\n    const level = infos.level;\n    const heroClass = infos.class;\n    const perLevel = [5, 7, 9, 5, 7];\n    return (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.toHeroCaracs)([\n        level * perLevel[3 - heroClass],\n        level * perLevel[4 - heroClass],\n        level * perLevel[5 - heroClass], // Know-how\n    ]);\n}\nfunction getMarketBoughtCaracs(hero) {\n    return (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.toHeroCaracs)(hero.infos);\n}\nfunction getClubBonus(hero) {\n    const clubUpgrades = hero.club?.upgrades_data;\n    if (clubUpgrades == null)\n        return (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.toHeroCaracs)({});\n    return (0,_data_hero__WEBPACK_IMPORTED_MODULE_1__.toHeroCaracs)(_data_hero__WEBPACK_IMPORTED_MODULE_1__.ClubUpgradesKeys.map(key => clubUpgrades[key].level / 200));\n}\nfunction simulateBoosterCombination(f) {\n    return Promise.all([...Array(2)].flatMap((_, mythic) => [...Array(5)].flatMap((_, cordyceps) => [...Array(5 - cordyceps)].map((_, chlorella) => {\n        const ginseng = 4 - cordyceps - chlorella;\n        const boosterCounts = { ginseng, chlorella, cordyceps, mythic };\n        return f(boosterCounts).then(result => ({ boosterCounts, result }));\n    }))));\n}\nfunction simulateBoosterCombinationMinimized(f) {\n    return Promise.all([...Array(2)].flatMap((_, mythic) => [...Array(5)].flatMap((_, cordyceps) => Promise.all([...Array(5 - cordyceps)].map((_, chlorella) => {\n        const ginseng = 4 - cordyceps - chlorella;\n        const boosterCounts = { ginseng, chlorella, cordyceps, mythic };\n        return f(boosterCounts).then(result => ({ boosterCounts, result }));\n    })).then(results => results.reduce((p, c) => (p.result > c.result ? p : c))))));\n}\nasync function getTeamParams(team) {\n    if (team.id_team == null)\n        return;\n    const teamId = team.id_team;\n    const teamParamsList = (0,_store_team__WEBPACK_IMPORTED_MODULE_4__.loadTeamParams)();\n    const teamParams = teamParamsList.find(e => e.teamId === +teamId);\n    if (teamParams?.caracs != null && (0,_data_fighter__WEBPACK_IMPORTED_MODULE_0__.equalsFighterCaracs)(teamParams.caracs, team.caracs)) {\n        return teamParams;\n    }\n    if (window.Hero == null)\n        return;\n    return await (0,_page_edit_team__WEBPACK_IMPORTED_MODULE_2__.fetchTeamParams)(teamId, window.Hero);\n}\nasync function simulateBoosterCombinationWithHeadband(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_3__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        return [];\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        return [];\n    return simulateBoosterCombination(async (boosterCounts) => {\n        const { ginseng, chlorella, cordyceps, mythic } = boosterCounts;\n        const heroCaracs = ginsengCaracs[ginseng];\n        const caracs = new _data_fighter__WEBPACK_IMPORTED_MODULE_0__.FighterCaracsCalculator(heroCaracs)\n            .multiply(teamParams.multiplier)\n            .add(teamParams.addend)\n            .multiply((0,_data_fighter__WEBPACK_IMPORTED_MODULE_0__.toFighterCaracsBonus)({\n            damage: 1 + 0.1 * cordyceps,\n            ego: 1 + 0.1 * chlorella,\n        }))\n            .round()\n            .result();\n        const calculatedTeam = { ...playerTeam, caracs };\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_5__.simulateFromTeams)('FastChance', calculatedTeam, opponentTeam, 1 + 0.25 * mythic);\n    });\n}\nasync function simulateBoosterCombinationWithAME(playerTeam, opponentTeam) {\n    const ginsengCaracs = (0,_store_hero__WEBPACK_IMPORTED_MODULE_3__.loadGinsengCaracs)();\n    if (ginsengCaracs == null)\n        return [];\n    const teamParams = await getTeamParams(playerTeam);\n    if (teamParams == null)\n        return [];\n    return simulateBoosterCombination(async (boosterCounts) => {\n        const { ginseng, chlorella, cordyceps, mythic } = boosterCounts;\n        const heroCaracs = ginsengCaracs[ginseng];\n        const caracs = new _data_fighter__WEBPACK_IMPORTED_MODULE_0__.FighterCaracsCalculator(heroCaracs)\n            .multiply(teamParams.multiplier)\n            .add(teamParams.addend)\n            .multiply((0,_data_fighter__WEBPACK_IMPORTED_MODULE_0__.toFighterCaracsBonus)({\n            damage: 1 + 0.1 * cordyceps,\n            ego: 1 + 0.1 * chlorella,\n        }))\n            .round()\n            .result();\n        const calculatedTeam = { ...playerTeam, caracs };\n        return (0,_battle__WEBPACK_IMPORTED_MODULE_5__.simulateFromTeams)('FastPoints', calculatedTeam, opponentTeam, 1 + 0.15 * mythic);\n    });\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/booster.ts?");

/***/ }),

/***/ "./src/simulator/fighter.ts":
/*!**********************************!*\
  !*** ./src/simulator/fighter.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcBattlerFromFighters: () => (/* binding */ calcBattlerFromFighters),\n/* harmony export */   calcBattlersFromFighters: () => (/* binding */ calcBattlersFromFighters)\n/* harmony export */ });\nfunction calcBattlerFromFighters(fighter, opponent) {\n    const { team } = fighter;\n    const { girls } = team;\n    const synergyBonuses = Object.fromEntries(team.synergies.map(e => [e.element.type, e.bonus_multiplier]));\n    let chance = (0.3 * fighter.chance) / (fighter.chance + opponent.chance);\n    chance += synergyBonuses.stone;\n    const chanceDominations = ['darkness', 'light', 'psychic'];\n    const opponentTeamTheme = opponent.team.theme;\n    team.theme_elements.forEach(e => {\n        if (chanceDominations.includes(e.type) && opponentTeamTheme.includes(e.domination)) {\n            chance += 0.2;\n        }\n    });\n    const getSkillPercentage = (id) => girls.map(e => e.skills[id]?.skill.percentage_value ?? 0).reduce((p, c) => p + c, 0) / 100;\n    const centerGirlSkills = girls[0]?.skills;\n    const get5thSkillPercentageFromGirl = (skills, id) => {\n        const skill = skills?.[id]?.skill;\n        return skill == null ? 0 : (skill.percentage_value ?? parseFloat(skill.display_value_text ?? 0)) / 100;\n    };\n    const get5thSkillPercentage = (id) => get5thSkillPercentageFromGirl(centerGirlSkills, id);\n    const ego = Math.ceil(fighter.remaining_ego);\n    const stun = get5thSkillPercentage(11);\n    const shield = get5thSkillPercentage(12);\n    const reflect = get5thSkillPercentage(13);\n    const execute = get5thSkillPercentage(14);\n    const opponentExecute = get5thSkillPercentageFromGirl(opponent.team.girls[0]?.skills, 14);\n    return {\n        attack: fighter.damage,\n        defense: fighter.defense,\n        ego,\n        baseHitChance: 1 - chance,\n        critHitChance: chance,\n        critMultiplier: 2 + synergyBonuses.fire,\n        healing: synergyBonuses.water,\n        attackMultiplier: 1 + getSkillPercentage(9),\n        defenseMultiplier: 1 + getSkillPercentage(10),\n        stun,\n        shield,\n        reflect,\n        execute,\n        shieldEndurance: Math.ceil(ego * shield),\n        deathThreshold: ego * opponentExecute,\n    };\n}\nfunction calcBattlersFromFighters(player, opponent) {\n    return {\n        player: calcBattlerFromFighters(player, opponent),\n        opponent: calcBattlerFromFighters(opponent, player),\n    };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/fighter.ts?");

/***/ }),

/***/ "./src/simulator/team.ts":
/*!*******************************!*\
  !*** ./src/simulator/team.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcBattlerFromTeams: () => (/* binding */ calcBattlerFromTeams),\n/* harmony export */   calcBattlersFromTeams: () => (/* binding */ calcBattlersFromTeams),\n/* harmony export */   calcCounterBonus: () => (/* binding */ calcCounterBonus)\n/* harmony export */ });\n/* harmony import */ var _fighter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fighter */ \"./src/simulator/fighter.ts\");\n\nfunction calcCounterBonus(fighterTeam, opponentTeam) {\n    const checklist = ['fire', 'nature', 'stone', 'sun', 'water'];\n    let multiplier = 1;\n    fighterTeam.theme_elements.forEach(e => {\n        if (opponentTeam.theme.includes(e.domination) && checklist.includes(e.domination)) {\n            multiplier += 0.1;\n        }\n    });\n    return multiplier;\n}\nfunction calcBattlerFromTeams(fighterTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n    const counterBonus = calcCounterBonus(fighterTeam, opponentTeam);\n    const damageMultiplier = counterBonus * mythicBoosterMultiplier;\n    const egoMultiplier = counterBonus;\n    const opponentSynergyBonuses = Object.fromEntries(opponentTeam.synergies.map(e => [e.element.type, e.bonus_multiplier]));\n    const defenseDecreasing = opponentSynergyBonuses.sun;\n    const caracs = fighterTeam.caracs;\n    return (0,_fighter__WEBPACK_IMPORTED_MODULE_0__.calcBattlerFromFighters)({\n        damage: Math.ceil(caracs.damage * damageMultiplier),\n        defense: caracs.defense - Math.ceil(caracs.defense * defenseDecreasing),\n        remaining_ego: Math.ceil(caracs.ego * egoMultiplier),\n        chance: caracs.chance,\n        team: fighterTeam,\n    }, {\n        chance: opponentTeam.caracs.chance,\n        team: opponentTeam,\n    });\n}\nfunction calcBattlersFromTeams(playerTeam, opponentTeam, mythicBoosterMultiplier = 1) {\n    return {\n        player: calcBattlerFromTeams(playerTeam, opponentTeam, mythicBoosterMultiplier),\n        opponent: calcBattlerFromTeams(opponentTeam, playerTeam),\n    };\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/simulator/team.ts?");

/***/ }),

/***/ "./src/store/booster.ts":
/*!******************************!*\
  !*** ./src/store/booster.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadBoosterBonus: () => (/* binding */ loadBoosterBonus),\n/* harmony export */   loadBoosterData: () => (/* binding */ loadBoosterData),\n/* harmony export */   loadMythicBoosterBonus: () => (/* binding */ loadMythicBoosterBonus),\n/* harmony export */   saveBoosterBonus: () => (/* binding */ saveBoosterBonus),\n/* harmony export */   saveBoosterData: () => (/* binding */ saveBoosterData),\n/* harmony export */   saveMythicBoosterBonus: () => (/* binding */ saveMythicBoosterBonus)\n/* harmony export */ });\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/storage */ \"./src/utils/storage.ts\");\n\nfunction saveBoosterData(boosterData) {\n    (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.setIntoLocalStorage)('HHBattleSimulator.BoosterData', {\n        normal: boosterData.normal,\n        mythic: boosterData.mythic,\n    });\n}\nfunction loadBoosterData() {\n    return (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.getFromLocalStorage)('HHBattleSimulator.BoosterData', {});\n}\nfunction saveMythicBoosterBonus(mythic) {\n    const boosterData = loadBoosterData();\n    boosterData.mythic = mythic;\n    saveBoosterData(boosterData);\n}\nfunction loadMythicBoosterBonus() {\n    return loadBoosterData().mythic ?? {};\n}\nfunction saveBoosterBonus(boosterBonus) {\n    const boosterData = loadBoosterData();\n    boosterData.normal = boosterBonus;\n    saveBoosterData(boosterData);\n}\nfunction loadBoosterBonus() {\n    return loadBoosterData().normal ?? null;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/booster.ts?");

/***/ }),

/***/ "./src/store/hero.ts":
/*!***************************!*\
  !*** ./src/store/hero.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadClassBonus: () => (/* binding */ loadClassBonus),\n/* harmony export */   loadGinsengCaracs: () => (/* binding */ loadGinsengCaracs),\n/* harmony export */   loadHeroData: () => (/* binding */ loadHeroData),\n/* harmony export */   saveClassBonus: () => (/* binding */ saveClassBonus),\n/* harmony export */   saveGinsengCaracs: () => (/* binding */ saveGinsengCaracs),\n/* harmony export */   saveHeroData: () => (/* binding */ saveHeroData)\n/* harmony export */ });\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/storage */ \"./src/utils/storage.ts\");\n\nfunction saveHeroData(boosterData) {\n    (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.setIntoLocalStorage)('HHBattleSimulator.HeroData', {\n        classBonus: boosterData.classBonus,\n        ginsengCaracs: boosterData.ginsengCaracs,\n    });\n}\nfunction loadHeroData() {\n    return (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.getFromLocalStorage)('HHBattleSimulator.HeroData', {});\n}\nfunction saveClassBonus(classBonus) {\n    const heroData = loadHeroData();\n    heroData.classBonus = classBonus;\n    saveHeroData(heroData);\n}\nfunction loadClassBonus() {\n    return loadHeroData().classBonus ?? null;\n}\nfunction saveGinsengCaracs(ginsengCaracs) {\n    const heroData = loadHeroData();\n    heroData.ginsengCaracs = ginsengCaracs;\n    saveHeroData(heroData);\n}\nfunction loadGinsengCaracs() {\n    return loadHeroData().ginsengCaracs ?? null;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/hero.ts?");

/***/ }),

/***/ "./src/store/team.ts":
/*!***************************!*\
  !*** ./src/store/team.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadOpponentTeamData: () => (/* binding */ loadOpponentTeamData),\n/* harmony export */   loadPlayerLeagueTeam: () => (/* binding */ loadPlayerLeagueTeam),\n/* harmony export */   loadTeamData: () => (/* binding */ loadTeamData),\n/* harmony export */   loadTeamParams: () => (/* binding */ loadTeamParams),\n/* harmony export */   saveOpponentTeamData: () => (/* binding */ saveOpponentTeamData),\n/* harmony export */   savePlayerLeagueTeam: () => (/* binding */ savePlayerLeagueTeam),\n/* harmony export */   saveTeamData: () => (/* binding */ saveTeamData),\n/* harmony export */   saveTeamParams: () => (/* binding */ saveTeamParams)\n/* harmony export */ });\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/storage */ \"./src/utils/storage.ts\");\n\nfunction saveTeamData(teamData) {\n    (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.setIntoLocalStorage)('HHBattleSimulator.TeamData', {\n        opponent: teamData.opponent,\n        league: teamData.league,\n        params: teamData.params,\n    });\n}\nfunction loadTeamData() {\n    return (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.getFromLocalStorage)('HHBattleSimulator.TeamData', {});\n}\nfunction saveOpponentTeamData(opponentTeamData) {\n    const teamData = loadTeamData();\n    teamData.opponent = opponentTeamData;\n    saveTeamData(teamData);\n}\nfunction loadOpponentTeamData() {\n    return loadTeamData().opponent ?? null;\n}\nfunction savePlayerLeagueTeam(team) {\n    const teamData = loadTeamData();\n    teamData.league = team ?? undefined;\n    saveTeamData(teamData);\n}\nfunction loadPlayerLeagueTeam() {\n    return loadTeamData().league ?? null;\n}\nfunction saveTeamParams(teamParams) {\n    const teamData = loadTeamData();\n    teamData.params ??= [];\n    teamData.params = [teamParams, ...teamData.params.filter(e => e.teamId !== teamParams.teamId)];\n    saveTeamData(teamData);\n}\nfunction loadTeamParams() {\n    return loadTeamData().params ?? [];\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/team.ts?");

/***/ }),

/***/ "./src/store/unused.ts":
/*!*****************************!*\
  !*** ./src/store/unused.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeUnusedData: () => (/* binding */ removeUnusedData)\n/* harmony export */ });\nfunction removeUnusedData() {\n    // v3\n    localStorage.removeItem('HHBattleSimulatorLastOpponentId');\n    localStorage.removeItem('HHBattleSimulatorLastOpponentTeam');\n    localStorage.removeItem('HHBattleSimulatorPlayerLeaguesTeam');\n    localStorage.removeItem('HHBattleSimulatorPlayerBoosterBonus');\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/store/unused.ts?");

/***/ }),

/***/ "./src/utils/async.ts":
/*!****************************!*\
  !*** ./src/utils/async.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   afterGameInited: () => (/* binding */ afterGameInited),\n/* harmony export */   beforeGameInited: () => (/* binding */ beforeGameInited)\n/* harmony export */ });\nconst beforeGameInitedPromise = new Promise(resolve => {\n    if (document.readyState === 'loading') {\n        window.addEventListener('DOMContentLoaded', () => resolve(), true);\n    }\n    else {\n        resolve();\n    }\n});\nconst afterGameInitedPromise = new Promise(resolve => {\n    beforeGameInitedPromise.then(() => {\n        $(() => resolve());\n    });\n});\nfunction beforeGameInited() {\n    return beforeGameInitedPromise;\n}\nfunction afterGameInited() {\n    return afterGameInitedPromise;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/async.ts?");

/***/ }),

/***/ "./src/utils/color.ts":
/*!****************************!*\
  !*** ./src/utils/color.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChanceColor: () => (/* binding */ getChanceColor),\n/* harmony export */   getMojoColor: () => (/* binding */ getMojoColor),\n/* harmony export */   getPointsColor: () => (/* binding */ getPointsColor)\n/* harmony export */ });\nfunction clamp(value, min, max) {\n    return value <= min ? min : value >= max ? max : value;\n}\nfunction getGammaCorrectedValue(value) {\n    return Math.round(255 * Math.sqrt(clamp(value, 0, 1)));\n}\nfunction getRatingColor(rate) {\n    const red = getGammaCorrectedValue(2 - 2 * rate);\n    const green = getGammaCorrectedValue(2 * rate);\n    return `rgb(${red}, ${green}, 0)`;\n}\nfunction getChanceColor(chance) {\n    const rate = clamp(chance, 0, 1) ** 3;\n    return getRatingColor(rate);\n}\nfunction getMojoColor(mojo) {\n    let rate = clamp(mojo + 10, 0, 40) / 40;\n    rate = 0.5 - 0.5 * Math.cos(rate ** 2 * Math.PI);\n    return getRatingColor(rate);\n}\nfunction getPointsColor(points) {\n    const rate = ((clamp(points, 3, 25) - 3) / 22) ** 3;\n    return getRatingColor(rate);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/color.ts?");

/***/ }),

/***/ "./src/utils/page.ts":
/*!***************************!*\
  !*** ./src/utils/page.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkPage: () => (/* binding */ checkPage),\n/* harmony export */   getOpponentIdFromUrl: () => (/* binding */ getOpponentIdFromUrl)\n/* harmony export */ });\nfunction checkPage(...args) {\n    const { pathname } = window.location;\n    return args.some(e => pathname.includes(e));\n}\nfunction getOpponentIdFromUrl() {\n    const id = location.search.match(/id_opponent=(\\d+)/)?.[1];\n    if (id == null)\n        throw new Error('id_opponent is not found from url.');\n    return id;\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/page.ts?");

/***/ }),

/***/ "./src/utils/storage.ts":
/*!******************************!*\
  !*** ./src/utils/storage.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFromLocalStorage: () => (/* binding */ getFromLocalStorage),\n/* harmony export */   setIntoLocalStorage: () => (/* binding */ setIntoLocalStorage)\n/* harmony export */ });\nfunction getFromLocalStorage(key, defaultValue) {\n    const value = localStorage.getItem(key);\n    if (value == null)\n        return defaultValue;\n    try {\n        const data = JSON.parse(value);\n        if (data != null && defaultValue != null && typeof data === 'object' && typeof defaultValue === 'object') {\n            return { ...defaultValue, ...data };\n        }\n        return data;\n    }\n    catch (e) {\n        return value;\n    }\n}\nfunction setIntoLocalStorage(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/storage.ts?");

/***/ }),

/***/ "./src/utils/string.ts":
/*!*****************************!*\
  !*** ./src/utils/string.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   toLeaguePointsPerFight: () => (/* binding */ toLeaguePointsPerFight),\n/* harmony export */   toPercentage: () => (/* binding */ toPercentage),\n/* harmony export */   toPreciseLeaguePointsPerFight: () => (/* binding */ toPreciseLeaguePointsPerFight),\n/* harmony export */   toRoundedNumber: () => (/* binding */ toRoundedNumber),\n/* harmony export */   truncateSoftly: () => (/* binding */ truncateSoftly)\n/* harmony export */ });\nfunction truncateSoftly(value, digit = 0) {\n    return (Math.floor(Math.round(value * 10 ** (digit + 1)) / 10) / 10 ** digit).toLocaleString();\n}\nfunction toRoundedNumber(value, digit = 0) {\n    return (Math.round(value * 10 ** digit) / 10 ** digit).toLocaleString();\n}\nfunction toPercentage(value) {\n    const percentage = value * 100;\n    if (percentage >= 100)\n        return '100%';\n    if (percentage >= 10)\n        return `${truncateSoftly(percentage, 1)}%`; // 10%-99.9%\n    if (percentage >= 0.01)\n        return `${truncateSoftly(percentage, 2)}%`; // 0.01%-9.99%\n    if (percentage >= 0)\n        return `${truncateSoftly(percentage, 3)}%`; // 0% or 0.001%-0.009%\n    return '0%';\n}\nfunction toLeaguePointsPerFight(value) {\n    if (value >= 25)\n        return '25';\n    if (value > 24.9)\n        return truncateSoftly(value, 3);\n    return truncateSoftly(value, 2);\n}\nfunction toPreciseLeaguePointsPerFight(value) {\n    if (value >= 25)\n        return '25';\n    if (value > 24.9)\n        return (25 - parseFloat((25 - value).toPrecision(2))).toLocaleString();\n    return truncateSoftly(value, 2);\n}\nfunction capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/string.ts?");

/***/ }),

/***/ "./src/utils/style.ts":
/*!****************************!*\
  !*** ./src/utils/style.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addStyle: () => (/* binding */ addStyle)\n/* harmony export */ });\n/* harmony import */ var _async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async */ \"./src/utils/async.ts\");\n\nasync function addStyle(css) {\n    await (0,_async__WEBPACK_IMPORTED_MODULE_0__.beforeGameInited)();\n    const { IMAGES_URL, SITE_ROOT } = window;\n    if (typeof IMAGES_URL === 'string') {\n        css = css.replaceAll('${IMAGES_URL}', IMAGES_URL);\n    }\n    if (typeof SITE_ROOT === 'string') {\n        css = css.replaceAll('${SITE_ROOT}', SITE_ROOT);\n    }\n    $(document.head).append(`<style>${css}</style>`);\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/style.ts?");

/***/ }),

/***/ "./src/utils/table.ts":
/*!****************************!*\
  !*** ./src/utils/table.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   column: () => (/* binding */ column),\n/* harmony export */   columns: () => (/* binding */ columns),\n/* harmony export */   row: () => (/* binding */ row)\n/* harmony export */ });\nfunction column(span, content) {\n    return span >= 2 ? `<td colspan=\"${span}\">${content}</td>` : `<td>${content}</td>`;\n}\nfunction columns(span, contents) {\n    return contents.map(e => column(span, e)).join('');\n}\nfunction row(...args) {\n    return ['<tr>', ...args, '</tr>'].join('');\n}\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/utils/table.ts?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _utils_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/style */ \"./src/utils/style.ts\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./main */ \"./src/main.ts\");\n\r\n\r\n\r\n\r\n(() => {\r\n    (0,_utils_style__WEBPACK_IMPORTED_MODULE_1__.addStyle)(_style_css__WEBPACK_IMPORTED_MODULE_0__);\r\n    (0,_main__WEBPACK_IMPORTED_MODULE_2__.main)();\r\n})();\r\n\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/index.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((module) => {

eval("module.exports = \".sim-result{width:max-content;height:0;position:relative;bottom:1.25rem;line-height:1.25rem;text-align:center;text-shadow:-1px -1px 0 #000,-1px 1px 0 #000,1px -1px 0 #000,1px 1px 0 #000;z-index:1}.sim-result .sim-label{font-size:.75rem}.sim-result.sim-left{margin-right:60%}.sim-result.sim-right{margin-left:60%}.opponent .sim-result.sim-top{bottom:12rem}#season-arena .sim-result.sim-top{bottom:11.5rem;line-height:1rem}.sim-result.sim-pending{color:#999}.sim-mark{display:inline-block;width:1em;height:1em;margin:-.125em .25em .125em -1.25em;background-size:1em;vertical-align:bottom}table.sim-table{border-collapse:collapse;color:#fff;background-color:#000;font-size:.75rem;line-height:1rem}table.sim-table td{padding:.25rem;border:1px solid #999}.sim-column{text-align:center;text-wrap:nowrap}.sim-column .sim-mark{margin:.25em 0}.player_team_block{min-width:15rem}.sim-popup{position:absolute;left:0;right:0;top:5rem;z-index:8;margin:auto;width:min-content;height:min-content;color:#fff;background-color:#000;border:.75rem solid #000;border-radius:.5rem;text-align:left}.sim-popup .close-button{position:absolute;right:-.25rem;top:-.25rem;cursor:pointer}.sim-popup .caption{font-size:1rem;line-height:1.5rem;width:max-content;margin:0 3rem .75rem 0}.sim-popup .content{font-size:.75rem;line-height:1.5rem;width:max-content}table.sim-booster-table{border-collapse:separate;font-size:.75rem;line-height:1.5rem;width:max-content}table.sim-booster-table td span.sim-chance{margin:0 .5rem}table.sim-booster-table .sim-booster-slot{width:1.5rem;height:1.5rem;border:1px solid #fff}table.sim-booster-table .sim-booster-icon{width:100%;height:100%;background-size:contain}.sim-icon-button{display:block;width:2.5rem;height:2.5rem;background-size:contain;cursor:pointer}.sim-icon-ginseng{background-image:url('${IMAGES_URL}/pictures/items/B1.png')}.sim-icon-jujubes{background-image:url('${IMAGES_URL}/pictures/items/B2.png')}.sim-icon-chlorella{background-image:url('${IMAGES_URL}/pictures/items/B3.png')}.sim-icon-cordyceps{background-image:url('${IMAGES_URL}/pictures/items/B4.png')}.sim-icon-ame{background-image:url('${IMAGES_URL}/pictures/items/MB2.png')}.sim-icon-headband{background-image:url('${IMAGES_URL}/pictures/items/MB3.png')}\";\n\n//# sourceURL=webpack://hh-battle-simulator-v4/./src/style.css?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;